import{d as l,t as i}from"./index-kojKzVbx.js";const F=async r=>{try{const t=await l.post("/api/contacts",r);return i.success("Contact list created successfully"),t.data}catch(t){throw console.error("Contact Service Error:",t),i.error("Failed to create contact list"),t}},N=async(r,t)=>{var o,s,n,a,e,c,u;try{return(await l.get("/api/contacts",{params:{page:r,search:t}})).data}catch(d){throw console.error("Error fetching contacts:",d),((o=d.response)==null?void 0:o.status)===404||((a=(n=(s=d.response)==null?void 0:s.data)==null?void 0:n.message)==null?void 0:a.toLowerCase().includes("not found"))||((u=(c=(e=d.response)==null?void 0:e.data)==null?void 0:c.error)==null?void 0:u.toLowerCase().includes("not found"))||i.error("Failed to fetch contacts"),d}},L=async(r,t)=>{var o,s,n,a;try{const e={fullName:t.fullName,email:t.email,phoneNumber:t.phoneNumber};return(await l.patch(`/api/contacts/${r}`,e)).data}catch(e){console.error("Error updating contact:",e);const c=((s=(o=e.response)==null?void 0:o.data)==null?void 0:s.error)||((a=(n=e.response)==null?void 0:n.data)==null?void 0:a.message)||"Failed to update contact";throw i.error(c),e}},E=async r=>{var t,o;try{return(await l.delete(`/api/contacts/${r}`)).data}catch(s){console.error("Error deleting contact:",s);const n=((o=(t=s.response)==null?void 0:t.data)==null?void 0:o.message)||"Failed to delete contact";throw i.error(n),s}},$=async(r,t,o)=>{try{return(await l.get("/api/lists",{params:{page:r,search:t,includeDeleted:o}})).data}catch(s){throw console.error("Error fetching contact lists:",s),s}},b=async r=>{try{return(await l.get(`/api/lists/${r}`)).data}catch(t){throw console.error("Error fetching contact list:",t),i.error("Failed to fetch contact list"),t}},v=async(r,t,o)=>{var s,n,a,e,c,u,d,m,g,h,y;try{return(await l.get(`/api/lists/${r}/contacts`,{params:{page:t,search:o}})).data}catch(p){if(console.error("Error fetching list contacts:",p),!(((s=p.response)==null?void 0:s.status)===404||((e=(a=(n=p.response)==null?void 0:n.data)==null?void 0:a.message)==null?void 0:e.toLowerCase().includes("not found"))||((d=(u=(c=p.response)==null?void 0:c.data)==null?void 0:u.error)==null?void 0:d.toLowerCase().includes("not found")))){const f=((g=(m=p.response)==null?void 0:m.data)==null?void 0:g.error)||((y=(h=p.response)==null?void 0:h.data)==null?void 0:y.message)||"Failed to fetch list contacts";i.error(f)}throw p}},_=async r=>{var t,o,s,n;try{const a={list_name:r.listName,list_description:r.description,type:r.type||"General"},e=await l.post("/api/lists",a);return i.success("List created successfully"),e.data}catch(a){console.error("Error creating list:",a);const e=((o=(t=a.response)==null?void 0:t.data)==null?void 0:o.error)||((n=(s=a.response)==null?void 0:s.data)==null?void 0:n.message)||"Failed to create list";throw i.error(e),a}},x=async(r,t)=>{var o,s,n,a;try{const e={email:t.email,contact_number:t.phoneNumber||t.contact_number,first_name:t.fullName||t.firstName||""};return(await l.post(`/api/lists/${r}/contacts`,e)).data}catch(e){console.error("Error adding contact to list:",e);const c=((s=(o=e.response)==null?void 0:o.data)==null?void 0:s.error)||((a=(n=e.response)==null?void 0:n.data)==null?void 0:a.message)||"Failed to add contact to list";throw i.error(c),e}},A=async(r,t)=>{var o,s,n,a;try{const e=await l.delete(`/api/lists/${r}/contacts/${t}`);return i.success("Contact removed from list successfully"),e.data}catch(e){console.error("Error removing contact from list:",e);const c=((s=(o=e.response)==null?void 0:o.data)==null?void 0:s.error)||((a=(n=e.response)==null?void 0:n.data)==null?void 0:a.message)||"Failed to remove contact from list";throw i.error(c),e}};export{F as a,$ as b,_ as c,v as d,x as e,b as f,N as g,E as h,A as r,L as u};
//# sourceMappingURL=contactService-Bragvwuw.js.map
