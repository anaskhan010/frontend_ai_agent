{"version":3,"file":"CreatePhoneNumberForm-DkHs5gbb.js","sources":["../../src/components/PhoneNumbers/CreatePhoneNumberForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useMutation, useQueryClient, useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Loader2, Phone, Shield, Settings, AlertCircle, ChevronDown, ChevronRight, Bot } from \"lucide-react\";\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"@/components/ui/collapsible\";\nimport { toast } from \"sonner\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { createPhoneNumber, importTwilioPhoneNumber } from \"@/api/services/phoneNumbers/phoneNumberService\";\nimport { fetchAllAgentsComplete } from \"@/api/services/agents/agentService\";\nimport { useAuth } from \"@/context/AuthContext\";\nimport { usePermissions } from \"@/context/PermissionContext\";\nimport CreditGuard from \"@/components/Credits/CreditGuard\";\n\ninterface CreatePhoneNumberFormProps {\n  onSuccess?: () => void;\n  onCancel?: () => void;\n}\n\ninterface FormData {\n  provider: string;\n  phoneNumber: string;\n  name: string;\n  assistantId: string;\n  squadId: string;\n  workflowId: string;\n  fallbackDestination: string;\n  serverUrl: string;\n  serverUrlSecret: string;\n  // Provider-specific credentials\n  twilioAccountSid: string;\n  twilioAuthToken: string;\n  vonageApiKey: string;\n  vonageApiSecret: string;\n  telnyxApiKey: string;\n  telnyxApiSecret: string;\n  // VAPI specific\n  areaCode: string;\n  // Twilio import specific\n  twilioPhoneNumber: string;\n  twilioLabel: string;\n  smsEnabled: boolean;\n}\n\nconst CreatePhoneNumberForm: React.FC<CreatePhoneNumberFormProps> = ({\n  onSuccess,\n  onCancel\n}) => {\n  const { user } = useAuth();\n  const { isSuperAdmin } = usePermissions();\n\n  const [formData, setFormData] = useState<FormData>({\n    provider: \"vapi\", // Default to VAPI\n    phoneNumber: \"\",\n    name: \"\",\n    assistantId: \"\",\n    squadId: \"\",\n    workflowId: \"\",\n    fallbackDestination: \"\",\n    serverUrl: \"\",\n    serverUrlSecret: \"\",\n    twilioAccountSid: \"\",\n    twilioAuthToken: \"\",\n    vonageApiKey: \"\",\n    vonageApiSecret: \"\",\n    telnyxApiKey: \"\",\n    telnyxApiSecret: \"\",\n    areaCode: \"\",\n    twilioPhoneNumber: \"\",\n    twilioLabel: \"\",\n    smsEnabled: true\n  });\n\n  const [phoneNumberOption, setPhoneNumberOption] = useState<\"free\" | \"import\">(\"free\");\n\n  const [isAdvancedOpen, setIsAdvancedOpen] = useState(false);\n\n  const queryClient = useQueryClient();\n\n  // Fetch assistants based on user role\n  const { data: assistantsData, isLoading: assistantsLoading } = useQuery({\n    queryKey: [\"assistants\", \"complete\", user?.id],\n    queryFn: () => fetchAllAgentsComplete(\"\"),\n    retry: (failureCount, error: any) => {\n      // Don't retry for expected scenarios (normal for new users)\n      const expectedStatuses = [404, 204, 402]; // 402 = Payment Required (no credits)\n      if (expectedStatuses.includes(error?.response?.status)) {\n        return false;\n      }\n      return failureCount < 1; // Retry once for other errors\n    },\n    enabled: !!user?.id,\n  });\n\n  const assistants = assistantsData?.data || [];\n\n  const createMutation = useMutation({\n    mutationFn: (data: any) => {\n      if (phoneNumberOption === 'import') {\n        return importTwilioPhoneNumber(data);\n      } else {\n        return createPhoneNumber(data);\n      }\n    },\n    onSuccess: () => {\n      const message = phoneNumberOption === 'import'\n        ? \"Twilio phone number imported successfully!\"\n        : \"Phone number created successfully!\";\n      toast.success(message);\n      queryClient.invalidateQueries({ queryKey: [\"phoneNumbers\"] });\n      onSuccess?.();\n    },\n    onError: (error: any) => {\n      const message = phoneNumberOption === 'import'\n        ? \"Failed to import Twilio phone number\"\n        : \"Failed to create phone number\";\n      toast.error(error.response?.data?.message || message);\n    }\n  });\n\n  const handleInputChange = (field: keyof FormData, value: string | boolean) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const formatPhoneNumber = (phone: string) => {\n    // Simple phone number formatting\n    const cleaned = phone.replace(/\\D/g, '');\n    if (cleaned.length === 10) {\n      return `+1${cleaned}`;\n    } else if (cleaned.length === 11 && cleaned.startsWith('1')) {\n      return `+${cleaned}`;\n    }\n    return phone;\n  };\n\n  const handlePhoneNumberChange = (value: string) => {\n    const formatted = formatPhoneNumber(value);\n    handleInputChange('phoneNumber', formatted);\n  };\n\n  const validateForm = () => {\n    if (!formData.provider) {\n      toast.error(\"Please select a provider\");\n      return false;\n    }\n\n    // Validation for VAPI free numbers\n    if (formData.provider === 'vapi' && phoneNumberOption === 'free') {\n      if (!formData.areaCode || formData.areaCode.length !== 3) {\n        toast.error(\"Please enter a valid 3-digit area code\");\n        return false;\n      }\n    }\n\n    // Validation for Twilio import\n    if (phoneNumberOption === 'import') {\n      if (!formData.twilioPhoneNumber) {\n        toast.error(\"Please enter a Twilio phone number\");\n        return false;\n      }\n      if (!formData.twilioAccountSid) {\n        toast.error(\"Please enter Twilio Account SID\");\n        return false;\n      }\n      if (!formData.twilioAuthToken) {\n        toast.error(\"Please enter Twilio Auth Token\");\n        return false;\n      }\n      if (!formData.twilioLabel) {\n        toast.error(\"Please enter a label for the phone number\");\n        return false;\n      }\n\n      // Validate phone number format for Twilio\n      const phoneRegex = /^\\+[1-9]\\d{1,14}$/;\n      if (!phoneRegex.test(formData.twilioPhoneNumber)) {\n        toast.error(\"Phone number must be in E.164 format (e.g., +14155551234)\");\n        return false;\n      }\n    }\n\n    // Validation for other providers (existing logic)\n    if (formData.provider !== 'vapi' && phoneNumberOption !== 'import') {\n      if (!formData.phoneNumber) {\n        toast.error(\"Please enter a phone number\");\n        return false;\n      }\n      const phoneRegex = /^\\+[1-9]\\d{1,14}$/;\n      if (!phoneRegex.test(formData.phoneNumber)) {\n        toast.error(\"Phone number must be in E.164 format (e.g., +1234567890)\");\n        return false;\n      }\n    }\n\n    // Validate assistant selection\n    if (!formData.assistantId || formData.assistantId === \"unassigned\") {\n      toast.error(\"Please select an assistant\");\n      return false;\n    }\n\n    // Validate server URL if provided\n    if (formData.serverUrl) {\n      try {\n        new URL(formData.serverUrl);\n      } catch {\n        toast.error(\"Server URL must be a valid URL\");\n        return false;\n      }\n    }\n\n    // Validate fallback destination JSON if provided\n    if (formData.fallbackDestination) {\n      try {\n        JSON.parse(formData.fallbackDestination);\n      } catch {\n        toast.error(\"Fallback destination must be valid JSON\");\n        return false;\n      }\n    }\n\n    // Provider-specific validation\n    switch (formData.provider) {\n      case 'vapi':\n        // No additional validation needed for VAPI\n        break;\n      case 'twilio':\n        if (!formData.twilioAccountSid || !formData.twilioAuthToken) {\n          toast.error(\"Twilio Account SID and Auth Token are required\");\n          return false;\n        }\n        if (!formData.twilioAccountSid.startsWith('AC')) {\n          toast.error(\"Twilio Account SID should start with 'AC'\");\n          return false;\n        }\n        if (formData.twilioAccountSid.length !== 34) {\n          toast.error(\"Twilio Account SID should be 34 characters long\");\n          return false;\n        }\n        break;\n      case 'vonage':\n        if (!formData.vonageApiKey || !formData.vonageApiSecret) {\n          toast.error(\"Vonage API Key and Secret are required\");\n          return false;\n        }\n        break;\n      case 'telnyx':\n        if (!formData.telnyxApiKey) {\n          toast.error(\"Telnyx API Key is required\");\n          return false;\n        }\n        break;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    // Prepare form data for submission\n    let submitData;\n\n    if (phoneNumberOption === 'import') {\n      // For Twilio import - use the specific import service format\n      submitData = {\n        twilioPhoneNumber: formData.twilioPhoneNumber,\n        twilioAccountSid: formData.twilioAccountSid,\n        twilioAuthToken: formData.twilioAuthToken,\n        twilioLabel: formData.twilioLabel,\n        assistantId: formData.assistantId,\n        smsEnabled: formData.smsEnabled\n      };\n    } else {\n      // For VAPI free number or other providers\n      submitData = {\n        ...formData\n      };\n    }\n\n    createMutation.mutate(submitData);\n\n    \n  };\n\n\n\n  return (\n    <CreditGuard\n      requiredCredits={1}\n      feature=\"phone number creation\"\n      showUpgradeButton={true}\n    >\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Phone className=\"h-5 w-5 text-blue-600\" />\n            Create Phone Number\n          </CardTitle>\n          <CardDescription>\n            Get a free AI CRUITMENT phone number.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-5\">\n          {/* Phone Number Options - New Design */}\n          <div className=\"flex gap-6\">\n            {/* Left Sidebar - Phone Number Options */}\n            <div className=\"w-52 space-y-3\">\n              <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Phone Number Options</h3>\n\n              {/* Free Vapi Number Option */}\n              <button\n                type=\"button\"\n                onClick={() => setPhoneNumberOption('free')}\n                className={`w-full p-2.5 text-left rounded-md border text-xs transition-colors ${\n                  phoneNumberOption === 'free'\n                    ? 'border-[#12a594] bg-[#12a594] text-white'\n                    : 'border-gray-200 bg-white text-gray-700 hover:bg-gray-50'\n                }`}\n              >\n                Phone Number (Voice Only)\n              </button>\n\n              {/* Import Twilio Option */}\n              <button\n                type=\"button\"\n                onClick={() => setPhoneNumberOption('import')}\n                className={`w-full p-2.5 text-left rounded-md border text-sm transition-colors ${\n                  phoneNumberOption === 'import'\n                    ? 'border-[#12a594] bg-white text-[#12a594] ring-1 ring-[#12a594]'\n                    : 'border-gray-200 bg-white text-[#12a594] hover:bg-gray-50'\n                }`}\n              >\n                Import Twilio (SMS & Voice)\n              </button>\n            </div>\n\n            {/* Right Content Area */}\n            <div className=\"flex-1 space-y-4\">\n              {phoneNumberOption === 'free' ? (\n                // Free Vapi Number Content - Complete Section\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-lg font-medium text-gray-900\">Free Vapi Number</h3>\n\n                  {/* Provider Selection */}\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"provider\" className=\"text-sm font-medium\">Provider *</Label>\n                    <Select value={formData.provider} onValueChange={(value) => handleInputChange('provider', value)}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select a provider\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"vapi\" className=\"font-medium\">\n                          <div className=\"flex items-center gap-2\">\n                            <div className=\"w-2 h-2 rounded-full\" style={{ backgroundColor: '#12a594' }}></div>\n                            AI CRUITMENT (Free US Number)\n                          </div>\n                        </SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  {/* Area Code and Friendly Name */}\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"areaCode\" className=\"flex items-center gap-2 text-sm font-medium\">\n                        Area Code *\n                        <span className=\"text-xs px-2 py-0.5 rounded-full text-white font-medium\" style={{ backgroundColor: '#12a594' }}>\n                          Free\n                        </span>\n                      </Label>\n                      <div className=\"relative mt-1\">\n                        <Input\n                          id=\"areaCode\"\n                          type=\"text\"\n                          placeholder=\"000\"\n                          value={formData.areaCode}\n                          onChange={(e) => {\n                            const value = e.target.value.replace(/\\D/g, '').slice(0, 3);\n                            handleInputChange('areaCode', value);\n                            handleInputChange('phoneNumber', value);\n                          }}\n                          className=\"font-mono text-lg text-center border-2 focus:border-[#12a594] focus:ring-[#12a594]\"\n                          style={{ borderColor: formData.areaCode ? '#12a594' : undefined }}\n                          maxLength={3}\n                        />\n                        {formData.areaCode && (\n                          <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                            <svg className=\"h-4 w-4\" style={{ color: '#12a594' }} fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                              <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                            </svg>\n                          </div>\n                        )}\n                      </div>\n                      <p className=\"text-xs mt-1\" style={{ color: '#12a594' }}>\n                        Enter a 3-digit US area code (e.g., 415, 212, 310)\n                      </p>\n                    </div>\n                    <div>\n                      <Label htmlFor=\"name\" className=\"text-sm font-medium\">Friendly Name</Label>\n                      <Input\n                        id=\"name\"\n                        type=\"text\"\n                        placeholder=\"My AI CRUITMENT Number\"\n                        value={formData.name}\n                        onChange={(e) => handleInputChange('name', e.target.value)}\n                        className=\"mt-1\"\n                      />\n                    </div>\n                  </div>\n\n                  {/* Assistant Selection */}\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"assistantId\" className=\"flex items-center gap-2 text-sm font-medium\">\n                      <Bot className=\"h-4 w-4\" />\n                      Assistant *\n                    </Label>\n                    <Select value={formData.assistantId} onValueChange={(value) => handleInputChange('assistantId', value)}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select an assistant\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {assistantsLoading ? (\n                          <div className=\"flex items-center justify-center p-2\">\n                            <Loader2 className=\"h-4 w-4 animate-spin\" />\n                            <span className=\"ml-2\">Loading assistants...</span>\n                          </div>\n                        ) : assistants.length === 0 ? (\n                          <div className=\"flex items-center justify-center p-2 text-gray-500\">\n                            No assistants available\n                          </div>\n                        ) : (\n                          <>\n                            {assistants.map((assistant) => (\n                              <SelectItem key={assistant.id} value={assistant.assistant_id || assistant.id}>\n                                <div className=\"flex items-center gap-2\">\n                                  <Bot className=\"h-3 w-3\" />\n                                  {assistant.name}\n                                </div>\n                              </SelectItem>\n                            ))}\n                          </>\n                        )}\n                      </SelectContent>\n                    </Select>\n                    <p className=\"text-xs text-gray-500\">\n                      {isSuperAdmin\n                        ? \"Super admin can see all assistants\"\n                        : \"You can only see your own assistants\"\n                      }\n                    </p>\n                  </div>\n\n                  {/* AI CRUITMENT Free Phone Number Info Box */}\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center gap-2 text-[#12a594]\">\n                      <Phone className=\"h-4 w-4\" />\n                      <span className=\"text-sm font-medium\">AI CRUITMENT Free Phone Number</span>\n                    </div>\n\n                    <div className=\"border border-[#12a594] rounded-lg p-4 bg-[#fafefd]\">\n                      <div className=\"flex items-start gap-3\">\n                        <div className=\"flex-shrink-0 mt-0.5\">\n                          <svg className=\"h-4 w-4 text-[#12a594]\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                          </svg>\n                        </div>\n                        <div className=\"space-y-2\">\n                          <div className=\"text-sm font-medium text-[#12a594]\">No credentials required!</div>\n                          <div className=\"text-sm text-gray-700\">\n                            AI CRUITMENT provides free US phone numbers instantly. Just enter your desired area code and we'll assign you a random number in that area.\n                          </div>\n                          <div className=\"space-y-1 text-xs text-gray-600\">\n                            \n                            <div>• Instant activation (2-3 minutes)</div>\n                            <div>• US numbers only</div>\n                           \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                // Import Twilio Content - Separate Section\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-lg font-medium text-gray-900\">Import Twilio</h3>\n\n                  {/* Twilio Phone Number */}\n                  <div>\n                    <Label htmlFor=\"twilioPhoneNumber\" className=\"text-sm font-medium\">Twilio Phone Number</Label>\n                    <div className=\"flex mt-1\">\n                      <div className=\"flex items-center px-3 border border-r-0 border-gray-300 bg-gray-50 rounded-l-md\">\n                        <span className=\"text-xs font-medium text-gray-600\">🇺🇸</span>\n                      </div>\n                      <Input\n                        id=\"twilioPhoneNumber\"\n                        type=\"tel\"\n                        placeholder=\"+1415689........\"\n                        value={formData.twilioPhoneNumber}\n                        onChange={(e) => handleInputChange('twilioPhoneNumber', e.target.value)}\n                        className=\"rounded-l-none font-mono\"\n                      />\n                    </div>\n                  </div>\n\n                  {/* Twilio Account SID */}\n                  <div>\n                    <Label htmlFor=\"twilioAccountSid\" className=\"text-sm font-medium\">Twilio Account SID</Label>\n                    <Input\n                      id=\"twilioAccountSid\"\n                      type=\"text\"\n                      placeholder=\"ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n                      value={formData.twilioAccountSid}\n                      onChange={(e) => handleInputChange('twilioAccountSid', e.target.value)}\n                      className=\"font-mono text-sm mt-1\"\n                      required\n                      \n                    />\n                  </div>\n\n                  {/* Twilio Auth Token */}\n                  <div>\n                    <Label htmlFor=\"twilioAuthToken\" className=\"text-sm font-medium\">Twilio Auth Token</Label>\n                    <Input\n                      id=\"twilioAuthToken\"\n                      type=\"password\"\n                      placeholder=\"Your Twilio Auth Token\"\n                      value={formData.twilioAuthToken}\n                      onChange={(e) => handleInputChange('twilioAuthToken', e.target.value)}\n                      className=\"font-mono text-sm mt-1\"\n                    />\n                  </div>\n\n                  {/* Label */}\n                  <div>\n                    <Label htmlFor=\"twilioLabel\" className=\"text-sm font-medium\">Label</Label>\n                    <Input\n                      id=\"twilioLabel\"\n                      type=\"text\"\n                      placeholder=\"Label for Phone Number\"\n                      value={formData.twilioLabel}\n                      onChange={(e) => handleInputChange('twilioLabel', e.target.value)}\n                      className=\"mt-1\"\n                    />\n                  </div>\n\n                  {/* Assistant Selection for Twilio */}\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"assistantId\" className=\"flex items-center gap-2 text-sm font-medium\">\n                      <Bot className=\"h-4 w-4\" />\n                      Assistant *\n                    </Label>\n                    <Select value={formData.assistantId} onValueChange={(value) => handleInputChange('assistantId', value)}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select an assistant\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {assistantsLoading ? (\n                          <div className=\"flex items-center justify-center p-2\">\n                            <Loader2 className=\"h-4 w-4 animate-spin\" />\n                            <span className=\"ml-2\">Loading assistants...</span>\n                          </div>\n                        ) : assistants.length === 0 ? (\n                          <div className=\"flex items-center justify-center p-2 text-gray-500\">\n                            No assistants available\n                          </div>\n                        ) : (\n                          <>\n                            {assistants.map((assistant) => (\n                              <SelectItem key={assistant.id} value={assistant.assistant_id || assistant.id}>\n                                <div className=\"flex items-center gap-2\">\n                                  <Bot className=\"h-3 w-3\" />\n                                  {assistant.name}\n                                </div>\n                              </SelectItem>\n                            ))}\n                          </>\n                        )}\n                      </SelectContent>\n                    </Select>\n                    <p className=\"text-xs text-gray-500\">\n                      {isSuperAdmin\n                        ? \"Super admin can see all assistants\"\n                        : \"You can only see your own assistants\"\n                      }\n                    </p>\n                  </div>\n\n                  {/* SMS Enabled Toggle */}\n                  <div className=\"flex items-center justify-between p-3 border rounded-lg bg-gray-50\">\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-900\">SMS Enabled</div>\n                      <div className=\"text-xs text-gray-500\">Enable SMS messaging for this phone number</div>\n                    </div>\n                    <button\n                      type=\"button\"\n                      onClick={() => handleInputChange('smsEnabled', !formData.smsEnabled)}\n                      className={`relative inline-flex h-5 w-9 items-center rounded-full transition-colors ${\n                        formData.smsEnabled ? 'bg-[#12a594]' : 'bg-gray-300'\n                      }`}\n                    >\n                      <span\n                        className={`inline-block h-3 w-3 transform rounded-full bg-white transition-transform ${\n                          formData.smsEnabled ? 'translate-x-5' : 'translate-x-1'\n                        }`}\n                      />\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n\n        </CardContent>\n      </Card>\n\n      {/* Action Buttons */}\n      <div className=\"flex justify-end gap-3\">\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          onClick={onCancel}\n          disabled={createMutation.isPending}\n        >\n          Cancel\n        </Button>\n        <Button\n          type=\"submit\"\n          disabled={createMutation.isPending}\n          className=\"min-w-[140px]\"\n          style={phoneNumberOption === 'free' ? {\n            backgroundColor: '#12a594',\n            borderColor: '#12a594',\n            color: 'white'\n          } : {\n            backgroundColor: '#12a594',\n            borderColor: '#12a594',\n            color: 'white'\n          }}\n        >\n          {createMutation.isPending ? (\n            <>\n              <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n              {phoneNumberOption === 'import' ? 'Importing from Twilio...' : 'Getting Free Number...'}\n            </>\n          ) : (\n            <>\n              <Phone className=\"h-4 w-4 mr-2\" />\n              {phoneNumberOption === 'import' ? 'Import from Twilio' : 'Get Free Number'}\n            </>\n          )}\n        </Button>\n      </div>\n    </form>\n    </CreditGuard>\n  );\n};\n\nexport default CreatePhoneNumberForm;\n"],"names":["CreatePhoneNumberForm","onSuccess","onCancel","user","useAuth","isSuperAdmin","usePermissions","formData","setFormData","useState","phoneNumberOption","setPhoneNumberOption","isAdvancedOpen","setIsAdvancedOpen","queryClient","useQueryClient","assistantsData","assistantsLoading","useQuery","fetchAllAgentsComplete","failureCount","error","_a","assistants","createMutation","useMutation","data","importTwilioPhoneNumber","createPhoneNumber","message","toast","_b","handleInputChange","field","value","prev","validateForm","handleSubmit","e","submitData","jsx","CreditGuard","jsxs","Card","CardHeader","CardTitle","Phone","CardDescription","CardContent","Label","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Input","Bot","Loader2","Fragment","assistant","Button"],"mappings":"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"}