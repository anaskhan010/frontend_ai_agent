import{d as w,t as n}from"./index-CvuFKe2_.js";async function h(t,s,a){var o,e;try{return(await w.get("/api/workflows",{params:{page:t,search:s,status:a}})).data}catch(r){console.error("Error fetching workflows:",r);const c=[404,204,402];if(c.includes((o=r==null?void 0:r.response)==null?void 0:o.status)||n.error("Failed to fetch workflows"),c.includes((e=r==null?void 0:r.response)==null?void 0:e.status))return{data:[],success:!0,message:"No workflows found"};throw r}}async function d(t){var s,a;try{console.log("Fetching workflow from API:",t);const o=await w.get(`/api/workflows/${t}`);return console.log("Workflow API response:",o.data),o.data}catch(o){throw console.error("Error fetching workflow:",o),console.error("Error response:",(s=o.response)==null?void 0:s.data),[404,402].includes((a=o==null?void 0:o.response)==null?void 0:a.status)||n.error("Failed to fetch workflow"),o}}async function p(t){var s,a,o;try{console.log("Creating workflow with data:",t);const e=await w.post("/api/workflows",t);return console.log("Create workflow response:",e.data),n.success("Workflow created successfully"),e.data}catch(e){console.error("Error creating workflow:",e),console.error("Error response:",(s=e.response)==null?void 0:s.data);const r=((o=(a=e.response)==null?void 0:a.data)==null?void 0:o.message)||"Failed to create workflow";throw n.error(r),e}}async function y(t,s,a){var o,e;try{const r=await w.post(`/api/workflows/${t}/test`,{phoneNumber:s,metadata:a});return n.success("Workflow test call initiated successfully"),r.data}catch(r){console.error("Error testing workflow:",r);const c=((e=(o=r.response)==null?void 0:o.data)==null?void 0:e.message)||"Failed to test workflow";throw n.error(c),r}}async function x(){try{return(await w.get("/api/workflows/templates/all")).data}catch(t){throw console.error("Error fetching workflow templates:",t),n.error("Failed to fetch workflow templates"),t}}async function W(t){var s,a;try{const o=await d(t),e={...o.data,exportedAt:new Date().toISOString(),version:"1.0"},r=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),c=URL.createObjectURL(r),l=document.createElement("a");return l.href=c,l.download=`workflow-${o.data.name}-${new Date().toISOString().split("T")[0]}.json`,document.body.appendChild(l),l.click(),document.body.removeChild(l),URL.revokeObjectURL(c),n.success("Workflow exported successfully"),e}catch(o){console.error("Error exporting workflow:",o);const e=((a=(s=o.response)==null?void 0:s.data)==null?void 0:a.message)||"Failed to export workflow";throw n.error(e),o}}async function E(t){var s,a;try{const o=await t.text(),e=JSON.parse(o),{id:r,createdAt:c,updatedAt:l,exportedAt:u,version:k,localData:g,...i}=e;i.name=`${i.name} (Imported)`;const f=await p(i);return n.success("Workflow imported successfully"),f}catch(o){console.error("Error importing workflow:",o);const e=((a=(s=o.response)==null?void 0:s.data)==null?void 0:a.message)||"Failed to import workflow";throw n.error(e),o}}export{h as a,d as b,W as e,x as g,E as i,y as t};
//# sourceMappingURL=workflowService-CAeF4YPZ.js.map
