import{d as w,t as a}from"./index-CUjvNcD6.js";async function h(t,s,r){try{return(await w.get("/api/workflows",{params:{page:t,search:s,status:r}})).data}catch(o){throw console.error("Error fetching workflows:",o),a.error("Failed to fetch workflows"),o}}async function p(t){var s;try{console.log("Fetching workflow from API:",t);const r=await w.get(`/api/workflows/${t}`);return console.log("Workflow API response:",r.data),r.data}catch(r){throw console.error("Error fetching workflow:",r),console.error("Error response:",(s=r.response)==null?void 0:s.data),a.error("Failed to fetch workflow"),r}}async function d(t){var s,r,o;try{console.log("Creating workflow with data:",t);const e=await w.post("/api/workflows",t);return console.log("Create workflow response:",e.data),a.success("Workflow created successfully"),e.data}catch(e){console.error("Error creating workflow:",e),console.error("Error response:",(s=e.response)==null?void 0:s.data);const n=((o=(r=e.response)==null?void 0:r.data)==null?void 0:o.message)||"Failed to create workflow";throw a.error(n),e}}async function y(t,s,r){var o,e;try{const n=await w.post(`/api/workflows/${t}/test`,{phoneNumber:s,metadata:r});return a.success("Workflow test call initiated successfully"),n.data}catch(n){console.error("Error testing workflow:",n);const l=((e=(o=n.response)==null?void 0:o.data)==null?void 0:e.message)||"Failed to test workflow";throw a.error(l),n}}async function W(){try{return(await w.get("/api/workflows/templates/all")).data}catch(t){throw console.error("Error fetching workflow templates:",t),a.error("Failed to fetch workflow templates"),t}}async function x(t){var s,r;try{const o=await p(t),e={...o.data,exportedAt:new Date().toISOString(),version:"1.0"},n=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),l=URL.createObjectURL(n),c=document.createElement("a");return c.href=l,c.download=`workflow-${o.data.name}-${new Date().toISOString().split("T")[0]}.json`,document.body.appendChild(c),c.click(),document.body.removeChild(c),URL.revokeObjectURL(l),a.success("Workflow exported successfully"),e}catch(o){console.error("Error exporting workflow:",o);const e=((r=(s=o.response)==null?void 0:s.data)==null?void 0:r.message)||"Failed to export workflow";throw a.error(e),o}}async function E(t){var s,r;try{const o=await t.text(),e=JSON.parse(o),{id:n,createdAt:l,updatedAt:c,exportedAt:k,version:u,localData:g,...i}=e;i.name=`${i.name} (Imported)`;const f=await d(i);return a.success("Workflow imported successfully"),f}catch(o){console.error("Error importing workflow:",o);const e=((r=(s=o.response)==null?void 0:s.data)==null?void 0:r.message)||"Failed to import workflow";throw a.error(e),o}}export{h as a,p as b,x as e,W as g,E as i,y as t};
//# sourceMappingURL=workflowService-07qi1nJj.js.map
