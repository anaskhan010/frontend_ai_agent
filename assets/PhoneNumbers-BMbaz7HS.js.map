{"version":3,"file":"PhoneNumbers-BMbaz7HS.js","sources":["../../src/components/PhoneNumbers/CreatePhoneNumberForm.tsx","../../src/components/PhoneNumbers/SuperAdminPhoneNumberManagement.tsx","../../src/components/Debug/PhoneNumberDebug.tsx","../../src/pages/PhoneNumbers/PhoneNumbers.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useMutation, useQueryClient, useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Loader2, Phone, Shield, Settings, AlertCircle, ChevronDown, ChevronRight, Bot } from \"lucide-react\";\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"@/components/ui/collapsible\";\nimport { toast } from \"sonner\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { createPhoneNumber } from \"@/api/services/phoneNumbers/phoneNumberService\";\nimport { fetchAllAgentsComplete } from \"@/api/services/agents/agentService\";\nimport { useAuth } from \"@/context/AuthContext\";\nimport { usePermissions } from \"@/context/PermissionContext\";\nimport CreditGuard from \"@/components/Credits/CreditGuard\";\n\ninterface CreatePhoneNumberFormProps {\n  onSuccess?: () => void;\n  onCancel?: () => void;\n}\n\ninterface FormData {\n  provider: string;\n  phoneNumber: string;\n  name: string;\n  assistantId: string;\n  squadId: string;\n  workflowId: string;\n  fallbackDestination: string;\n  serverUrl: string;\n  serverUrlSecret: string;\n  // Provider-specific credentials\n  twilioAccountSid: string;\n  twilioAuthToken: string;\n  vonageApiKey: string;\n  vonageApiSecret: string;\n  telnyxApiKey: string;\n  telnyxApiSecret: string;\n  // VAPI specific\n  areaCode: string;\n}\n\nconst CreatePhoneNumberForm: React.FC<CreatePhoneNumberFormProps> = ({\n  onSuccess,\n  onCancel\n}) => {\n  const { user } = useAuth();\n  const { isSuperAdmin } = usePermissions();\n\n  const [formData, setFormData] = useState<FormData>({\n    provider: \"vapi\", // Default to VAPI\n    phoneNumber: \"\",\n    name: \"\",\n    assistantId: \"\",\n    squadId: \"\",\n    workflowId: \"\",\n    fallbackDestination: \"\",\n    serverUrl: \"\",\n    serverUrlSecret: \"\",\n    twilioAccountSid: \"\",\n    twilioAuthToken: \"\",\n    vonageApiKey: \"\",\n    vonageApiSecret: \"\",\n    telnyxApiKey: \"\",\n    telnyxApiSecret: \"\",\n    areaCode: \"\"\n  });\n\n  const [isAdvancedOpen, setIsAdvancedOpen] = useState(false);\n\n  const queryClient = useQueryClient();\n\n  // Fetch assistants based on user role\n  const { data: assistantsData, isLoading: assistantsLoading } = useQuery({\n    queryKey: [\"assistants\", \"complete\", user?.id],\n    queryFn: () => fetchAllAgentsComplete(\"\"),\n    retry: (failureCount, error: any) => {\n      // Don't retry for expected scenarios (normal for new users)\n      const expectedStatuses = [404, 204, 402]; // 402 = Payment Required (no credits)\n      if (expectedStatuses.includes(error?.response?.status)) {\n        return false;\n      }\n      return failureCount < 1; // Retry once for other errors\n    },\n    enabled: !!user?.id,\n  });\n\n  const assistants = assistantsData?.data || [];\n\n  const createMutation = useMutation({\n    mutationFn: createPhoneNumber,\n    onSuccess: () => {\n      toast.success(\"Phone number created successfully!\");\n      queryClient.invalidateQueries({ queryKey: [\"phoneNumbers\"] });\n      onSuccess?.();\n    },\n    onError: (error: any) => {\n      toast.error(error.response?.data?.message || \"Failed to create phone number\");\n    }\n  });\n\n  const handleInputChange = (field: keyof FormData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const formatPhoneNumber = (phone: string) => {\n    // Simple phone number formatting\n    const cleaned = phone.replace(/\\D/g, '');\n    if (cleaned.length === 10) {\n      return `+1${cleaned}`;\n    } else if (cleaned.length === 11 && cleaned.startsWith('1')) {\n      return `+${cleaned}`;\n    }\n    return phone;\n  };\n\n  const handlePhoneNumberChange = (value: string) => {\n    const formatted = formatPhoneNumber(value);\n    handleInputChange('phoneNumber', formatted);\n  };\n\n  const validateForm = () => {\n    if (!formData.provider) {\n      toast.error(\"Please select a provider\");\n      return false;\n    }\n    if (!formData.phoneNumber) {\n      toast.error(\"Please enter a phone number\");\n      return false;\n    }\n\n    // Validate phone number format (skip for VAPI as it uses area code)\n    if (formData.provider !== 'vapi') {\n      const phoneRegex = /^\\+[1-9]\\d{1,14}$/;\n      if (!phoneRegex.test(formData.phoneNumber)) {\n        toast.error(\"Phone number must be in E.164 format (e.g., +1234567890)\");\n        return false;\n      }\n    } else {\n      // Validate area code for VAPI\n      if (!formData.areaCode || formData.areaCode.length !== 3) {\n        toast.error(\"Please enter a valid 3-digit area code\");\n        return false;\n      }\n    }\n\n    // Validate assistant selection\n    if (!formData.assistantId || formData.assistantId === \"unassigned\") {\n      toast.error(\"Please select an assistant\");\n      return false;\n    }\n\n    // Validate server URL if provided\n    if (formData.serverUrl) {\n      try {\n        new URL(formData.serverUrl);\n      } catch {\n        toast.error(\"Server URL must be a valid URL\");\n        return false;\n      }\n    }\n\n    // Validate fallback destination JSON if provided\n    if (formData.fallbackDestination) {\n      try {\n        JSON.parse(formData.fallbackDestination);\n      } catch {\n        toast.error(\"Fallback destination must be valid JSON\");\n        return false;\n      }\n    }\n\n    // Provider-specific validation\n    switch (formData.provider) {\n      case 'vapi':\n        // No additional validation needed for VAPI\n        break;\n      case 'twilio':\n        if (!formData.twilioAccountSid || !formData.twilioAuthToken) {\n          toast.error(\"Twilio Account SID and Auth Token are required\");\n          return false;\n        }\n        if (!formData.twilioAccountSid.startsWith('AC')) {\n          toast.error(\"Twilio Account SID should start with 'AC'\");\n          return false;\n        }\n        if (formData.twilioAccountSid.length !== 34) {\n          toast.error(\"Twilio Account SID should be 34 characters long\");\n          return false;\n        }\n        break;\n      case 'vonage':\n        if (!formData.vonageApiKey || !formData.vonageApiSecret) {\n          toast.error(\"Vonage API Key and Secret are required\");\n          return false;\n        }\n        break;\n      case 'telnyx':\n        if (!formData.telnyxApiKey) {\n          toast.error(\"Telnyx API Key is required\");\n          return false;\n        }\n        break;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    // Prepare form data for submission\n    const submitData = {\n      ...formData\n    };\n\n    createMutation.mutate(submitData);\n  };\n\n  const renderProviderCredentials = () => {\n    switch (formData.provider) {\n      case 'vapi':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2 text-sm font-medium\" style={{ color: '#12a594' }}>\n              <Shield className=\"h-4 w-4\" />\n              AI CRUITMENT Free Phone Number\n            </div>\n            <div className=\"rounded-lg p-4 border\" style={{ backgroundColor: '#fafefd', borderColor: '#12a594' }}>\n              <div className=\"flex items-start gap-3\">\n                <div className=\"flex-shrink-0\">\n                  <svg className=\"h-5 w-5\" style={{ color: '#12a594' }} viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n                <div>\n                  <h4 className=\"text-sm font-medium\" style={{ color: '#008071' }}>No credentials required!</h4>\n                  <p className=\"text-sm mt-1\" style={{ color: '#008071' }}>\n                    AI CRUITMENT provides free US phone numbers instantly. Just enter your desired area code and we'll assign you a random number in that area.\n                  </p>\n                  <ul className=\"text-xs mt-2 space-y-1\" style={{ color: '#12a594' }}>\n                    <li>• Up to 10 free numbers per account</li>\n                    <li>• Instant activation (2-3 minutes)</li>\n                    <li>• US numbers only</li>\n                    <li>• No monthly fees</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'twilio':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2 text-sm font-medium text-blue-600\">\n              <Shield className=\"h-4 w-4\" />\n              Twilio Credentials\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"twilioAccountSid\">Account SID *</Label>\n                <Input\n                  id=\"twilioAccountSid\"\n                  type=\"text\"\n                  placeholder=\"ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n                  value={formData.twilioAccountSid}\n                  onChange={(e) => handleInputChange('twilioAccountSid', e.target.value)}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"twilioAuthToken\">Auth Token *</Label>\n                <Input\n                  id=\"twilioAuthToken\"\n                  type=\"password\"\n                  placeholder=\"Your Twilio Auth Token\"\n                  value={formData.twilioAuthToken}\n                  onChange={(e) => handleInputChange('twilioAuthToken', e.target.value)}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'vonage':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2 text-sm font-medium text-orange-600\">\n              <Shield className=\"h-4 w-4\" />\n              Vonage Credentials\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"vonageApiKey\">API Key *</Label>\n                <Input\n                  id=\"vonageApiKey\"\n                  type=\"text\"\n                  placeholder=\"Your Vonage API Key\"\n                  value={formData.vonageApiKey}\n                  onChange={(e) => handleInputChange('vonageApiKey', e.target.value)}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"vonageApiSecret\">API Secret *</Label>\n                <Input\n                  id=\"vonageApiSecret\"\n                  type=\"password\"\n                  placeholder=\"Your Vonage API Secret\"\n                  value={formData.vonageApiSecret}\n                  onChange={(e) => handleInputChange('vonageApiSecret', e.target.value)}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'telnyx':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2 text-sm font-medium text-purple-600\">\n              <Shield className=\"h-4 w-4\" />\n              Telnyx Credentials\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"telnyxApiKey\">API Key *</Label>\n                <Input\n                  id=\"telnyxApiKey\"\n                  type=\"password\"\n                  placeholder=\"Your Telnyx API Key\"\n                  value={formData.telnyxApiKey}\n                  onChange={(e) => handleInputChange('telnyxApiKey', e.target.value)}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"telnyxApiSecret\">API Secret (Optional)</Label>\n                <Input\n                  id=\"telnyxApiSecret\"\n                  type=\"password\"\n                  placeholder=\"Your Telnyx API Secret (if required)\"\n                  value={formData.telnyxApiSecret}\n                  onChange={(e) => handleInputChange('telnyxApiSecret', e.target.value)}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <CreditGuard\n      requiredCredits={1}\n      feature=\"phone number creation\"\n      showUpgradeButton={true}\n    >\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Phone className=\"h-5 w-5 text-blue-600\" />\n            Create Phone Number\n          </CardTitle>\n          <CardDescription>\n            Get a free AI CRUITMENT phone number.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          {/* Provider Selection */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"provider\">Provider *</Label>\n            <Select value={formData.provider} onValueChange={(value) => handleInputChange('provider', value)}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select a provider\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"vapi\" className=\"font-medium\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 rounded-full\" style={{ backgroundColor: '#12a594' }}></div>\n                    AI CRUITMENT (Free US Number)\n                  </div>\n                </SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Basic Information */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {formData.provider === 'vapi' ? (\n              <div>\n                <Label htmlFor=\"areaCode\" className=\"flex items-center gap-2\">\n                  Area Code *\n                  <span className=\"text-xs px-2 py-0.5 rounded-full text-white font-medium\" style={{ backgroundColor: '#12a594' }}>\n                    Free\n                  </span>\n                </Label>\n                <div className=\"relative\">\n                  <Input\n                    id=\"areaCode\"\n                    type=\"text\"\n                    placeholder=\"000\"\n                    value={formData.areaCode}\n                    onChange={(e) => {\n                      const value = e.target.value.replace(/\\D/g, '').slice(0, 3);\n                      handleInputChange('areaCode', value);\n                      handleInputChange('phoneNumber', value); // Use area code as phone number for backend\n                    }}\n                    className=\"font-mono text-lg text-center border-2 focus:border-[#12a594] focus:ring-[#12a594]\"\n                    style={{ borderColor: formData.areaCode ? '#12a594' : undefined }}\n                    maxLength={3}\n                  />\n                  {formData.areaCode && (\n                    <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                      <svg className=\"h-4 w-4\" style={{ color: '#12a594' }} fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </div>\n                  )}\n                </div>\n                <p className=\"text-xs mt-1\" style={{ color: '#12a594' }}>\n                  Enter a 3-digit US area code (e.g., 415, 212, 310)\n                </p>\n              </div>\n            ) : (\n              <div>\n                <Label htmlFor=\"phoneNumber\">Phone Number *</Label>\n                <Input\n                  id=\"phoneNumber\"\n                  type=\"tel\"\n                  placeholder=\"+1 (555) 123-4567\"\n                  value={formData.phoneNumber}\n                  onChange={(e) => handlePhoneNumberChange(e.target.value)}\n                  className=\"font-mono\"\n                />\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  Enter the phone number in E.164 format\n                </p>\n              </div>\n            )}\n            <div>\n              <Label htmlFor=\"name\">Friendly Name</Label>\n              <Input\n                id=\"name\"\n                type=\"text\"\n                placeholder={formData.provider === 'vapi' ? \"My AI CRUITMENT Number\" : \"My Business Number\"}\n                value={formData.name}\n                onChange={(e) => handleInputChange('name', e.target.value)}\n              />\n            </div>\n          </div>\n\n          {/* Assistant Selection */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"assistantId\" className=\"flex items-center gap-2\">\n              <Bot className=\"h-4 w-4\" />\n              Assistant *\n            </Label>\n            <Select value={formData.assistantId} onValueChange={(value) => handleInputChange('assistantId', value)}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select an assistant\" />\n              </SelectTrigger>\n              <SelectContent>\n                {assistantsLoading ? (\n                  <div className=\"flex items-center justify-center p-2\">\n                    <Loader2 className=\"h-4 w-4 animate-spin\" />\n                    <span className=\"ml-2\">Loading assistants...</span>\n                  </div>\n                ) : assistants.length === 0 ? (\n                  <div className=\"flex items-center justify-center p-2 text-gray-500\">\n                    No assistants available\n                  </div>\n                ) : (\n                  <>\n                    {assistants.map((assistant) => (\n                      <SelectItem key={assistant.id} value={assistant.assistant_id || assistant.id}>\n                        <div className=\"flex items-center gap-2\">\n                          <Bot className=\"h-3 w-3\" />\n                          {assistant.name}\n                        </div>\n                      </SelectItem>\n                    ))}\n                  </>\n                )}\n              </SelectContent>\n            </Select>\n            <p className=\"text-xs text-gray-500\">\n              {isSuperAdmin\n                ? \"Super admin can see all assistants\"\n                : \"You can only see your own assistants\"\n              }\n            </p>\n          </div>\n\n          {/* Provider Credentials */}\n          {formData.provider && (\n            <div className=\"border rounded-lg p-4 bg-gray-50\">\n              {renderProviderCredentials()}\n            </div>\n          )}\n\n          {/* Advanced Configuration */}\n          {/* <Collapsible open={isAdvancedOpen} onOpenChange={setIsAdvancedOpen}>\n            <CollapsibleTrigger asChild>\n              <Button\n                variant=\"ghost\"\n                className=\"flex items-center gap-2 text-sm font-medium text-gray-700 hover:text-gray-900 p-0 h-auto\"\n              >\n                {isAdvancedOpen ? (\n                  <ChevronDown className=\"h-4 w-4\" />\n                ) : (\n                  <ChevronRight className=\"h-4 w-4\" />\n                )}\n                <Settings className=\"h-4 w-4\" />\n                Advanced Configuration (Optional)\n              </Button>\n            </CollapsibleTrigger>\n            <CollapsibleContent className=\"space-y-4 mt-4\">\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"squadId\">Squad ID</Label>\n                <Input\n                  id=\"squadId\"\n                  type=\"text\"\n                  placeholder=\"Squad ID to assign\"\n                  value={formData.squadId}\n                  onChange={(e) => handleInputChange('squadId', e.target.value)}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"workflowId\">Workflow ID</Label>\n                <Input\n                  id=\"workflowId\"\n                  type=\"text\"\n                  placeholder=\"Workflow ID to assign\"\n                  value={formData.workflowId}\n                  onChange={(e) => handleInputChange('workflowId', e.target.value)}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"serverUrl\">Server URL</Label>\n                <Input\n                  id=\"serverUrl\"\n                  type=\"url\"\n                  placeholder=\"https://your-server.com/webhook\"\n                  value={formData.serverUrl}\n                  onChange={(e) => handleInputChange('serverUrl', e.target.value)}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"serverUrlSecret\">Server URL Secret</Label>\n                <Input\n                  id=\"serverUrlSecret\"\n                  type=\"password\"\n                  placeholder=\"Webhook secret\"\n                  value={formData.serverUrlSecret}\n                  onChange={(e) => handleInputChange('serverUrlSecret', e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div>\n              <Label htmlFor=\"fallbackDestination\">Fallback Destination</Label>\n              <Textarea\n                id=\"fallbackDestination\"\n                placeholder=\"Fallback destination configuration (JSON)\"\n                value={formData.fallbackDestination}\n                onChange={(e) => handleInputChange('fallbackDestination', e.target.value)}\n                rows={3}\n                className=\"font-mono text-sm\"\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Optional fallback destination for call routing\n              </p>\n            </div>\n            </CollapsibleContent>\n          </Collapsible> */}\n\n          {/* Security Notice */}\n          {formData.provider && formData.provider !== 'vapi' && (\n            <Alert>\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertDescription>\n                Your credentials are securely stored and encrypted. They are only used to authenticate with {formData.provider} for phone number management.\n              </AlertDescription>\n            </Alert>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Action Buttons */}\n      <div className=\"flex justify-end gap-3\">\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          onClick={onCancel}\n          disabled={createMutation.isPending}\n        >\n          Cancel\n        </Button>\n        <Button\n          type=\"submit\"\n          disabled={createMutation.isPending}\n          className=\"min-w-[120px]\"\n          style={formData.provider === 'vapi' ? {\n            backgroundColor: '#12a594',\n            borderColor: '#12a594',\n            color: 'white'\n          } : undefined}\n        >\n          {createMutation.isPending ? (\n            <>\n              <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n              {formData.provider === 'vapi' ? 'Getting Free Number...' : 'Creating...'}\n            </>\n          ) : (\n            <>\n              <Phone className=\"h-4 w-4 mr-2\" />\n              {formData.provider === 'vapi' ? 'Get Free Number' : 'Create Phone Number'}\n            </>\n          )}\n        </Button>\n      </div>\n    </form>\n    </CreditGuard>\n  );\n};\n\nexport default CreatePhoneNumberForm;\n","import React, { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Loader2, Phone, UserPlus, UserMinus, Users, Shield } from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport axiosInstance from \"@/api/axios/axiosInstance\";\n\nimport {\n  getAllPhoneNumbersForAdmin,\n  getAllVapiPhoneNumbersForAdmin,\n  assignPhoneNumberToUser,\n  unassignPhoneNumber\n} from \"@/api/services/phoneNumbers/phoneNumberService\";\nimport { getAllUsersWithRoles } from \"@/api/services/user/userService\";\nimport type { PhoneNumber } from \"@/api/services/phoneNumbers/phoneNumberService\";\n\ninterface AdminUser {\n  id: number;\n  username?: string;\n  email: string;\n  first_name?: string;\n  last_name?: string;\n  is_active: boolean;\n}\n\nconst SuperAdminPhoneNumberManagement = () => {\n  const [selectedPhoneNumber, setSelectedPhoneNumber] = useState<PhoneNumber | null>(null);\n  const [selectedUserId, setSelectedUserId] = useState<string>(\"\");\n  const [isAssignDialogOpen, setIsAssignDialogOpen] = useState(false);\n\n  const queryClient = useQueryClient();\n\n  // Fetch all VAPI phone numbers with assignment info for admin\n  const { data: phoneNumbersData, isLoading: numbersLoading, error: numbersError } = useQuery({\n    queryKey: [\"admin-vapi-phone-numbers\"],\n    queryFn: () => getAllVapiPhoneNumbersForAdmin(),\n    retry: 1,\n  });\n\n  // Fetch all users for assignment\n  const { data: usersData, isLoading: usersLoading } = useQuery({\n    queryKey: [\"all-users\"],\n    queryFn: () => getAllUsersWithRoles(),\n    retry: 1,\n  });\n\n  // Assignment mutation\n  const assignMutation = useMutation({\n    mutationFn: ({ phoneNumberId, userId, vapiId }: { phoneNumberId: string; userId: string; vapiId?: string }) => {\n      // For VAPI phone numbers, send both the VAPI ID and user ID\n      if (vapiId) {\n        return axiosInstance.post(`/api/phone-numbers/${vapiId}/assign`, {\n          user_id: userId,\n          vapi_id: vapiId\n        });\n      } else {\n        // Traditional assignment for existing local records\n        return assignPhoneNumberToUser(phoneNumberId, userId);\n      }\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"admin-vapi-phone-numbers\"] });\n      queryClient.invalidateQueries({ queryKey: [\"admin-phone-numbers\"] });\n      toast.success(\"Phone number assigned successfully!\");\n      setIsAssignDialogOpen(false);\n      setSelectedPhoneNumber(null);\n      setSelectedUserId(\"\");\n    },\n    onError: (error: any) => {\n      toast.error(\"Failed to assign phone number: \" + (error.response?.data?.message || error.message));\n    },\n  });\n\n  // Unassignment mutation\n  const unassignMutation = useMutation({\n    mutationFn: (phoneNumberId: string) => unassignPhoneNumber(phoneNumberId),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"admin-vapi-phone-numbers\"] });\n      queryClient.invalidateQueries({ queryKey: [\"admin-phone-numbers\"] });\n      toast.success(\"Phone number unassigned successfully!\");\n    },\n    onError: (error: any) => {\n      toast.error(\"Failed to unassign phone number: \" + (error.response?.data?.message || error.message));\n    },\n  });\n\n  const handleAssignClick = (phoneNumber: PhoneNumber) => {\n    setSelectedPhoneNumber(phoneNumber);\n    setIsAssignDialogOpen(true);\n  };\n\n  const handleAssignSubmit = () => {\n    if (!selectedPhoneNumber || !selectedUserId) {\n      toast.error(\"Please select a user to assign the phone number to.\");\n      return;\n    }\n\n    assignMutation.mutate({\n      phoneNumberId: selectedPhoneNumber.local_id || selectedPhoneNumber.id,\n      userId: selectedUserId,\n      vapiId: selectedPhoneNumber.vapi_id || selectedPhoneNumber.id // Use VAPI ID for assignment\n    });\n  };\n\n  const handleUnassign = (phoneNumber: PhoneNumber) => {\n    if (!phoneNumber.local_id) {\n      toast.error(\"Cannot unassign phone number that is not in local database.\");\n      return;\n    }\n\n    if (window.confirm(`Are you sure you want to unassign phone number ${phoneNumber.number}?`)) {\n      unassignMutation.mutate(phoneNumber.local_id);\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case \"active\":\n        return <Badge variant=\"default\" className=\"bg-green-100 text-green-800\">Active</Badge>;\n      case \"inactive\":\n        return <Badge variant=\"secondary\">Inactive</Badge>;\n      case \"pending\":\n        return <Badge variant=\"outline\">Pending</Badge>;\n      default:\n        return <Badge variant=\"secondary\">Unknown</Badge>;\n    }\n  };\n\n  const phoneNumbers = phoneNumbersData?.data || [];\n  const users = usersData?.data || [];\n\n  if (numbersLoading) {\n    return (\n      <Card>\n        <CardContent className=\"flex items-center justify-center h-32\">\n          <Loader2 className=\"h-8 w-8 animate-spin\" />\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center gap-2\">\n            <Shield className=\"h-5 w-5 text-blue-600\" />\n            <CardTitle>Super Admin - Phone Number Management</CardTitle>\n          </div>\n          <CardDescription>\n            Manage phone number assignments for all users. Shows all VAPI phone numbers including Twilio numbers.\n            Assign any available phone number to specific users to control access.\n          </CardDescription>\n          {phoneNumbersData?.debug_info && (\n            <div className=\"mt-4 p-3 bg-blue-50 rounded-lg\">\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                <div>\n                  <span className=\"font-medium text-blue-900\">Total VAPI Numbers:</span>\n                  <div className=\"text-blue-700\">{phoneNumbersData.debug_info.total_vapi_numbers}</div>\n                </div>\n                <div>\n                  <span className=\"font-medium text-green-900\">Assigned:</span>\n                  <div className=\"text-green-700\">{phoneNumbersData.debug_info.assigned_numbers}</div>\n                </div>\n                <div>\n                  <span className=\"font-medium text-orange-900\">Available:</span>\n                  <div className=\"text-orange-700\">{phoneNumbersData.debug_info.unassigned_numbers}</div>\n                </div>\n                <div>\n                  <span className=\"font-medium text-purple-900\">In Local DB:</span>\n                  <div className=\"text-purple-700\">{phoneNumbersData.debug_info.in_local_db}</div>\n                </div>\n              </div>\n            </div>\n          )}\n        </CardHeader>\n        <CardContent>\n          {phoneNumbers.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <Phone className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium mb-2\">No phone numbers found</h3>\n              <p className=\"text-muted-foreground\">\n                No phone numbers are available for assignment.\n              </p>\n            </div>\n          ) : (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Phone Number</TableHead>\n                  <TableHead>Provider</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead>Assigned User</TableHead>\n                  <TableHead>Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {phoneNumbers.map((phoneNumber: PhoneNumber) => (\n                  <TableRow key={phoneNumber.id}>\n                    <TableCell className=\"font-mono\">{phoneNumber.number || \"Unknown\"}</TableCell>\n                    <TableCell>\n                      <Badge variant=\"outline\" className={phoneNumber.provider === 'vapi' ? 'bg-blue-50 text-blue-700' : 'bg-gray-50 text-gray-700'}>\n                        {phoneNumber.provider?.toUpperCase() || 'VAPI'}\n                      </Badge>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex gap-2\">\n                        {phoneNumber.is_assigned ? (\n                          <Badge variant=\"default\" className=\"bg-green-100 text-green-800\">Assigned</Badge>\n                        ) : (\n                          <Badge variant=\"outline\" className=\"text-orange-600\">Available</Badge>\n                        )}\n                        {phoneNumber.is_in_local_db ? (\n                          <Badge variant=\"secondary\" className=\"text-xs\">In DB</Badge>\n                        ) : (\n                          <Badge variant=\"outline\" className=\"text-xs text-blue-600\">VAPI Only</Badge>\n                        )}\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      {phoneNumber.user_name ? (\n                        <div className=\"flex flex-col\">\n                          <span className=\"font-medium\">{phoneNumber.user_name}</span>\n                          <span className=\"text-xs text-muted-foreground\">{phoneNumber.user_email}</span>\n                        </div>\n                      ) : (\n                        <Badge variant=\"outline\" className=\"text-orange-600\">Unassigned</Badge>\n                      )}\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex gap-2\">\n                        {phoneNumber.is_assigned ? (\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => handleUnassign(phoneNumber)}\n                            disabled={unassignMutation.isPending || !phoneNumber.is_in_local_db}\n                            title={!phoneNumber.is_in_local_db ? \"Cannot unassign phone number not in local database\" : \"\"}\n                          >\n                            <UserMinus className=\"h-3 w-3 mr-1\" />\n                            Unassign\n                          </Button>\n                        ) : (\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => handleAssignClick(phoneNumber)}\n                            disabled={assignMutation.isPending}\n                          >\n                            <UserPlus className=\"h-3 w-3 mr-1\" />\n                            Assign\n                          </Button>\n                        )}\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Assignment Dialog */}\n      <Dialog open={isAssignDialogOpen} onOpenChange={setIsAssignDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Assign Phone Number</DialogTitle>\n            <DialogDescription>\n              Assign phone number {selectedPhoneNumber?.number} to a user. Only the assigned user will be able to see and use this phone number.\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"text-sm font-medium\">Select User</label>\n              <Select value={selectedUserId} onValueChange={setSelectedUserId}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Choose a user to assign the phone number to\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {users.map((user: any) => (\n                    <SelectItem key={user.id} value={user.id.toString()}>\n                      <div className=\"flex items-center gap-2\">\n                        <Users className=\"h-4 w-4\" />\n                        <div>\n                          <div className=\"font-medium\">{user.first_name || ''} {user.last_name || ''}</div>\n                          <div className=\"text-xs text-muted-foreground\">{user.email}</div>\n                        </div>\n                      </div>\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"flex justify-end gap-2\">\n              <Button variant=\"outline\" onClick={() => setIsAssignDialogOpen(false)}>\n                Cancel\n              </Button>\n              <Button \n                onClick={handleAssignSubmit}\n                disabled={!selectedUserId || assignMutation.isPending}\n              >\n                {assignMutation.isPending ? (\n                  <>\n                    <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                    Assigning...\n                  </>\n                ) : (\n                  <>\n                    <UserPlus className=\"h-4 w-4 mr-2\" />\n                    Assign Phone Number\n                  </>\n                )}\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default SuperAdminPhoneNumberManagement;\n","import React from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Loader2, Bug, Phone, User } from \"lucide-react\";\nimport axiosInstance from \"@/api/axios/axiosInstance\";\nimport usePermissions from \"@/hooks/usePermissions\";\n\nconst PhoneNumberDebug = () => {\n  const { isSuperAdmin } = usePermissions();\n\n  // Debug: Get all assignments\n  const { data: allAssignments, isLoading: assignmentsLoading, refetch: refetchAssignments } = useQuery({\n    queryKey: [\"debug-assignments\"],\n    queryFn: async () => {\n      const response = await axiosInstance.get(\"/api/phone-numbers/debug/assignments\");\n      return response.data;\n    },\n    retry: 1,\n  });\n\n  // Debug: Get user's phone numbers\n  const { data: userNumbers, isLoading: userLoading, refetch: refetchUser } = useQuery({\n    queryKey: [\"debug-user-numbers\"],\n    queryFn: async () => {\n      const response = await axiosInstance.get(\"/api/phone-numbers/debug/user-numbers\");\n      return response.data;\n    },\n    retry: 1,\n  });\n\n  // Regular phone numbers API\n  const { data: regularNumbers, isLoading: regularLoading, refetch: refetchRegular } = useQuery({\n    queryKey: [\"regular-phone-numbers\"],\n    queryFn: async () => {\n      const response = await axiosInstance.get(\"/api/phone-numbers\");\n      return response.data;\n    },\n    retry: 1,\n  });\n\n  const handleRefreshAll = () => {\n    refetchAssignments();\n    refetchUser();\n    refetchRegular();\n  };\n\n  if (assignmentsLoading || userLoading || regularLoading) {\n    return (\n      <Card>\n        <CardContent className=\"flex items-center justify-center h-32\">\n          <Loader2 className=\"h-8 w-8 animate-spin\" />\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <Bug className=\"h-5 w-5 text-orange-600\" />\n              <CardTitle>Phone Number Assignment Debug</CardTitle>\n            </div>\n            <Button onClick={handleRefreshAll} variant=\"outline\" size=\"sm\">\n              Refresh All\n            </Button>\n          </div>\n          <CardDescription>\n            Debug information for phone number assignments. This helps identify why assigned phone numbers might not be showing up for users.\n          </CardDescription>\n        </CardHeader>\n      </Card>\n\n      {/* User Debug Info */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <User className=\"h-4 w-4\" />\n            Current User Debug Info\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {userNumbers && (\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <strong>User ID:</strong> {userNumbers.debug_info?.user_id}\n                </div>\n                <div>\n                  <strong>Is Super Admin:</strong> {userNumbers.debug_info?.is_super_admin ? \"Yes\" : \"No\"}\n                </div>\n                <div>\n                  <strong>Phone Count:</strong> {userNumbers.debug_info?.phone_count}\n                </div>\n                <div>\n                  <strong>Is Super Admin (Hook):</strong> {isSuperAdmin ? \"Yes\" : \"No\"}\n                </div>\n              </div>\n              \n              <div>\n                <strong>Phone Number IDs:</strong>\n                <div className=\"mt-2\">\n                  {userNumbers.debug_info?.phone_number_ids?.length > 0 ? (\n                    userNumbers.debug_info.phone_number_ids.map((id: string) => (\n                      <Badge key={id} variant=\"outline\" className=\"mr-2 mb-2\">\n                        {id}\n                      </Badge>\n                    ))\n                  ) : (\n                    <Badge variant=\"destructive\">No phone number IDs found</Badge>\n                  )}\n                </div>\n              </div>\n\n              <div>\n                <strong>User's Phone Numbers:</strong>\n                {userNumbers.data?.length > 0 ? (\n                  <Table className=\"mt-2\">\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>DB ID</TableHead>\n                        <TableHead>Phone Number ID</TableHead>\n                        <TableHead>Number</TableHead>\n                        <TableHead>User ID</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {userNumbers.data.map((phone: any) => (\n                        <TableRow key={phone.id}>\n                          <TableCell>{phone.id}</TableCell>\n                          <TableCell>{phone.phone_number_id || \"N/A\"}</TableCell>\n                          <TableCell>{phone.number || \"N/A\"}</TableCell>\n                          <TableCell>{phone.user_id}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                ) : (\n                  <Badge variant=\"destructive\" className=\"mt-2\">No phone numbers found for user</Badge>\n                )}\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* All Assignments (Super Admin Only) */}\n      {isSuperAdmin && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Phone className=\"h-4 w-4\" />\n              All Phone Number Assignments\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {allAssignments && (\n              <div className=\"space-y-4\">\n                <div className=\"grid grid-cols-3 gap-4\">\n                  <div>\n                    <strong>Total:</strong> {allAssignments.debug_info?.total_count}\n                  </div>\n                  <div>\n                    <strong>Assigned:</strong> {allAssignments.debug_info?.assigned_count}\n                  </div>\n                  <div>\n                    <strong>Unassigned:</strong> {allAssignments.debug_info?.unassigned_count}\n                  </div>\n                </div>\n\n                {allAssignments.data?.length > 0 ? (\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>DB ID</TableHead>\n                        <TableHead>Phone Number ID</TableHead>\n                        <TableHead>Number</TableHead>\n                        <TableHead>Assigned User</TableHead>\n                        <TableHead>User ID</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {allAssignments.data.map((phone: any) => (\n                        <TableRow key={phone.id}>\n                          <TableCell>{phone.id}</TableCell>\n                          <TableCell>{phone.phone_number_id || \"N/A\"}</TableCell>\n                          <TableCell>{phone.number || \"N/A\"}</TableCell>\n                          <TableCell>\n                            {phone.user_name ? (\n                              <div>\n                                <div className=\"font-medium\">{phone.user_name}</div>\n                                <div className=\"text-xs text-muted-foreground\">{phone.user_email}</div>\n                              </div>\n                            ) : (\n                              <Badge variant=\"outline\">Unassigned</Badge>\n                            )}\n                          </TableCell>\n                          <TableCell>{phone.user_id || \"NULL\"}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                ) : (\n                  <Badge variant=\"destructive\">No phone numbers found in database</Badge>\n                )}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Regular API Response */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Phone className=\"h-4 w-4\" />\n            Regular Phone Numbers API Response\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {regularNumbers && (\n            <div className=\"space-y-4\">\n              <div>\n                <strong>Success:</strong> {regularNumbers.success ? \"Yes\" : \"No\"}\n              </div>\n              <div>\n                <strong>Count:</strong> {regularNumbers.data?.length || 0}\n              </div>\n              \n              {regularNumbers.data?.length > 0 ? (\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>ID</TableHead>\n                      <TableHead>Number</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead>Created By</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {regularNumbers.data.map((phone: any) => (\n                      <TableRow key={phone.id}>\n                        <TableCell>{phone.id}</TableCell>\n                        <TableCell>{phone.number || \"N/A\"}</TableCell>\n                        <TableCell>{phone.status || \"N/A\"}</TableCell>\n                        <TableCell>{phone.created_by || phone.user_name || \"N/A\"}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              ) : (\n                <Badge variant=\"destructive\">No phone numbers returned by regular API</Badge>\n              )}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default PhoneNumberDebug;\n","import React, { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Loader2, Phone, Plus, Search, ShoppingCart, Edit, Trash2 } from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport Page from \"@/components/Page\";\nimport CreatePhoneNumberForm from \"@/components/PhoneNumbers/CreatePhoneNumberForm\";\nimport SuperAdminPhoneNumberManagement from \"@/components/PhoneNumbers/SuperAdminPhoneNumberManagement\";\nimport PhoneNumberDebug from \"@/components/Debug/PhoneNumberDebug\";\n\nimport {\n  getAllPhoneNumbers,\n  searchAvailablePhoneNumbers,\n  buyPhoneNumber,\n  updatePhoneNumber,\n  deletePhoneNumber\n} from \"@/api/services/phoneNumbers/phoneNumberService\";\nimport { fetchAllAgents } from \"@/api/services/agents/agentService\";\nimport usePermissions from \"@/hooks/usePermissions\";\nimport type { PhoneNumber, AvailablePhoneNumber, PhoneNumberSearchParams } from \"@/api/services/phoneNumbers/phoneNumberService\";\n\nconst PhoneNumbers = () => {\n  const [searchParams, setSearchParams] = useState<PhoneNumberSearchParams>({\n    country: \"US\",\n    limit: 10,\n  });\n  const [selectedNumber, setSelectedNumber] = useState<PhoneNumber | null>(null);\n  const [isSearchDialogOpen, setIsSearchDialogOpen] = useState(false);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const [viewMode, setViewMode] = useState<\"user\" | \"admin\" | \"debug\">(\"user\");\n  const [editForm, setEditForm] = useState({\n    friendlyName: \"\",\n    assistantId: \"\",\n  });\n\n  const queryClient = useQueryClient();\n  const { isSuperAdmin } = usePermissions();\n\n  // Fetch owned phone numbers\n  const { data: phoneNumbersData, isLoading: numbersLoading, error: numbersError } = useQuery({\n    queryKey: [\"phoneNumbers\"],\n    queryFn: () => getAllPhoneNumbers(),\n    retry: 1,\n  });\n\n  // Handle success/error with useEffect\n  React.useEffect(() => {\n    if (phoneNumbersData) {\n      console.log(\"Phone numbers data received:\", phoneNumbersData);\n      if (phoneNumbersData?.data?.length > 0) {\n        console.log(\"First phone number structure:\", phoneNumbersData.data[0]);\n      }\n    }\n  }, [phoneNumbersData]);\n\n  React.useEffect(() => {\n    if (numbersError) {\n      console.error(\"Phone numbers fetch error:\", numbersError);\n    }\n  }, [numbersError]);\n\n  // Fetch available phone numbers for purchase\n  const { data: availableNumbers, isLoading: searchLoading, refetch: searchNumbers } = useQuery({\n    queryKey: [\"phoneNumbers\", \"available\", searchParams],\n    queryFn: () => searchAvailablePhoneNumbers(searchParams),\n    enabled: false,\n  });\n\n  // Fetch assistants for assignment\n  const { data: assistantsData } = useQuery({\n    queryKey: [\"assistants\"],\n    queryFn: () => fetchAllAgents(1, \"\"),\n    retry: 1,\n  });\n\n  // Buy phone number mutation\n  const buyNumberMutation = useMutation({\n    mutationFn: buyPhoneNumber,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"phoneNumbers\"] });\n      toast.success(\"Phone number purchased successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.response?.data?.message || \"Failed to purchase phone number\");\n    },\n  });\n\n  // Update phone number mutation\n  const updateNumberMutation = useMutation({\n    mutationFn: ({ id, data }: { id: string; data: any }) => updatePhoneNumber(id, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"phoneNumbers\"] });\n      setIsEditDialogOpen(false);\n      toast.success(\"Phone number updated successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.response?.data?.message || \"Failed to update phone number\");\n    },\n  });\n\n  // Delete phone number mutation\n  const deleteNumberMutation = useMutation({\n    mutationFn: deletePhoneNumber,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"phoneNumbers\"] });\n      toast.success(\"Phone number deleted successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.response?.data?.message || \"Failed to delete phone number\");\n    },\n  });\n\n  const handleSearch = () => {\n    searchNumbers();\n  };\n\n  const handleBuyNumber = (number: AvailablePhoneNumber) => {\n    buyNumberMutation.mutate({\n      number: number.number,\n      friendlyName: number.friendlyName,\n    });\n  };\n\n  const handleEditNumber = (phoneNumber: PhoneNumber) => {\n    setSelectedNumber(phoneNumber);\n    setEditForm({\n      friendlyName: phoneNumber.friendlyName || \"\",\n      assistantId: phoneNumber.assistantId || \"unassigned\",\n    });\n    setIsEditDialogOpen(true);\n  };\n\n  const handleUpdateNumber = () => {\n    if (!selectedNumber) return;\n\n    updateNumberMutation.mutate({\n      id: selectedNumber.id,\n      data: {\n        ...editForm,\n        assistantId: editForm.assistantId === \"unassigned\" ? \"\" : editForm.assistantId,\n      },\n    });\n  };\n\n  const handleDeleteNumber = (id: string) => {\n    if (confirm(\"Are you sure you want to delete this phone number?\")) {\n      deleteNumberMutation.mutate(id);\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    const variants: Record<string, \"default\" | \"secondary\" | \"destructive\" | \"outline\"> = {\n      active: \"default\",\n      inactive: \"secondary\",\n      pending: \"outline\",\n    };\n    return <Badge variant={variants[status] || \"outline\"}>{status}</Badge>;\n  };\n\n  const assistants = assistantsData?.data?.assistants || [];\n\n  if (numbersError) {\n    return (\n      <div className=\"space-y-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Phone Numbers</h1>\n          <p className=\"text-muted-foreground\">\n            Manage your phone numbers and purchase new ones\n          </p>\n        </div>\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"text-center\">\n              <p className=\"text-muted-foreground mb-4\">\n                Unable to connect to the backend API. Please ensure the backend server is running.\n              </p>\n              <Button onClick={() => window.location.reload()}>\n                Retry Connection\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <Page>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold tracking-tight\">Phone Numbers</h1>\n            <p className=\"text-muted-foreground\">\n              {viewMode === \"admin\" ? \"Manage phone number assignments for all users\" : \"Get free AI CRUITMENT phone numbers.\"}\n            </p>\n          </div>\n          {isSuperAdmin && (\n            <div className=\"flex gap-2 mr-4\">\n              <Button\n                variant={viewMode === \"user\" ? \"default\" : \"outline\"}\n                onClick={() => setViewMode(\"user\")}\n                size=\"sm\"\n              >\n                User View\n              </Button>\n              <Button\n                variant={viewMode === \"admin\" ? \"default\" : \"outline\"}\n                onClick={() => setViewMode(\"admin\")}\n                size=\"sm\"\n              >\n                Admin Management\n              </Button>\n              <Button\n                variant={viewMode === \"debug\" ? \"default\" : \"outline\"}\n                onClick={() => setViewMode(\"debug\")}\n                size=\"sm\"\n              >\n                Debug\n              </Button>\n            </div>\n          )}\n          {viewMode === \"user\" && (\n            <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n              <DialogTrigger asChild>\n                <Button>\n                  <Plus className=\"h-4 w-4 mr-2\" />\n                  Create Phone Number\n                </Button>\n              </DialogTrigger>\n            <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n              <DialogHeader>\n                <DialogTitle>Create New Phone Number</DialogTitle>\n                <DialogDescription>\n                  Get a free AI CRUITMENT phone number.\n                </DialogDescription>\n              </DialogHeader>\n              <CreatePhoneNumberForm\n                onSuccess={() => setIsCreateDialogOpen(false)}\n                onCancel={() => setIsCreateDialogOpen(false)}\n              />\n            </DialogContent>\n          </Dialog>\n          )}\n        </div>\n\n        {/* Conditional Content Based on View Mode */}\n        {viewMode === \"admin\" ? (\n          <SuperAdminPhoneNumberManagement />\n        ) : viewMode === \"debug\" ? (\n          <PhoneNumberDebug />\n        ) : (\n          <>\n        <Dialog open={isSearchDialogOpen} onOpenChange={setIsSearchDialogOpen}>\n          {/* <DialogTrigger asChild>\n            <Button>\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Buy Number\n            </Button>\n          </DialogTrigger> */}\n          <DialogContent className=\"max-w-4xl\">\n            <DialogHeader>\n              <DialogTitle>Search & Buy Phone Numbers</DialogTitle>\n              <DialogDescription>\n                Search for available phone numbers to purchase\n              </DialogDescription>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div>\n                  <Label htmlFor=\"country\">Country</Label>\n                  <Select\n                    value={searchParams.country}\n                    onValueChange={(value) => setSearchParams(prev => ({ ...prev, country: value }))}\n                  >\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"US\">United States</SelectItem>\n                      <SelectItem value=\"CA\">Canada</SelectItem>\n                      <SelectItem value=\"GB\">United Kingdom</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Label htmlFor=\"areaCode\">Area Code</Label>\n                  <Input\n                    id=\"areaCode\"\n                    value={searchParams.areaCode || \"\"}\n                    onChange={(e) => setSearchParams(prev => ({ ...prev, areaCode: e.target.value }))}\n                    placeholder=\"e.g., 415\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"contains\">Contains</Label>\n                  <Input\n                    id=\"contains\"\n                    value={searchParams.contains || \"\"}\n                    onChange={(e) => setSearchParams(prev => ({ ...prev, contains: e.target.value }))}\n                    placeholder=\"e.g., 1234\"\n                  />\n                </div>\n                <div className=\"flex items-end\">\n                  <Button onClick={handleSearch} disabled={searchLoading} className=\"w-full\">\n                    {searchLoading ? <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" /> : <Search className=\"h-4 w-4 mr-2\" />}\n                    Search\n                  </Button>\n                </div>\n              </div>\n\n              {availableNumbers && (\n                <div className=\"border rounded-lg\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Number</TableHead>\n                        <TableHead>Location</TableHead>\n                        <TableHead>Capabilities</TableHead>\n                        <TableHead>Price/Month</TableHead>\n                        <TableHead>Action</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {availableNumbers.data?.map((number: AvailablePhoneNumber) => (\n                        <TableRow key={number.number}>\n                          <TableCell className=\"font-mono\">{number.number}</TableCell>\n                          <TableCell>\n                            {number.locality && number.region\n                              ? `${number.locality}, ${number.region}`\n                              : number.locality || number.region || \"Unknown Location\"\n                            }\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"flex gap-1\">\n                              {number.capabilities?.voice && <Badge variant=\"outline\">Voice</Badge>}\n                              {number.capabilities?.sms && <Badge variant=\"outline\">SMS</Badge>}\n                              {number.capabilities?.mms && <Badge variant=\"outline\">MMS</Badge>}\n                              {!number.capabilities && <Badge variant=\"outline\">Unknown</Badge>}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            {number.monthlyPrice !== undefined\n                              ? `$${number.monthlyPrice}`\n                              : \"Contact for pricing\"\n                            }\n                          </TableCell>\n                          <TableCell>\n                            <Button\n                              size=\"sm\"\n                              onClick={() => handleBuyNumber(number)}\n                              disabled={buyNumberMutation.isPending}\n                            >\n                              {buyNumberMutation.isPending ? (\n                                <Loader2 className=\"h-3 w-3 mr-1 animate-spin\" />\n                              ) : (\n                                <ShoppingCart className=\"h-3 w-3 mr-1\" />\n                              )}\n                              Buy\n                            </Button>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </div>\n          </DialogContent>\n        </Dialog>\n\n        {/* Phone Numbers List */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Phone className=\"h-5 w-5\" />\n            Your Phone Numbers\n          </CardTitle>\n          <CardDescription>\n            Manage your purchased phone numbers and their assignments\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {numbersLoading ? (\n            <div className=\"flex items-center justify-center h-32\">\n              <Loader2 className=\"h-8 w-8 animate-spin\" />\n            </div>\n          ) : (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Number</TableHead>\n                  <TableHead>Created By</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead>Assigned Assistant</TableHead>\n                  <TableHead>Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {phoneNumbersData?.data?.length === 0 ? (\n                  <TableRow>\n                    <TableCell colSpan={6} className=\"text-center text-muted-foreground\">\n                      No phone numbers found. Purchase your first number to get started.\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  phoneNumbersData?.data?.map((phoneNumber: PhoneNumber) => (\n                    <TableRow key={phoneNumber.id}>\n                      <TableCell className=\"font-mono\">{phoneNumber.number || \"Unknown\"}</TableCell>\n                      <TableCell>\n                        <div className=\"flex flex-col\">\n                          <span className=\"font-medium\">{phoneNumber.created_by || phoneNumber.user_name || \"Unknown User\"}</span>\n                          {phoneNumber.user_email && (\n                            <span className=\"text-xs text-muted-foreground\">{phoneNumber.user_email}</span>\n                          )}\n                        </div>\n                      </TableCell>\n                      <TableCell>{getStatusBadge(phoneNumber.status || \"inactive\")}</TableCell>\n                   \n                      <TableCell>\n                        {phoneNumber.assistantId ? (\n                          <Badge variant=\"secondary\">Assigned</Badge>\n                        ) : (\n                          <Badge variant=\"outline\">Unassigned</Badge>\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex gap-2\">\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => handleEditNumber(phoneNumber)}\n                          >\n                            <Edit className=\"h-3 w-3\" />\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => handleDeleteNumber(phoneNumber.id)}\n                            disabled={deleteNumberMutation.isPending}\n                          >\n                            <Trash2 className=\"h-3 w-3\" />\n                          </Button>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )}\n              </TableBody>\n            </Table>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Edit Dialog */}\n      <Dialog open={isEditDialogOpen} onOpenChange={setIsEditDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Edit Phone Number</DialogTitle>\n            <DialogDescription>\n              Update the phone number settings\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"friendlyName\">Friendly Name</Label>\n              <Input\n                id=\"friendlyName\"\n                value={editForm.friendlyName}\n                onChange={(e) => setEditForm(prev => ({ ...prev, friendlyName: e.target.value }))}\n                placeholder=\"Enter a friendly name...\"\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"assistantId\">Assign to Assistant</Label>\n              <Select\n                value={editForm.assistantId}\n                onValueChange={(value) => setEditForm(prev => ({ ...prev, assistantId: value }))}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select an assistant\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"unassigned\">Unassigned</SelectItem>\n                  {assistants.map((assistant: any) => (\n                    <SelectItem key={assistant.id} value={assistant.id}>\n                      {assistant.name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <Button\n              onClick={handleUpdateNumber}\n              disabled={updateNumberMutation.isPending}\n              className=\"w-full\"\n            >\n              {updateNumberMutation.isPending && <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />}\n              Update Phone Number\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n          </>\n        )}\n      </div>\n    </Page>\n  );\n};\n\nexport default PhoneNumbers;\n"],"names":["CreatePhoneNumberForm","onSuccess","onCancel","user","useAuth","isSuperAdmin","usePermissions","formData","setFormData","useState","isAdvancedOpen","setIsAdvancedOpen","queryClient","useQueryClient","assistantsData","assistantsLoading","useQuery","fetchAllAgentsComplete","failureCount","error","_a","assistants","createMutation","useMutation","createPhoneNumber","toast","_b","handleInputChange","field","value","prev","formatPhoneNumber","phone","cleaned","handlePhoneNumberChange","formatted","validateForm","handleSubmit","e","submitData","renderProviderCredentials","jsxs","jsx","Shield","Label","Input","CreditGuard","Card","CardHeader","CardTitle","Phone","CardDescription","CardContent","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Bot","Loader2","Fragment","assistant","Alert","AlertCircle","AlertDescription","Button","SuperAdminPhoneNumberManagement","selectedPhoneNumber","setSelectedPhoneNumber","selectedUserId","setSelectedUserId","isAssignDialogOpen","setIsAssignDialogOpen","phoneNumbersData","numbersLoading","numbersError","getAllVapiPhoneNumbersForAdmin","usersData","usersLoading","getAllUsersWithRoles","assignMutation","phoneNumberId","userId","vapiId","axiosInstance","assignPhoneNumberToUser","unassignMutation","unassignPhoneNumber","handleAssignClick","phoneNumber","handleAssignSubmit","handleUnassign","phoneNumbers","users","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","Badge","UserMinus","UserPlus","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","Users","PhoneNumberDebug","allAssignments","assignmentsLoading","refetchAssignments","userNumbers","userLoading","refetchUser","regularNumbers","regularLoading","refetchRegular","handleRefreshAll","Bug","User","_c","_e","_d","id","_f","_g","_h","_i","_j","_k","_l","PhoneNumbers","searchParams","setSearchParams","selectedNumber","setSelectedNumber","isSearchDialogOpen","setIsSearchDialogOpen","isEditDialogOpen","setIsEditDialogOpen","isCreateDialogOpen","setIsCreateDialogOpen","viewMode","setViewMode","editForm","setEditForm","getAllPhoneNumbers","React","availableNumbers","searchLoading","searchNumbers","searchAvailablePhoneNumbers","fetchAllAgents","buyNumberMutation","buyPhoneNumber","updateNumberMutation","data","updatePhoneNumber","deleteNumberMutation","deletePhoneNumber","handleSearch","handleBuyNumber","number","handleEditNumber","handleUpdateNumber","handleDeleteNumber","getStatusBadge","status","variants","Page","DialogTrigger","Plus","Search","ShoppingCart","Edit","Trash2"],"mappings":"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"}