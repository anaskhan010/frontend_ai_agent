{"version":3,"file":"Workflows-By1dtCgL.js","sources":["../../src/hooks/useDebounce.ts","../../src/hooks/useAccessibleDropdown.ts","../../src/pages/Workflows/CreateWorkflow.tsx","../../src/pages/Workflows/Workflows.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\n/**\n * Custom hook that debounces a value\n * @param value - The value to debounce\n * @param delay - The delay in milliseconds\n * @returns The debounced value\n */\nexport function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    // Set up a timer to update the debounced value after the delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    // Clean up the timer if the value changes before the delay is complete\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import { useCallback, useRef } from 'react';\n\n/**\n * Custom hook to handle accessible dropdown menu interactions\n * Prevents aria-hidden focus conflicts and improves keyboard navigation\n */\nexport function useAccessibleDropdown() {\n  const triggerRef = useRef<HTMLButtonElement>(null);\n\n  const handleOpenAutoFocus = useCallback((event: Event) => {\n    // Prevent the default auto-focus behavior that can conflict with aria-hidden\n    event.preventDefault();\n    \n    // Allow natural focus flow instead of forcing focus\n    // This prevents the aria-hidden warning while maintaining accessibility\n  }, []);\n\n  const handleCloseAutoFocus = useCallback((event: Event) => {\n    // Prevent focus issues when closing dropdown\n    event.preventDefault();\n    \n    // Return focus to the trigger button manually for better UX\n    if (triggerRef.current) {\n      triggerRef.current.focus();\n    }\n  }, []);\n\n  const handleKeyDown = useCallback((event: React.KeyboardEvent) => {\n    // Handle escape key to close dropdown\n    if (event.key === 'Escape') {\n      event.preventDefault();\n      if (triggerRef.current) {\n        triggerRef.current.focus();\n      }\n    }\n  }, []);\n\n  return {\n    triggerRef,\n    handleOpenAutoFocus,\n    handleCloseAutoFocus,\n    handleKeyDown,\n    // Props to spread on DropdownMenuContent\n    contentProps: {\n      onOpenAutoFocus: handleOpenAutoFocus,\n      onCloseAutoFocus: handleCloseAutoFocus,\n      onKeyDown: handleKeyDown,\n    },\n    // Props to spread on DropdownMenuTrigger\n    triggerProps: {\n      ref: triggerRef,\n    },\n  };\n}\n\n/**\n * Utility function to create accessible dropdown menu item props\n */\nexport function createAccessibleMenuItem(\n  label: string,\n  action: string = 'activate'\n) {\n  return {\n    'aria-label': `${action} ${label}`,\n    role: 'menuitem',\n  };\n}\n\n/**\n * Utility function to create accessible dropdown trigger props\n */\nexport function createAccessibleTrigger(itemName: string) {\n  return {\n    'aria-label': `Actions for ${itemName}`,\n    'aria-haspopup': 'menu' as const,\n    'aria-expanded': false, // This will be managed by Radix\n  };\n}\n","import { useState } from \"react\";\nimport { useMutation, useQueryClient, useQuery } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport * as z from \"zod\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Loader2, GitBranch as WorkflowIcon, FileText, Bot, UserCheck } from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  createWorkflow,\n  getWorkflowTemplates,\n} from \"@/api/services/workflows/workflowService\";\nimport { VapiWorkflowService } from \"@/api/services/vapi/vapiService\";\nimport { fetchAllAgentsComplete } from \"@/api/services/agents/agentService\";\nimport { WorkflowTemplate } from \"@/types/api\";\n\nconst formSchema = z.object({\n  name: z.string().min(1, \"Name is required\").max(80, \"Name must be 80 characters or less\"),\n  description: z.string().optional(),\n  template: z.string().optional(),\n  assistantId: z.string().optional(),\n});\n\ntype FormData = z.infer<typeof formSchema>;\n\nconst CreateWorkflow = () => {\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const [selectedTemplate, setSelectedTemplate] = useState<WorkflowTemplate | null>(null);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: \"\",\n      description: \"\",\n      template: \"\",\n    },\n  });\n\n  // Fetch workflow templates\n  const { data: templatesData, isLoading: templatesLoading } = useQuery({\n    queryKey: [\"workflow-templates\"],\n    queryFn: getWorkflowTemplates,\n  });\n\n  // Fetch available agents\n  const { data: agentsData, isLoading: agentsLoading } = useQuery({\n    queryKey: [\"agents-all\"],\n    queryFn: () => fetchAllAgentsComplete(\"\"),\n  });\n\n  // Create workflow mutation - Use VAPI service for proper VAPI integration\n  const createMutation = useMutation({\n    mutationFn: VapiWorkflowService.createWorkflow,\n    onSuccess: (data) => {\n      console.log(\"VAPI Workflow creation response:\", data);\n      queryClient.invalidateQueries({ queryKey: [\"workflows\"] });\n      toast.success(\"Workflow created successfully\");\n      // Navigate to workflow builder\n      const workflowId = data?.id;\n      console.log(\"Navigating to workflow:\", workflowId);\n      navigate(`/workflows/${workflowId}/edit`);\n    },\n    onError: (error: any) => {\n      console.error(\"VAPI Workflow creation error:\", error);\n      toast.error(error.response?.data?.message || \"Failed to create workflow\");\n    },\n  });\n\n  const onSubmit = (data: FormData) => {\n    let workflowData: any = {\n      name: data.name,\n      description: data.description,\n      assistantId: data.assistantId === \"none\" ? undefined : data.assistantId, // Handle \"none\" value\n    };\n\n    // If template is selected, use template data\n    if (selectedTemplate) {\n      workflowData = {\n        ...workflowData,\n        nodes: selectedTemplate.nodes,\n        edges: selectedTemplate.edges,\n      };\n    } else {\n      // Create basic workflow with start node\n      workflowData = {\n        ...workflowData,\n        nodes: [\n          {\n            type: \"conversation\",\n            name: \"start\",\n            isStart: true,\n            prompt: \"You are a helpful AI assistant. Greet the user and ask how you can help them today.\"\n          }\n        ],\n        edges: [],\n      };\n    }\n\n    createMutation.mutate(workflowData);\n  };\n\n  const handleTemplateSelect = (templateId: string) => {\n    const template = templatesData?.data?.find((t: WorkflowTemplate) => t.id === templateId);\n    setSelectedTemplate(template || null);\n    form.setValue(\"template\", templateId);\n    \n    if (template) {\n      // Auto-fill name if empty\n      if (!form.getValues(\"name\")) {\n        form.setValue(\"name\", template.name);\n      }\n      // Auto-fill description if empty\n      if (!form.getValues(\"description\")) {\n        form.setValue(\"description\", template.description);\n      }\n    }\n  };\n\n  const templates = templatesData?.data || [];\n\n  return (\n    <div className=\"space-y-6 h-full overflow-y-auto p-1\">\n      <div className=\"flex items-center gap-3 pb-4 border-b border-gray-200\">\n        <div className=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center\">\n          <WorkflowIcon className=\"h-4 w-4 text-blue-600\" />\n        </div>\n        <h2 className=\"text-xl font-semibold text-gray-900\">Create New Workflow</h2>\n      </div>\n\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n          {/* Basic Information */}\n          <Card className=\"border border-gray-200 shadow-sm\">\n            <CardHeader className=\"pb-4\">\n              <CardTitle className=\"text-lg font-medium text-gray-900\">Basic Information</CardTitle>\n              <CardDescription className=\"text-gray-600\">\n                Provide basic details for your workflow\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4 pt-0\">\n              <FormField\n                control={form.control}\n                name=\"name\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Name *</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"Enter workflow name\" {...field} />\n                    </FormControl>\n                    <FormDescription>\n                      A descriptive name for your workflow (max 80 characters)\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"description\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Description</FormLabel>\n                    <FormControl>\n                      <Textarea\n                        placeholder=\"Describe what this workflow does...\"\n                        className=\"resize-none\"\n                        rows={3}\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      Optional description to help you remember the workflow's purpose\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"assistantId\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"flex items-center gap-2\">\n                      <Bot className=\"h-4 w-4 text-primary\" />\n                      Select Agent (Optional)\n                    </FormLabel>\n                    <Select onValueChange={field.onChange} value={field.value}>\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Choose an agent for this workflow\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"none\">No Agent (Create from workflow)</SelectItem>\n                        {agentsLoading ? (\n                          <SelectItem value=\"loading\" disabled>\n                            <Loader2 className=\"h-4 w-4 animate-spin mr-2\" />\n                            Loading agents...\n                          </SelectItem>\n                        ) : (\n                          agentsData?.data?.map((agent: any) => (\n                            <SelectItem key={agent.id} value={agent.id}>\n                              <div className=\"flex items-center gap-2\">\n                                <UserCheck className=\"h-4 w-4 text-green-600\" />\n                                {agent.name}\n                              </div>\n                            </SelectItem>\n                          ))\n                        )}\n                      </SelectContent>\n                    </Select>\n                    <FormDescription>\n                      Select an existing agent to use with this workflow, or leave empty to create one automatically\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </CardContent>\n          </Card>\n\n          {/* Template Selection */}\n          <Card className=\"border border-gray-200 shadow-sm\">\n            <CardHeader className=\"pb-4\">\n              <CardTitle className=\"flex items-center gap-2 text-lg font-medium text-gray-900\">\n                <FileText className=\"h-4 w-4 text-gray-600\" />\n                Choose Template\n              </CardTitle>\n              <CardDescription className=\"text-gray-600\">\n                Start with a pre-built template or create from scratch\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"pt-0\">\n              {templatesLoading ? (\n                <div className=\"flex items-center justify-center py-8\">\n                  <Loader2 className=\"h-6 w-6 animate-spin\" />\n                  <span className=\"ml-2\">Loading templates...</span>\n                </div>\n              ) : (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {/* Blank Template */}\n                  <Card\n                    className={`cursor-pointer transition-all duration-200 border ${\n                      !selectedTemplate\n                        ? \"ring-2 ring-blue-500 bg-blue-50 border-blue-200\"\n                        : \"hover:bg-gray-50 hover:border-gray-300 border-gray-200\"\n                    }`}\n                    onClick={() => {\n                      setSelectedTemplate(null);\n                      form.setValue(\"template\", \"\");\n                    }}\n                  >\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"w-10 h-10 bg-gray-100 rounded-lg flex items-center justify-center\">\n                          <WorkflowIcon className=\"h-5 w-5 text-gray-600\" />\n                        </div>\n                        <div className=\"flex-1\">\n                          <h3 className=\"font-medium\">Blank Workflow</h3>\n                          <p className=\"text-sm text-gray-600\">Start from scratch</p>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  {/* Template Options */}\n                  {templates.map((template: WorkflowTemplate) => (\n                    <Card\n                      key={template.id}\n                      className={`cursor-pointer transition-all duration-200 border ${\n                        selectedTemplate?.id === template.id\n                          ? \"ring-2 ring-blue-500 bg-blue-50 border-blue-200\"\n                          : \"hover:bg-gray-50 hover:border-gray-300 border-gray-200\"\n                      }`}\n                      onClick={() => handleTemplateSelect(template.id)}\n                    >\n                      <CardContent className=\"p-4\">\n                        <div className=\"flex items-center gap-3\">\n                          <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n                            <FileText className=\"h-5 w-5 text-blue-600\" />\n                          </div>\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center gap-2\">\n                              <h3 className=\"font-medium\">{template.name}</h3>\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                {template.category}\n                              </Badge>\n                            </div>\n                            <p className=\"text-sm text-gray-600 mt-1\">\n                              {template.description}\n                            </p>\n                            <div className=\"flex items-center gap-2 mt-2\">\n                              <Badge variant=\"secondary\" className=\"text-xs\">\n                                {template.nodes?.length || 0} nodes\n                              </Badge>\n                            </div>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Submit Button */}\n          <div className=\"flex justify-end gap-3 pt-4 border-t border-gray-200\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => form.reset()}\n              className=\"px-6\"\n            >\n              Reset\n            </Button>\n            <Button\n              type=\"submit\"\n              disabled={createMutation.isPending}\n              className=\"min-w-[140px] px-6 bg-blue-600 hover:bg-blue-700\"\n            >\n              {createMutation.isPending ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Creating...\n                </>\n              ) : (\n                \"Create Workflow\"\n              )}\n            </Button>\n          </div>\n        </form>\n      </Form>\n    </div>\n  );\n};\n\nexport default CreateWorkflow;\n","import { useState, useEffect } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useDebounce } from \"@/hooks/useDebounce\";\nimport { useAccessibleDropdown, createAccessibleTrigger, createAccessibleMenuItem } from \"@/hooks/useAccessibleDropdown\";\nimport secureLocalStorage from 'react-secure-storage';\nimport Page from \"@/components/Page\";\nimport Header from \"@/components/Header\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport {\n  MoreHorizontal,\n  Plus,\n  Search,\n  Play,\n  Edit,\n  Trash2,\n  Download,\n  Upload,\n  Copy,\n  GitBranch as WorkflowIcon,\n} from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  getAllWorkflows,\n  deleteWorkflow,\n  testWorkflow,\n  exportWorkflow,\n  importWorkflow,\n} from \"@/api/services/workflows/workflowService\";\nimport { VapiWorkflowService } from \"@/api/services/vapi/vapiService\";\nimport { Workflow } from \"@/types/api\";\nimport CreateWorkflow from \"./CreateWorkflow\";\n\nconst Workflows = () => {\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const [search, setSearch] = useState(\"\");\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [selectedWorkflow, setSelectedWorkflow] = useState<Workflow | null>(null);\n  const [viewMode, setViewMode] = useState<\"list\" | \"grid\">(\"list\");\n  const [openDropdown, setOpenDropdown] = useState<string | null>(null);\n  const debouncedSearch = useDebounce(search, 300);\n\n  // Accessible dropdown hook for better accessibility\n  const accessibleDropdown = useAccessibleDropdown();\n\n  // Cleanup effect to handle focus issues\n  useEffect(() => {\n    // Close dropdown when delete dialog opens\n    if (deleteDialogOpen) {\n      setOpenDropdown(null);\n    }\n  }, [deleteDialogOpen]);\n\n  // Fetch workflows\n  const {\n    data: workflowsData,\n    isLoading,\n    error,\n  } = useQuery({\n    queryKey: [\"workflows\", debouncedSearch],\n    queryFn: () => getAllWorkflows(1, debouncedSearch),\n  });\n\n  // Delete workflow mutation - Use VAPI service for proper VAPI integration\n  const deleteMutation = useMutation({\n    mutationFn: VapiWorkflowService.deleteWorkflow,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"workflows\"] });\n      setDeleteDialogOpen(false);\n      setSelectedWorkflow(null);\n      setOpenDropdown(null); // Ensure dropdown is closed\n    },\n    onError: () => {\n      // Keep dialog open on error so user can retry\n      setOpenDropdown(null); // But close dropdown\n    },\n  });\n\n  // Test workflow mutation\n  const testMutation = useMutation({\n    mutationFn: ({ id }: { id: string }) => testWorkflow(id),\n    onSuccess: () => {\n      toast.success(\"Workflow test initiated successfully\");\n    },\n  });\n\n  const handleSearchChange = (value: string) => {\n    setSearch(value);\n  };\n\n  const handleDeleteClick = (workflow: Workflow) => {\n    // Close any open dropdown first to prevent focus issues\n    setOpenDropdown(null);\n    setSelectedWorkflow(workflow);\n    setDeleteDialogOpen(true);\n  };\n\n  const handleDeleteConfirm = () => {\n    if (selectedWorkflow?.id) {\n      deleteMutation.mutate(selectedWorkflow.id);\n    }\n  };\n\n  const handleTestWorkflow = (workflow: Workflow) => {\n    if (workflow.id) {\n      testMutation.mutate({ id: workflow.id });\n    }\n  };\n\n  const handleEditWorkflow = (workflow: Workflow) => {\n    navigate(`/workflows/${workflow.id}/edit`);\n  };\n\n  const handleViewWorkflow = (workflow: Workflow) => {\n    navigate(`/workflows/${workflow.id}`);\n  };\n\n  const handleExportWorkflow = async (workflow: Workflow) => {\n    if (workflow.id) {\n      try {\n        await exportWorkflow(workflow.id);\n      } catch (error) {\n        console.error(\"Export failed:\", error);\n      }\n    }\n  };\n\n  const handleImportWorkflow = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      try {\n        await importWorkflow(file);\n        queryClient.invalidateQueries({ queryKey: [\"workflows\"] });\n      } catch (error) {\n        console.error(\"Import failed:\", error);\n      }\n    }\n    // Reset input\n    event.target.value = \"\";\n  };\n\n  const getStatusBadge = (status: string) => {\n    const statusColors = {\n      active: \"bg-green-100 text-green-800\",\n      inactive: \"bg-gray-100 text-gray-800\",\n      draft: \"bg-yellow-100 text-yellow-800\",\n      archived: \"bg-red-100 text-red-800\",\n    };\n\n    return (\n      <Badge className={statusColors[status as keyof typeof statusColors] || statusColors.inactive}>\n        {status}\n      </Badge>\n    );\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    });\n  };\n\n  if (error) {\n    return (\n      <Page>\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"text-center\">\n            <p className=\"text-red-600 mb-2\">Failed to load workflows</p>\n            <Button onClick={() => queryClient.invalidateQueries({ queryKey: [\"workflows\"] })}>\n              Try Again\n            </Button>\n          </div>\n        </div>\n      </Page>\n    );\n  }\n\n  return (\n    <Page>\n      <Header\n        title=\"Workflows\"\n        buttonText=\"Create Workflow\"\n        filterByName={true}\n        filterWord={debouncedSearch}\n        onFilterChange={handleSearchChange}\n        useSheet={true}\n        sheetContent={<CreateWorkflow />}\n        sheetSize=\"xl\"\n        viewMode={viewMode}\n        onViewModeChange={setViewMode}\n        showViewToggle={true}\n      />\n\n      <div className=\"mb-4 flex items-center gap-2\">\n        <div className=\"relative flex-1\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\n          <Input\n            placeholder=\"Search workflows...\"\n            value={search}\n            onChange={(e) => handleSearchChange(e.target.value)}\n            className=\"pl-10\"\n          />\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <input\n            type=\"file\"\n            accept=\".json\"\n            onChange={handleImportWorkflow}\n            className=\"hidden\"\n            id=\"import-workflow\"\n          />\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => document.getElementById(\"import-workflow\")?.click()}\n          >\n            <Upload className=\"h-4 w-4 mr-2\" />\n            Import\n          </Button>\n        </div>\n      </div>\n\n      <Card className=\"border-0 shadow-none bg-transparent\">\n        <CardHeader className=\"px-0 pb-4\">\n          <CardTitle className=\"flex items-center gap-2 text-xl font-semibold\">\n            <WorkflowIcon className=\"h-5 w-5\" />\n            Workflows\n          </CardTitle>\n          <CardDescription className=\"text-gray-500\">\n            Manage your voice AI workflows and conversation flows\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"px-0\">\n          {isLoading ? (\n            <div className=\"space-y-4\">\n              {[...Array(5)].map((_, i) => (\n                <div key={i} className=\"flex items-center space-x-4\">\n                  <Skeleton className=\"h-12 w-12 rounded\" />\n                  <div className=\"space-y-2 flex-1\">\n                    <Skeleton className=\"h-4 w-[250px]\" />\n                    <Skeleton className=\"h-4 w-[200px]\" />\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"rounded-lg border bg-white\">\n              <Table>\n                <TableHeader>\n                  <TableRow className=\"border-b bg-gray-50/50\">\n                    <TableHead className=\"font-medium text-gray-900\">Name</TableHead>\n                    <TableHead className=\"font-medium text-gray-900\">Description</TableHead>\n                    <TableHead className=\"font-medium text-gray-900\">Nodes</TableHead>\n                    <TableHead className=\"font-medium text-gray-900\">Status</TableHead>\n                    <TableHead className=\"font-medium text-gray-900\">Last Modified</TableHead>\n                    <TableHead className=\"text-right font-medium text-gray-900\">Actions</TableHead>\n                  </TableRow>\n                </TableHeader>\n              <TableBody>\n                {workflowsData?.data?.workflows?.map((workflow: Workflow) => (\n                  <TableRow\n                    key={workflow.id}\n                    className=\"cursor-pointer hover:bg-gray-50/50\"\n                    onClick={() => handleViewWorkflow(workflow)}\n                  >\n                    <TableCell className=\"font-medium py-4\">\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center\">\n                          <WorkflowIcon className=\"h-4 w-4 text-blue-600\" />\n                        </div>\n                        <span className=\"text-gray-900\">{workflow.name}</span>\n                      </div>\n                    </TableCell>\n                    <TableCell className=\"text-gray-600 py-4\">\n                      {workflow.description || \"No description\"}\n                    </TableCell>\n                    <TableCell className=\"py-4\">\n                      <Badge variant=\"secondary\" className=\"bg-gray-100 text-gray-700 hover:bg-gray-100\">\n                        {workflow.nodes?.length || 0} nodes\n                      </Badge>\n                    </TableCell>\n                    <TableCell className=\"py-4\">\n                      {getStatusBadge(workflow.localData?.status || \"active\")}\n                    </TableCell>\n                    <TableCell className=\"text-gray-600 py-4\">\n                      {workflow.updatedAt ? formatDate(workflow.updatedAt) : \"N/A\"}\n                    </TableCell>\n                    <TableCell className=\"text-right py-4\">\n                      <DropdownMenu\n                        open={openDropdown === workflow.id}\n                        onOpenChange={(open) => setOpenDropdown(open ? (workflow.id || null) : null)}\n                      >\n                        <DropdownMenuTrigger\n                          asChild\n                          onClick={(e) => e.stopPropagation()}\n                          {...accessibleDropdown.triggerProps}\n                        >\n                          <Button\n                            variant=\"ghost\"\n                            className=\"h-8 w-8 p-0 hover:bg-gray-100\"\n                            {...createAccessibleTrigger(workflow.name)}\n                          >\n                            <MoreHorizontal className=\"h-4 w-4\" />\n                          </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent\n                          align=\"end\"\n                          {...accessibleDropdown.contentProps}\n                        >\n                          {/* <DropdownMenuItem\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleTestWorkflow(workflow);\n                            }}\n                            {...createAccessibleMenuItem(workflow.name, 'Test')}\n                          >\n                            <Play className=\"mr-2 h-4 w-4\" />\n                            Test Workflow\n                          </DropdownMenuItem> */}\n                          <DropdownMenuItem\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleEditWorkflow(workflow);\n                            }}\n                            {...createAccessibleMenuItem(workflow.name, 'Edit')}\n                          >\n                            <Edit className=\"mr-2 h-4 w-4\" />\n                            Edit\n                          </DropdownMenuItem>\n                          <DropdownMenuItem\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleExportWorkflow(workflow);\n                            }}\n                            {...createAccessibleMenuItem(workflow.name, 'Export')}\n                          >\n                            <Download className=\"mr-2 h-4 w-4\" />\n                            Export\n                          </DropdownMenuItem>\n                          <DropdownMenuItem\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleDeleteClick(workflow);\n                            }}\n                            className=\"text-red-600\"\n                            {...createAccessibleMenuItem(workflow.name, 'Delete')}\n                          >\n                            <Trash2 className=\"mr-2 h-4 w-4\" />\n                            Delete\n                          </DropdownMenuItem>\n                        </DropdownMenuContent>\n                      </DropdownMenu>\n                    </TableCell>\n                  </TableRow>\n                ))}\n                {workflowsData?.data?.workflows?.length === 0 && (\n                  <TableRow>\n                    <TableCell colSpan={6} className=\"text-center py-8\">\n                      <div className=\"flex flex-col items-center gap-2\">\n                        <WorkflowIcon className=\"h-8 w-8 text-gray-400\" />\n                        <p className=\"text-gray-500\">No workflows found</p>\n                        <p className=\"text-sm text-gray-400\">\n                          Create your first workflow to get started\n                        </p>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Delete Confirmation Dialog */}\n      <AlertDialog open={deleteDialogOpen} onOpenChange={setDeleteDialogOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Delete Workflow</AlertDialogTitle>\n            <AlertDialogDescription>\n              Are you sure you want to delete \"{selectedWorkflow?.name}\"? This action cannot be undone.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDialogAction\n              onClick={handleDeleteConfirm}\n              className=\"bg-red-600 hover:bg-red-700\"\n              disabled={deleteMutation.isPending}\n            >\n              {deleteMutation.isPending ? \"Deleting...\" : \"Delete\"}\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      {/* Simple Debug Panel - Development Only */}\n      {process.env.NODE_ENV === 'development' && (\n        <div className=\"fixed bottom-4 right-4 flex items-center gap-2 bg-white p-2 rounded-lg shadow-lg border\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={async () => {\n              try {\n                const response = await fetch(`${import.meta.env.VITE_APP_BASE_URL}/api/auth/demo-login`, {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n                const result = await response.json();\n                if (result.success) {\n                  secureLocalStorage.setItem('token', result.data.token);\n                  console.log(\"🔐 Demo login successful:\", result.data.user);\n                  toast.success(\"Demo login successful\");\n                  window.location.reload();\n                }\n              } catch (error) {\n                console.error(\"❌ Demo login failed:\", error);\n                toast.error(\"Demo login failed\");\n              }\n            }}\n            className=\"flex items-center gap-2\"\n          >\n            Demo Login\n          </Button>\n          <Badge variant=\"outline\" className=\"text-xs\">\n            Count: {workflowsData?.data?.workflows?.length || 0}\n          </Badge>\n        </div>\n      )}\n    </Page>\n  );\n};\n\nexport default Workflows;\n"],"names":["useDebounce","value","delay","debouncedValue","setDebouncedValue","useState","useEffect","handler","useAccessibleDropdown","triggerRef","useRef","handleOpenAutoFocus","useCallback","event","handleCloseAutoFocus","handleKeyDown","createAccessibleMenuItem","label","action","createAccessibleTrigger","itemName","formSchema","z.object","z.string","CreateWorkflow","navigate","useNavigate","queryClient","useQueryClient","selectedTemplate","setSelectedTemplate","form","useForm","zodResolver","templatesData","templatesLoading","useQuery","getWorkflowTemplates","agentsData","agentsLoading","fetchAllAgentsComplete","createMutation","useMutation","VapiWorkflowService","data","toast","workflowId","error","_b","_a","onSubmit","workflowData","handleTemplateSelect","templateId","template","t","templates","jsxs","jsx","WorkflowIcon","Form","Card","CardHeader","CardTitle","CardDescription","CardContent","FormField","field","FormItem","FormLabel","FormControl","Input","FormDescription","FormMessage","Textarea","Bot","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Loader2","agent","UserCheck","FileText","Badge","Button","Fragment","Workflows","search","setSearch","deleteDialogOpen","setDeleteDialogOpen","selectedWorkflow","setSelectedWorkflow","viewMode","setViewMode","openDropdown","setOpenDropdown","debouncedSearch","accessibleDropdown","workflowsData","isLoading","getAllWorkflows","deleteMutation","id","testWorkflow","handleSearchChange","handleDeleteClick","workflow","handleDeleteConfirm","handleEditWorkflow","handleViewWorkflow","handleExportWorkflow","exportWorkflow","handleImportWorkflow","file","importWorkflow","getStatusBadge","status","statusColors","formatDate","dateString","Page","Header","Search","e","Upload","_","i","Skeleton","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","DropdownMenu","open","DropdownMenuTrigger","MoreHorizontal","DropdownMenuContent","DropdownMenuItem","Edit","Download","Trash2","_d","_c","AlertDialog","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction"],"mappings":"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"}