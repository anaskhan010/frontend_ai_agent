{"version":3,"file":"phoneNumberService-CDKFDvmI.js","sources":["../../src/api/services/phoneNumbers/phoneNumberService.ts"],"sourcesContent":["import axiosInstance from \"@/api/axios/axiosInstance\";\nimport { toast } from \"sonner\";\n\n// Types\nexport interface PhoneNumber {\n  id: string;\n  number: string;\n  friendlyName?: string;\n  provider?: string;\n  capabilities?: {\n    voice: boolean;\n    sms: boolean;\n    mms: boolean;\n  };\n  status: \"active\" | \"inactive\" | \"pending\";\n  assistantId?: string;\n  createdAt?: string;\n  updatedAt?: string;\n  // User information\n  user_id?: string;\n  user_name?: string;\n  user_email?: string;\n  created_by?: string;\n  local_created_at?: string;\n}\n\nexport interface PhoneNumberConfig {\n  provider: string;\n  phoneNumber: string;\n  name?: string;\n  assistantId?: string;\n  squadId?: string;\n  workflowId?: string;\n  fallbackDestination?: string;\n  serverUrl?: string;\n  serverUrlSecret?: string;\n  // Provider-specific credentials\n  twilioAccountSid?: string;\n  twilioAuthToken?: string;\n  vonageApiKey?: string;\n  vonageApiSecret?: string;\n  telnyxApiKey?: string;\n  telnyxApiSecret?: string;\n  // VAPI specific\n  areaCode?: string;\n}\n\nexport interface AvailablePhoneNumber {\n  number: string;\n  friendlyName?: string;\n  locality?: string;\n  region?: string;\n  country?: string;\n  capabilities?: {\n    voice: boolean;\n    sms: boolean;\n    mms: boolean;\n  };\n  monthlyPrice?: number;\n}\n\nexport interface PhoneNumberSearchParams {\n  areaCode?: string;\n  contains?: string;\n  locality?: string;\n  region?: string;\n  country?: string;\n  limit?: number;\n}\n\n// Get all phone numbers\nexport async function getAllPhoneNumbers(page?: number, search?: string) {\n  try {\n    const res = await axiosInstance.get(\"/api/phone-numbers\", {\n      params: { page, search },\n    });\n    return res.data;\n  } catch (error) {\n    console.error(\"Error fetching phone numbers:\", error);\n    toast.error(\"Failed to fetch phone numbers\");\n    throw error;\n  }\n}\n\n// Get phone number by ID\nexport async function getPhoneNumberById(id: string) {\n  try {\n    const res = await axiosInstance.get(`/api/phone-numbers/${id}`);\n    return res.data;\n  } catch (error) {\n    console.error(\"Error fetching phone number:\", error);\n    toast.error(\"Failed to fetch phone number\");\n    throw error;\n  }\n}\n\n// Create phone number\nexport async function createPhoneNumber(data: PhoneNumberConfig) {\n  try {\n    const res = await axiosInstance.post(\"/api/phone-numbers\", data);\n    toast.success(\"Phone number created successfully\");\n    return res.data;\n  } catch (error: any) {\n    console.error(\"Error creating phone number:\", error);\n    const message = error.response?.data?.message || \"Failed to create phone number\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Update phone number\nexport async function updatePhoneNumber(id: string, data: Partial<PhoneNumberConfig>) {\n  try {\n    const res = await axiosInstance.patch(`/api/phone-numbers/${id}`, data);\n    toast.success(\"Phone number updated successfully\");\n    return res.data;\n  } catch (error: any) {\n    console.error(\"Error updating phone number:\", error);\n    const message = error.response?.data?.message || \"Failed to update phone number\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Delete phone number\nexport async function deletePhoneNumber(id: string) {\n  try {\n    const res = await axiosInstance.delete(`/api/phone-numbers/${id}`);\n    toast.success(\"Phone number deleted successfully\");\n    return res.data;\n  } catch (error: any) {\n    console.error(\"Error deleting phone number:\", error);\n    const message = error.response?.data?.message || \"Failed to delete phone number\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Buy new phone number\nexport async function buyPhoneNumber(data: {\n  number: string;\n  friendlyName?: string;\n  assistantId?: string;\n}) {\n  try {\n    const res = await axiosInstance.post(\"/api/phone-numbers/buy\", data);\n    toast.success(\"Phone number purchased successfully\");\n    return res.data;\n  } catch (error: any) {\n    console.error(\"Error buying phone number:\", error);\n    const message = error.response?.data?.message || \"Failed to purchase phone number\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Search available phone numbers\nexport async function searchAvailablePhoneNumbers(params: PhoneNumberSearchParams) {\n  try {\n    const res = await axiosInstance.get(\"/api/phone-numbers/search/available\", {\n      params,\n    });\n    return res.data;\n  } catch (error) {\n    console.error(\"Error searching available phone numbers:\", error);\n    toast.error(\"Failed to search available phone numbers\");\n    throw error;\n  }\n}\n"],"names":["getAllPhoneNumbers","page","search","axiosInstance","error","toast","createPhoneNumber","data","res","message","_b","_a","updatePhoneNumber","id","deletePhoneNumber","buyPhoneNumber","searchAvailablePhoneNumbers","params"],"mappings":"+CAuEsB,eAAAA,EAAmBC,EAAeC,EAAiB,CACnE,GAAA,CAIF,OAHY,MAAMC,EAAc,IAAI,qBAAsB,CACxD,OAAQ,CAAE,KAAAF,EAAM,OAAAC,CAAO,CAAA,CACxB,GACU,WACJE,EAAO,CACN,cAAA,MAAM,gCAAiCA,CAAK,EACpDC,EAAM,MAAM,+BAA+B,EACrCD,CAAA,CAEV,CAeA,eAAsBE,EAAkBC,EAAyB,SAC3D,GAAA,CACF,MAAMC,EAAM,MAAML,EAAc,KAAK,qBAAsBI,CAAI,EAC/DF,OAAAA,EAAM,QAAQ,mCAAmC,EAC1CG,EAAI,WACJJ,EAAY,CACX,QAAA,MAAM,+BAAgCA,CAAK,EACnD,MAAMK,IAAUC,GAAAC,EAAAP,EAAM,WAAN,YAAAO,EAAgB,OAAhB,YAAAD,EAAsB,UAAW,gCACjDL,MAAAA,EAAM,MAAMI,CAAO,EACbL,CAAA,CAEV,CAGsB,eAAAQ,EAAkBC,EAAYN,EAAkC,SAChF,GAAA,CACF,MAAMC,EAAM,MAAML,EAAc,MAAM,sBAAsBU,CAAE,GAAIN,CAAI,EACtEF,OAAAA,EAAM,QAAQ,mCAAmC,EAC1CG,EAAI,WACJJ,EAAY,CACX,QAAA,MAAM,+BAAgCA,CAAK,EACnD,MAAMK,IAAUC,GAAAC,EAAAP,EAAM,WAAN,YAAAO,EAAgB,OAAhB,YAAAD,EAAsB,UAAW,gCACjDL,MAAAA,EAAM,MAAMI,CAAO,EACbL,CAAA,CAEV,CAGA,eAAsBU,EAAkBD,EAAY,SAC9C,GAAA,CACF,MAAML,EAAM,MAAML,EAAc,OAAO,sBAAsBU,CAAE,EAAE,EACjER,OAAAA,EAAM,QAAQ,mCAAmC,EAC1CG,EAAI,WACJJ,EAAY,CACX,QAAA,MAAM,+BAAgCA,CAAK,EACnD,MAAMK,IAAUC,GAAAC,EAAAP,EAAM,WAAN,YAAAO,EAAgB,OAAhB,YAAAD,EAAsB,UAAW,gCACjDL,MAAAA,EAAM,MAAMI,CAAO,EACbL,CAAA,CAEV,CAGA,eAAsBW,EAAeR,EAIlC,SACG,GAAA,CACF,MAAMC,EAAM,MAAML,EAAc,KAAK,yBAA0BI,CAAI,EACnEF,OAAAA,EAAM,QAAQ,qCAAqC,EAC5CG,EAAI,WACJJ,EAAY,CACX,QAAA,MAAM,6BAA8BA,CAAK,EACjD,MAAMK,IAAUC,GAAAC,EAAAP,EAAM,WAAN,YAAAO,EAAgB,OAAhB,YAAAD,EAAsB,UAAW,kCACjDL,MAAAA,EAAM,MAAMI,CAAO,EACbL,CAAA,CAEV,CAGA,eAAsBY,EAA4BC,EAAiC,CAC7E,GAAA,CAIF,OAHY,MAAMd,EAAc,IAAI,sCAAuC,CACzE,OAAAc,CAAA,CACD,GACU,WACJb,EAAO,CACN,cAAA,MAAM,2CAA4CA,CAAK,EAC/DC,EAAM,MAAM,0CAA0C,EAChDD,CAAA,CAEV"}