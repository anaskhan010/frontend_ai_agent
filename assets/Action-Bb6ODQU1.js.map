{"version":3,"file":"Action-Bb6ODQU1.js","sources":["../../src/pages/Actions/AddAction.tsx","../../src/components/ActionGrid.tsx","../../src/components/ActionFilterPopover.tsx","../../src/pages/Actions/Action.tsx"],"sourcesContent":["// src/pages/Actions/AddAction.tsx\r\n\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport {\r\n  SheetClose,\r\n  SheetTitle,\r\n  SheetDescription,\r\n} from \"@/components/ui/sheet\";\r\nimport {\r\n  Zap,\r\n  Settings,\r\n  Code,\r\n  PlayCircle,\r\n  Mail,\r\n  Calendar,\r\n  PhoneCall,\r\n  Clock,\r\n  AlertCircle,\r\n} from \"lucide-react\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\n\r\nexport function AddAction() {\r\n  return (\r\n    <>\r\n      <SheetTitle className=\"text-xl font-semibold jakarta bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent mb-1\">\r\n        Create Voice AI Action\r\n      </SheetTitle>\r\n      <SheetDescription className=\"text-muted-foreground mb-6\">\r\n        Configure a new action for your voice AI agents to perform.\r\n      </SheetDescription>\r\n\r\n      <div className=\"space-y-6\">\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center space-x-2 mb-2\">\r\n            <Zap className=\"h-5 w-5 text-primary\" />\r\n            <h3 className=\"text-sm font-medium\">Basic Information</h3>\r\n          </div>\r\n\r\n          <div>\r\n            <Label\r\n              htmlFor=\"name\"\r\n              className=\"text-sm font-medium text-foreground mb-1.5 block\"\r\n            >\r\n              Action Name\r\n            </Label>\r\n            <Input\r\n              id=\"name\"\r\n              placeholder=\"Enter action name\"\r\n              className=\"w-full border-border/50 bg-card focus:border-primary/50 focus:ring-primary/20\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Label\r\n              htmlFor=\"type\"\r\n              className=\"text-sm font-medium text-foreground mb-1.5 block\"\r\n            >\r\n              Action Type\r\n            </Label>\r\n            <Select>\r\n              <SelectTrigger className=\"w-full border-border/50 bg-card focus:border-primary/50 focus:ring-primary/20\">\r\n                <SelectValue placeholder=\"Select action type\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"email\">\r\n                  <div className=\"flex items-center\">\r\n                    <Mail className=\"h-4 w-4 mr-2 text-primary\" />\r\n                    <span>Send Email</span>\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"meeting\">\r\n                  <div className=\"flex items-center\">\r\n                    <Calendar className=\"h-4 w-4 mr-2 text-chart-2\" />\r\n                    <span>Schedule Meeting</span>\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"call\">\r\n                  <div className=\"flex items-center\">\r\n                    <PhoneCall className=\"h-4 w-4 mr-2 text-chart-3\" />\r\n                    <span>Make Call</span>\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"reminder\">\r\n                  <div className=\"flex items-center\">\r\n                    <Clock className=\"h-4 w-4 mr-2 text-chart-4\" />\r\n                    <span>Set Reminder</span>\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"alert\">\r\n                  <div className=\"flex items-center\">\r\n                    <AlertCircle className=\"h-4 w-4 mr-2 text-chart-5\" />\r\n                    <span>Send Alert</span>\r\n                  </div>\r\n                </SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div>\r\n            <Label\r\n              htmlFor=\"description\"\r\n              className=\"text-sm font-medium text-foreground mb-1.5 block\"\r\n            >\r\n              Description\r\n            </Label>\r\n            <Textarea\r\n              id=\"description\"\r\n              placeholder=\"Describe what this action does...\"\r\n              className=\"w-full min-h-[100px] border-border/50 bg-card focus:border-primary/50 focus:ring-primary/20\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center space-x-2 mb-2\">\r\n            <Settings className=\"h-5 w-5 text-primary\" />\r\n            <h3 className=\"text-sm font-medium\">Action Configuration</h3>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <Label\r\n                htmlFor=\"trigger\"\r\n                className=\"text-sm font-medium text-foreground mb-1.5 block\"\r\n              >\r\n                Trigger Phrase\r\n              </Label>\r\n              <Input\r\n                id=\"trigger\"\r\n                placeholder=\"e.g., 'Send an email to...'\"\r\n                className=\"w-full border-border/50 bg-card focus:border-primary/50 focus:ring-primary/20\"\r\n              />\r\n              <p className=\"text-xs text-muted-foreground mt-1\">\r\n                Voice command that triggers this action\r\n              </p>\r\n            </div>\r\n\r\n            <div>\r\n              <Label\r\n                htmlFor=\"priority\"\r\n                className=\"text-sm font-medium text-foreground mb-1.5 block\"\r\n              >\r\n                Priority\r\n              </Label>\r\n              <Select>\r\n                <SelectTrigger className=\"w-full border-border/50 bg-card focus:border-primary/50 focus:ring-primary/20\">\r\n                  <SelectValue placeholder=\"Select priority\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"high\">High</SelectItem>\r\n                  <SelectItem value=\"medium\">Medium</SelectItem>\r\n                  <SelectItem value=\"low\">Low</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-3\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <Label className=\"text-sm font-medium\">\r\n                  Require Confirmation\r\n                </Label>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  Ask for confirmation before executing\r\n                </p>\r\n              </div>\r\n              <Switch />\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <Label className=\"text-sm font-medium\">Active</Label>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  Enable this action for voice agents\r\n                </p>\r\n              </div>\r\n              <Switch defaultChecked />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center space-x-2 mb-2\">\r\n            <Code className=\"h-5 w-5 text-primary\" />\r\n            <h3 className=\"text-sm font-medium\">Advanced Settings</h3>\r\n          </div>\r\n\r\n          <div className=\"border border-border/50 rounded-lg p-4 bg-muted/20\">\r\n            <Label\r\n              htmlFor=\"code\"\r\n              className=\"text-sm font-medium text-foreground mb-1.5 block\"\r\n            >\r\n              Custom Code (Optional)\r\n            </Label>\r\n            <Textarea\r\n              id=\"code\"\r\n              placeholder=\"// Add custom code for this action\"\r\n              className=\"w-full min-h-[120px] font-mono text-xs border-border/50 bg-card focus:border-primary/50 focus:ring-primary/20\"\r\n            />\r\n            <p className=\"text-xs text-muted-foreground mt-2\">\r\n              Advanced users can add custom code to extend this action's\r\n              functionality\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-8 flex justify-end space-x-3\">\r\n        <Button\r\n          type=\"button\"\r\n          variant=\"outline\"\r\n          className=\"border-border/50 text-foreground hover:bg-muted/20 flex items-center\"\r\n          onClick={() => console.log(\"Testing action\")}\r\n        >\r\n          <PlayCircle className=\"h-4 w-4 mr-2\" />\r\n          Test Action\r\n        </Button>\r\n\r\n        <SheetClose asChild>\r\n          <Button\r\n            type=\"button\"\r\n            variant=\"outline\"\r\n            className=\"border-border/50 text-foreground hover:bg-muted/20\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </SheetClose>\r\n\r\n        <SheetClose asChild>\r\n          <Button type=\"submit\" className=\"btn-gradient text-white\">\r\n            Create Action\r\n          </Button>\r\n        </SheetClose>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { MoreHorizontal, Share2, PlayCircle, Zap } from \"lucide-react\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface ActionGridProps {\n  data: any[];\n  onItemClick: (item: any) => void;\n  actions: {\n    label: string;\n    icon: React.ReactNode;\n    onClick: (item: any) => void;\n  }[];\n  getActionTypeInfo: (actionName: string) => {\n    icon: React.ReactNode;\n    badge: string;\n  };\n}\n\nconst ActionGrid: React.FC<ActionGridProps> = ({ \n  data, \n  onItemClick, \n  actions,\n  getActionTypeInfo\n}) => {\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mt-6\">\n      {data.map((item) => {\n        const { icon, badge } = getActionTypeInfo(item.actionName);\n        const type = item.actionName.split(\" \")[0]; // Get first word as type\n        \n        // This is just for demo - in a real app you'd have a proper status field\n        const statuses = [\"Active\", \"Inactive\", \"Draft\"];\n        const statusVariants = [\"success\", \"secondary\", \"warning\"];\n        const index = Number(item.id) % 3;\n        \n        return (\n          <Card \n            key={item.id} \n            className=\"overflow-hidden border border-gray-200 hover:border-gray-300 hover:shadow-md transition-all cursor-pointer\"\n            onClick={() => onItemClick(item)}\n          >\n            <div className=\"p-4\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"h-10 w-10 bg-gradient-to-br from-primary/20 to-primary/10 rounded-lg flex items-center justify-center\">\n                    {icon}\n                  </div>\n                  <div>\n                    <div className=\"font-medium text-gray-900 line-clamp-1\">\n                      {item.actionName}\n                    </div>\n                    <div className=\"text-xs text-gray-500\">\n                      ID: ACT-{String(item.id).padStart(4, \"0\")}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-1\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-8 w-8 p-0 rounded-full hover:bg-gray-100\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      console.log(\"Run\", item);\n                    }}\n                  >\n                    <PlayCircle className=\"h-4 w-4 text-gray-500\" />\n                  </Button>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-8 w-8 p-0 rounded-full hover:bg-gray-100\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      console.log(\"Share\", item);\n                    }}\n                  >\n                    <Share2 className=\"h-4 w-4 text-gray-500\" />\n                  </Button>\n                  <DropdownMenu>\n                    <DropdownMenuTrigger asChild onClick={(e) => e.stopPropagation()}>\n                      <Button\n                        variant=\"ghost\"\n                        className=\"h-8 w-8 p-0 rounded-full hover:bg-gray-100\"\n                      >\n                        <MoreHorizontal className=\"h-4 w-4 text-gray-500\" />\n                      </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent align=\"end\" className=\"w-[160px]\">\n                      {actions.map((action, index) => (\n                        <DropdownMenuItem\n                          key={index}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            action.onClick(item);\n                          }}\n                          className=\"cursor-pointer\"\n                        >\n                          <span className=\"mr-2 h-4 w-4 text-gray-500\">\n                            {action.icon}\n                          </span>\n                          <span>{action.label}</span>\n                        </DropdownMenuItem>\n                      ))}\n                    </DropdownMenuContent>\n                  </DropdownMenu>\n                </div>\n              </div>\n              \n              <div className=\"mb-3 text-sm text-gray-600 line-clamp-2\">\n                {item.description}\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-3\">\n                <div className=\"space-y-1\">\n                  <div className=\"text-xs text-gray-500\">Type</div>\n                  <Badge\n                    variant={badge as any}\n                    className=\"capitalize\"\n                  >\n                    {type}\n                  </Badge>\n                </div>\n                <div className=\"space-y-1\">\n                  <div className=\"text-xs text-gray-500\">Status</div>\n                  <Badge\n                    variant={statusVariants[index] as any}\n                    className=\"capitalize\"\n                  >\n                    {statuses[index]}\n                  </Badge>\n                </div>\n              </div>\n            </div>\n          </Card>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ActionGrid;\n","import React, { useState } from \"react\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { Button } from \"@/components/ui/button\";\nimport { SlidersHorizontal } from \"lucide-react\";\nimport { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Badge } from \"@/components/ui/badge\";\n\ninterface FilterOption {\n  id: string;\n  label: string;\n}\n\ninterface ActionFilterPopoverProps {\n  onFilterChange: (filters: any) => void;\n}\n\nconst ActionFilterPopover: React.FC<ActionFilterPopoverProps> = ({ onFilterChange }) => {\n  const [open, setOpen] = useState(false);\n  const [activeFilters, setActiveFilters] = useState<string[]>([]);\n  const [typeFilter, setTypeFilter] = useState<string | null>(null);\n  const [statusFilter, setStatusFilter] = useState<string | null>(null);\n  \n  const typeOptions: FilterOption[] = [\n    { id: \"Send\", label: \"Send Email\" },\n    { id: \"Schedule\", label: \"Schedule Meeting\" },\n    { id: \"Make\", label: \"Make Call\" },\n    { id: \"Set\", label: \"Set Reminder\" },\n    { id: \"Send\", label: \"Send Alert\" },\n  ];\n  \n  const statusOptions: FilterOption[] = [\n    { id: \"Active\", label: \"Active\" },\n    { id: \"Inactive\", label: \"Inactive\" },\n    { id: \"Draft\", label: \"Draft\" },\n  ];\n\n  const handleApplyFilters = () => {\n    const filters = {\n      type: typeFilter,\n      status: statusFilter,\n    };\n    \n    // Update active filters for badge display\n    const newActiveFilters = [];\n    if (typeFilter) newActiveFilters.push(`Type: ${typeFilter}`);\n    if (statusFilter) newActiveFilters.push(`Status: ${statusFilter}`);\n    \n    setActiveFilters(newActiveFilters);\n    onFilterChange(filters);\n    setOpen(false);\n  };\n\n  const handleResetFilters = () => {\n    setTypeFilter(null);\n    setStatusFilter(null);\n    setActiveFilters([]);\n    onFilterChange({});\n  };\n\n  const removeFilter = (filter: string) => {\n    const newActiveFilters = activeFilters.filter(f => f !== filter);\n    setActiveFilters(newActiveFilters);\n    \n    // Reset the corresponding filter\n    if (filter.startsWith(\"Type:\")) setTypeFilter(null);\n    if (filter.startsWith(\"Status:\")) setStatusFilter(null);\n    \n    onFilterChange({\n      type: filter.startsWith(\"Type:\") ? null : typeFilter,\n      status: filter.startsWith(\"Status:\") ? null : statusFilter,\n    });\n  };\n\n  return (\n    <div className=\"relative\">\n      <Popover open={open} onOpenChange={setOpen}>\n        <PopoverTrigger asChild>\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            className={`h-9 border-gray-200 text-gray-700 hover:bg-gray-50 ${activeFilters.length > 0 ? 'border-primary/50 bg-primary/5' : ''}`}\n          >\n            <SlidersHorizontal className=\"h-4 w-4 mr-1\" />\n            Filters\n            {activeFilters.length > 0 && (\n              <span className=\"ml-1 flex h-5 w-5 items-center justify-center rounded-full bg-primary text-[10px] font-medium text-white\">\n                {activeFilters.length}\n              </span>\n            )}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-[280px] p-4\" align=\"end\">\n          <div className=\"space-y-4\">\n            <h4 className=\"font-medium text-sm\">Filter Actions</h4>\n            \n            <div className=\"space-y-2\">\n              <Label className=\"text-xs font-medium\">Action Type</Label>\n              <RadioGroup \n                value={typeFilter || \"\"} \n                onValueChange={(value) => setTypeFilter(value || null)}\n              >\n                {typeOptions.map((option) => (\n                  <div key={option.id} className=\"flex items-center space-x-2\">\n                    <RadioGroupItem value={option.id} id={`type-${option.id}`} />\n                    <Label htmlFor={`type-${option.id}`} className=\"text-sm font-normal cursor-pointer\">\n                      {option.label}\n                    </Label>\n                  </div>\n                ))}\n              </RadioGroup>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label className=\"text-xs font-medium\">Status</Label>\n              <RadioGroup \n                value={statusFilter || \"\"} \n                onValueChange={(value) => setStatusFilter(value || null)}\n              >\n                {statusOptions.map((option) => (\n                  <div key={option.id} className=\"flex items-center space-x-2\">\n                    <RadioGroupItem value={option.id} id={`status-${option.id}`} />\n                    <Label htmlFor={`status-${option.id}`} className=\"text-sm font-normal cursor-pointer\">\n                      {option.label}\n                    </Label>\n                  </div>\n                ))}\n              </RadioGroup>\n            </div>\n            \n            <Separator />\n            \n            <div className=\"flex justify-between\">\n              <Button \n                variant=\"outline\" \n                size=\"sm\" \n                onClick={handleResetFilters}\n                className=\"text-xs h-8\"\n              >\n                Reset\n              </Button>\n              <Button \n                size=\"sm\" \n                onClick={handleApplyFilters}\n                className=\"text-xs h-8 bg-primary\"\n              >\n                Apply Filters\n              </Button>\n            </div>\n          </div>\n        </PopoverContent>\n      </Popover>\n      \n      {/* Active filters display */}\n      {activeFilters.length > 0 && (\n        <div className=\"flex flex-wrap gap-2 mt-2\">\n          {activeFilters.map((filter) => (\n            <Badge \n              key={filter} \n              variant=\"outline\" \n              className=\"px-2 py-1 text-xs bg-primary/5 border-primary/20 text-primary flex items-center gap-1\"\n            >\n              {filter}\n              <button \n                className=\"ml-1 text-primary hover:text-primary/80\"\n                onClick={() => removeFilter(filter)}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                  <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                </svg>\n              </button>\n            </Badge>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ActionFilterPopover;\n","import { actionsData } from \"@/components/dynamicdata\";\r\nimport { ModernTable } from \"@/components/ModernTable\";\r\nimport Header from \"@/components/Header\";\r\nimport Page from \"@/components/Page\";\r\nimport {\r\n  Edit,\r\n  Eye,\r\n  Trash,\r\n  Plus,\r\n  PlayCircle,\r\n  Zap,\r\n  Mail,\r\n  Calendar,\r\n  PhoneCall,\r\n  Clock,\r\n  AlertCircle,\r\n  Share2,\r\n  Circle,\r\n} from \"lucide-react\";\r\nimport { AddAction } from \"./AddAction\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport ActionGrid from \"@/components/ActionGrid\";\r\nimport ActionFilterPopover from \"@/components/ActionFilterPopover\";\r\nimport CustomPagination from \"@/components/CustomPagination\";\r\n\r\nconst Action = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [debouncedSearch, setDebouncedSearch] = useState(\r\n    searchParams.get(\"search\") || \"\"\r\n  );\r\n  const [searchQuery, setSearchQuery] = useState(debouncedSearch);\r\n  const [viewMode, setViewMode] = useState<\"list\" | \"grid\">(\r\n    searchParams.get(\"view\") === \"grid\" ? \"grid\" : \"list\"\r\n  );\r\n  const [activeFilters, setActiveFilters] = useState<any>({});\r\n  const [showFilters, setShowFilters] = useState(false);\r\n\r\n  // Extract current page from searchParams\r\n  const currentPage = parseInt(searchParams.get(\"page\") || \"1\");\r\n  const itemsPerPage = 10;\r\n\r\n  // Debouncing effect for search\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setSearchQuery(debouncedSearch);\r\n      setSearchParams((prev) => {\r\n        const newParams = new URLSearchParams(prev);\r\n        if (debouncedSearch) {\r\n          newParams.set(\"search\", debouncedSearch);\r\n        } else {\r\n          newParams.delete(\"search\");\r\n        }\r\n        return newParams;\r\n      });\r\n    }, 500); // Reduced debounce time for better UX\r\n\r\n    return () => clearTimeout(handler);\r\n  }, [debouncedSearch, setSearchParams]);\r\n\r\n  // Update URL when view mode changes\r\n  useEffect(() => {\r\n    setSearchParams((prev) => {\r\n      const newParams = new URLSearchParams(prev);\r\n      if (viewMode === \"grid\") {\r\n        newParams.set(\"view\", \"grid\");\r\n      } else {\r\n        newParams.delete(\"view\");\r\n      }\r\n      return newParams;\r\n    });\r\n  }, [viewMode, setSearchParams]);\r\n\r\n  // Function to get action type and icon\r\n  const getActionTypeInfo = (actionName: string) => {\r\n    const actionTypes = {\r\n      \"Send Email\": {\r\n        icon: <Mail className=\"h-5 w-5 text-primary\" />,\r\n        badge: \"purple\",\r\n      },\r\n      \"Schedule Meeting\": {\r\n        icon: <Calendar className=\"h-5 w-5 text-chart-2\" />,\r\n        badge: \"info\",\r\n      },\r\n      \"Make Call\": {\r\n        icon: <PhoneCall className=\"h-5 w-5 text-chart-3\" />,\r\n        badge: \"success\",\r\n      },\r\n      \"Set Reminder\": {\r\n        icon: <Clock className=\"h-5 w-5 text-chart-4\" />,\r\n        badge: \"warning\",\r\n      },\r\n      \"Send Alert\": {\r\n        icon: <AlertCircle className=\"h-5 w-5 text-chart-5\" />,\r\n        badge: \"destructive\",\r\n      },\r\n    };\r\n\r\n    // Default fallback\r\n    return (\r\n      actionTypes[actionName as keyof typeof actionTypes] || {\r\n        icon: <Zap className=\"h-5 w-5 text-primary\" />,\r\n        badge: \"secondary\",\r\n      }\r\n    );\r\n  };\r\n\r\n  // Add some more mock data for a better demo\r\n  const enhancedActionsData = [\r\n    ...actionsData,\r\n    {\r\n      id: 3,\r\n      actionName: \"Make Call\",\r\n      description: \"Initiate a call to the contact.\",\r\n    },\r\n    {\r\n      id: 4,\r\n      actionName: \"Set Reminder\",\r\n      description: \"Set a reminder for follow-up tasks.\",\r\n    },\r\n    {\r\n      id: 5,\r\n      actionName: \"Send Alert\",\r\n      description: \"Send an urgent alert notification.\",\r\n    },\r\n  ];\r\n\r\n  // Filter data based on search query and active filters\r\n  const filteredData = enhancedActionsData.filter((item) => {\r\n    // Search filter\r\n    const matchesSearch = searchQuery\r\n      ? item.actionName.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        item.description.toLowerCase().includes(searchQuery.toLowerCase())\r\n      : true;\r\n\r\n    // Type filter\r\n    const matchesType = activeFilters.type\r\n      ? item.actionName\r\n          .toLowerCase()\r\n          .startsWith(activeFilters.type.toLowerCase())\r\n      : true;\r\n\r\n    // Status filter\r\n    const matchesStatus = activeFilters.status\r\n      ? (Number(item.id) % 3 === 0 && activeFilters.status === \"Draft\") ||\r\n        (Number(item.id) % 3 === 1 && activeFilters.status === \"Active\") ||\r\n        (Number(item.id) % 3 === 2 && activeFilters.status === \"Inactive\")\r\n      : true;\r\n\r\n    return matchesSearch && matchesType && matchesStatus;\r\n  });\r\n\r\n  // Calculate total pages based on filtered data\r\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\r\n\r\n  // Pagination\r\n  const paginatedData = filteredData.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n  const handlePageChange = (page: number) => {\r\n    setSearchParams((prev) => {\r\n      const newParams = new URLSearchParams(prev);\r\n      newParams.set(\"page\", page.toString());\r\n      return newParams;\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (value: string) => {\r\n    setDebouncedSearch(value);\r\n  };\r\n\r\n  const handleViewModeChange = (mode: \"list\" | \"grid\") => {\r\n    setViewMode(mode);\r\n  };\r\n\r\n  const handleFilterChange = (filters: any) => {\r\n    setActiveFilters(filters);\r\n    setShowFilters(Object.keys(filters).some((key) => filters[key] !== null));\r\n  };\r\n\r\n  // Common actions for both list and grid views\r\n  const actionActions = [\r\n    {\r\n      label: \"Run Action\",\r\n      icon: <PlayCircle className=\"h-4 w-4\" />,\r\n      onClick: (item: any) => console.log(\"Running\", item),\r\n    },\r\n    {\r\n      label: \"Edit Action\",\r\n      icon: <Edit className=\"h-4 w-4\" />,\r\n      onClick: (item: any) => console.log(\"Editing\", item),\r\n    },\r\n    {\r\n      label: \"Delete Action\",\r\n      icon: <Trash className=\"h-4 w-4\" />,\r\n      onClick: (item: any) => console.log(\"Deleting\", item),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Page>\r\n      <Header\r\n        title=\"Voice AI Actions\"\r\n        buttonText=\"Action\"\r\n        filterByName={true}\r\n        filterWord={debouncedSearch}\r\n        onFilterChange={handleSearchChange}\r\n        useSheet={true}\r\n        sheetContent={<AddAction />}\r\n        viewMode={viewMode}\r\n        onViewModeChange={handleViewModeChange}\r\n        showViewToggle={true}\r\n        showFilters={false} // We'll use our custom filter component instead\r\n      />\r\n\r\n      <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between mb-4 gap-3\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Badge variant=\"secondary\" className=\"px-3 py-1\">\r\n            <Zap className=\"h-3 w-3 mr-1\" />\r\n            <span>{filteredData.length} Actions</span>\r\n          </Badge>\r\n        </div>\r\n\r\n        <ActionFilterPopover onFilterChange={handleFilterChange} />\r\n      </div>\r\n\r\n      {showFilters && (\r\n        <div className=\"mb-4\">\r\n          {/* Active filters will be displayed by the FilterPopover component */}\r\n        </div>\r\n      )}\r\n\r\n      {viewMode === \"list\" ? (\r\n        <ModernTable\r\n          data={paginatedData}\r\n          isSelectable={true}\r\n          showColumnSelection={true}\r\n          onRowClick={(item) => console.log(\"Row clicked\", item)}\r\n          columns={[\r\n            {\r\n              header: \"Action\",\r\n              accessor: \"actionName\",\r\n              className: \"min-w-[250px]\",\r\n              cell: (value, item) => {\r\n                const { icon } = getActionTypeInfo(String(value));\r\n\r\n                return (\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <div className=\"h-9 w-9 bg-gradient-to-br from-primary/20 to-primary/10 rounded-lg flex items-center justify-center\">\r\n                      {icon}\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"font-medium text-gray-900\">\r\n                        {String(value)}\r\n                      </div>\r\n                      <div className=\"text-xs text-gray-500\">\r\n                        ID: ACT-{String(item.id).padStart(4, \"0\")}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              },\r\n              sortable: true,\r\n            },\r\n            {\r\n              header: \"Description\",\r\n              accessor: \"description\",\r\n              className: \"min-w-[350px]\",\r\n              cell: (value) => (\r\n                <div className=\"text-sm text-gray-600\">{String(value)}</div>\r\n              ),\r\n            },\r\n            {\r\n              header: \"Type\",\r\n              accessor: \"actionName\",\r\n              className: \"min-w-[150px]\",\r\n              cell: (value) => {\r\n                const { badge } = getActionTypeInfo(String(value));\r\n                const type = String(value).split(\" \")[0]; // Get first word as type\r\n\r\n                return (\r\n                  <Badge variant={badge as any} className=\"capitalize\">\r\n                    {type}\r\n                  </Badge>\r\n                );\r\n              },\r\n              sortable: true,\r\n            },\r\n            {\r\n              header: \"Status\",\r\n              accessor: \"id\",\r\n              className: \"min-w-[120px]\",\r\n              cell: (value) => {\r\n                // This is just for demo - in a real app you'd have a proper status field\r\n                const statuses = [\"Active\", \"Inactive\", \"Draft\"];\r\n                const statusVariants = [\"success\", \"secondary\", \"warning\"];\r\n                const index = Number(value) % 3;\r\n\r\n                return (\r\n                  <div className=\"flex items-center justify-start\">\r\n                    <Badge\r\n                      variant={statusVariants[index] as any}\r\n                      className=\"capitalize\"\r\n                    >\r\n                      {statuses[index]}\r\n                    </Badge>\r\n                  </div>\r\n                  \r\n                );\r\n              },\r\n            },\r\n          ]}\r\n          actions={actionActions}\r\n          emptyState={\r\n            <div className=\"text-center p-8\">\r\n              <div className=\"h-16 w-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                <Zap className=\"h-8 w-8 text-primary\" />\r\n              </div>\r\n              <h3 className=\"text-lg font-medium mb-1\">No actions found</h3>\r\n              <p className=\"text-gray-500 mb-4\">\r\n                Get started by creating your first voice AI action\r\n              </p>\r\n              <button\r\n                className=\"bg-primary px-4 py-2 rounded-md text-white flex items-center justify-center mx-auto\"\r\n                onClick={() => console.log(\"Create action\")}\r\n              >\r\n                <Plus className=\"h-4 w-4 mr-2\" />\r\n                Create Action\r\n              </button>\r\n            </div>\r\n          }\r\n        />\r\n      ) : (\r\n        <ActionGrid\r\n          data={paginatedData}\r\n          onItemClick={(item) => console.log(\"Grid item clicked\", item)}\r\n          actions={actionActions}\r\n          getActionTypeInfo={getActionTypeInfo}\r\n        />\r\n      )}\r\n\r\n      <div className=\"mt-8 border-t border-gray-200 pt-4\">\r\n        <CustomPagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          onPageChange={handlePageChange}\r\n        />\r\n      </div>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Action;\r\n"],"names":["AddAction","jsxs","Fragment","jsx","SheetTitle","SheetDescription","Zap","Label","Input","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Mail","Calendar","PhoneCall","Clock","AlertCircle","Textarea","Settings","Switch","Code","Button","PlayCircle","SheetClose","ActionGrid","data","onItemClick","actions","getActionTypeInfo","item","icon","badge","type","statuses","statusVariants","index","Card","e","Share2","DropdownMenu","DropdownMenuTrigger","MoreHorizontal","DropdownMenuContent","action","DropdownMenuItem","Badge","ActionFilterPopover","onFilterChange","open","setOpen","useState","activeFilters","setActiveFilters","typeFilter","setTypeFilter","statusFilter","setStatusFilter","typeOptions","statusOptions","handleApplyFilters","filters","newActiveFilters","handleResetFilters","removeFilter","filter","f","Popover","PopoverTrigger","SlidersHorizontal","PopoverContent","RadioGroup","value","option","RadioGroupItem","Separator","Action","searchParams","setSearchParams","useSearchParams","debouncedSearch","setDebouncedSearch","searchQuery","setSearchQuery","viewMode","setViewMode","showFilters","setShowFilters","currentPage","itemsPerPage","useEffect","handler","prev","newParams","actionName","filteredData","actionsData","matchesSearch","matchesType","matchesStatus","totalPages","paginatedData","handlePageChange","page","handleSearchChange","handleViewModeChange","mode","handleFilterChange","key","actionActions","Edit","Trash","Page","Header","ModernTable","Plus","CustomPagination"],"mappings":"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"}