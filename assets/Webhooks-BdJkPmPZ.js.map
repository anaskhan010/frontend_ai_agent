{"version":3,"file":"Webhooks-BdJkPmPZ.js","sources":["../../src/api/services/facebook/facebookService.ts","../../src/api/services/gmail/gmailService.ts","../../src/components/GmailOAuthModal.tsx","../../src/pages/Webhooks/components/CampaignActionConfig.tsx","../../node_modules/react-toastify/dist/react-toastify.esm.mjs","../../src/pages/Webhooks/components/FacebookLeadAdsTrigger.tsx","../../src/components/TextWebhookConfig.tsx","../../src/pages/Webhooks/WebhookCreator.tsx","../../src/pages/Webhooks/Webhooks.tsx"],"sourcesContent":["import axiosInstance from \"@/api/axios/axiosInstance\";\nimport { toast } from \"sonner\";\n\n// Types\nexport interface FacebookUser {\n  id: string;\n  name: string;\n  email: string;\n}\n\nexport interface FacebookConnectionStatus {\n  isConnected: boolean;\n  facebookUser?: FacebookUser;\n  connectedAt?: string;\n  expiresAt?: string;\n  pages?: FacebookPage[];\n  selectedPageId?: string;\n  selectedLeadFormId?: string;\n  leadForms?: FacebookLeadForm[];\n}\n\nexport interface FacebookPage {\n  id: string;\n  name: string;\n  category?: string;\n  access_token?: string;\n}\n\nexport interface FacebookLeadForm {\n  id: string;\n  name: string;\n  status: string;\n  page_id?: string;\n  form_id?: string;\n  questions?: Array<{\n    key: string;\n    label: string;\n    type: string;\n    options?: string[];\n  }>;\n}\n\nexport interface FacebookLead {\n  id: string;\n  created_time: string;\n  field_data: Array<{\n    name: string;\n    values: string[];\n  }>;\n}\n\n// Facebook OAuth URL generation\nexport async function generateFacebookOAuthUrl(): Promise<string> {\n  // Ask backend to generate a signed OAuth URL bound to the logged-in user.\n  const res = await axiosInstance.get('/api/auth/facebook/oauth-url');\n  if (res.data?.success && res.data.data?.authUrl) return res.data.data.authUrl as string;\n  throw new Error(res.data?.message || 'Failed to start Facebook OAuth');\n}\n\n// Connect Facebook account\nexport async function connectFacebookAccount(code: string, state?: string) {\n  try {\n    // Prefer the backend callback route that already saved credentials\n    // This API is kept for compatibility when the frontend receives code directly (e.g., if redirected to frontend).\n    const res = await axiosInstance.post(\"/api/auth/facebook/connect\", { code, state });\n    \n    if (res.data.success) {\n      toast.success(\"Facebook account connected successfully!\");\n      return res.data.data;\n    }\n    \n    throw new Error(res.data.message || \"Failed to connect Facebook account\");\n  } catch (error: any) {\n    console.error(\"Error connecting Facebook account:\", error);\n    const message = error.response?.data?.message || \"Failed to connect Facebook account\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Get Facebook connection status with timeout (webhook-specific or global)\nexport async function getFacebookConnectionStatus(webhookIdOrTimeout?: string | number): Promise<FacebookConnectionStatus> {\n  try {\n    let webhookId: string | undefined;\n    let timeout = 30000;\n\n    // Handle overloaded parameters\n    if (typeof webhookIdOrTimeout === 'string') {\n      webhookId = webhookIdOrTimeout;\n    } else if (typeof webhookIdOrTimeout === 'number') {\n      timeout = webhookIdOrTimeout;\n    }\n\n    // Check webhook-specific connection first\n    if (webhookId) {\n      console.log('üîç Checking webhook-specific connection for:', webhookId);\n\n      // Check localStorage first (permanent storage)\n      const isConnected = localStorage.getItem(`facebook_connected_${webhookId}`) === 'true';\n      const userStr = localStorage.getItem(`facebook_user_${webhookId}`);\n      console.log('üîç localStorage check:', { isConnected, hasUserStr: !!userStr });\n\n      if (isConnected && userStr) {\n        try {\n          const facebookUser = JSON.parse(userStr);\n          console.log('‚úÖ Found Facebook connection in localStorage');\n          return {\n            isConnected: true,\n            facebookUser,\n            connectedAt: new Date().toISOString()\n          };\n        } catch (e) {\n          console.log('‚ùå Invalid localStorage data:', e);\n          // Invalid stored data, continue to check session storage\n        }\n      }\n\n      // Check session storage for temporary connections (during webhook creation)\n      const tempConnected = sessionStorage.getItem('temp_facebook_connected') === 'true';\n      const tempUserStr = sessionStorage.getItem('temp_facebook_user');\n      console.log('üîç sessionStorage check:', { tempConnected, hasTempUserStr: !!tempUserStr });\n\n      if (tempConnected && tempUserStr) {\n        try {\n          const facebookUser = JSON.parse(tempUserStr);\n          console.log('‚úÖ Found Facebook connection in sessionStorage');\n          return {\n            isConnected: true,\n            facebookUser,\n            connectedAt: new Date().toISOString()\n          };\n        } catch (e) {\n          console.log('‚ùå Invalid sessionStorage data:', e);\n          // Invalid temp data, return not connected\n          return { isConnected: false };\n        }\n      }\n\n      // If both local storage checks fail, check the backend webhook metadata\n      console.log('üîç Checking backend webhook metadata for Facebook connection...');\n      try {\n        const response = await axiosInstance.get(`/api/facebook/connection-status/${webhookId}`, {\n          timeout\n        });\n\n        if (response.data.success && response.data.data.isConnected) {\n          console.log('‚úÖ Found Facebook connection in backend webhook metadata:', response.data.data);\n\n          // Store in localStorage for future quick access\n          localStorage.setItem(`facebook_connected_${webhookId}`, 'true');\n          if (response.data.data.facebookUser) {\n            localStorage.setItem(`facebook_user_${webhookId}`, JSON.stringify(response.data.data.facebookUser));\n          }\n\n          return {\n            isConnected: true,\n            facebookUser: response.data.data.facebookUser,\n            pages: response.data.data.pages || [],\n            selectedPageId: response.data.data.selectedPageId || '',\n            selectedLeadFormId: response.data.data.selectedLeadFormId || '',\n            leadForms: response.data.data.leadForms || [],\n            connectedAt: new Date().toISOString()\n          };\n        } else {\n          console.log('‚ùå No Facebook connection found in backend webhook metadata');\n        }\n      } catch (backendError) {\n        console.log('‚ùå Error checking backend webhook metadata:', backendError);\n      }\n\n      // If all checks fail, return not connected\n      console.log('‚ùå No Facebook connection found for webhook');\n      return { isConnected: false };\n    }\n\n    // If no webhookId provided, return not connected (for new webhook flows)\n    console.log('üÜï No webhookId provided - new webhook flow, returning not connected');\n    return { isConnected: false };\n  } catch (error: any) {\n    console.error(\"Error getting Facebook connection status:\", error);\n    if (error.name === 'AbortError') {\n      toast.error(\"Connection status check timed out\");\n    } else {\n      toast.error(error.response?.data?.message || \"Failed to get connection status\");\n    }\n    return { isConnected: false };\n  }\n}\n\n// Disconnect Facebook account (global or webhook-specific)\nexport async function disconnectFacebookAccount(webhookId?: string) {\n  try {\n    // Clear webhook-specific connection if specified\n    if (webhookId) {\n      localStorage.removeItem(`facebook_connected_${webhookId}`);\n      localStorage.removeItem(`facebook_user_${webhookId}`);\n      toast.success(\"Successfully disconnected Facebook from this webhook\");\n      return true;\n    }\n\n    // Otherwise disconnect globally\n    const res = await axiosInstance.delete(\"/api/auth/facebook/disconnect\");\n\n    if (res.data.success) {\n      toast.success(\"Facebook account disconnected successfully!\");\n      return true;\n    }\n\n    throw new Error(res.data.message || \"Failed to disconnect Facebook account\");\n  } catch (error: any) {\n    console.error(\"Error disconnecting Facebook account:\", error);\n    const message = error.response?.data?.message || \"Failed to disconnect Facebook account\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Get Facebook pages\nexport async function getFacebookPages(): Promise<FacebookPage[]> {\n  try {\n    const res = await axiosInstance.get(\"/api/facebook/pages\");\n    \n    if (res.data.success) {\n      return res.data.data;\n    }\n    \n    throw new Error(res.data.message || \"Failed to fetch Facebook pages\");\n  } catch (error: any) {\n    console.error(\"Error fetching Facebook pages:\", error);\n    const message = error.response?.data?.message || \"Failed to fetch Facebook pages\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Get stored Facebook pages\nexport async function getStoredFacebookPages(): Promise<FacebookPage[]> {\n  try {\n    const res = await axiosInstance.get(\"/api/facebook/pages/stored\");\n    \n    if (res.data.success) {\n      return res.data.data;\n    }\n    \n    return [];\n  } catch (error: any) {\n    console.error(\"Error fetching stored Facebook pages:\", error);\n    return [];\n  }\n}\n\n// Get lead forms for a page\nexport async function getPageLeadForms(pageId: string): Promise<FacebookLeadForm[]> {\n  try {\n    const res = await axiosInstance.get(`/api/facebook/pages/${pageId}/forms`);\n    \n    if (res.data.success) {\n      return res.data.data;\n    }\n    \n    throw new Error(res.data.message || \"Failed to fetch lead forms\");\n  } catch (error: any) {\n    console.error(\"Error fetching lead forms:\", error);\n    const message = error.response?.data?.message || \"Failed to fetch lead forms\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Get stored lead forms\nexport async function getStoredLeadForms(pageId?: string): Promise<FacebookLeadForm[]> {\n  try {\n    const url = pageId ? `/api/facebook/forms/stored/${pageId}` : \"/api/facebook/forms/stored\";\n    const res = await axiosInstance.get(url);\n    \n    if (res.data.success) {\n      return res.data.data;\n    }\n    \n    return [];\n  } catch (error: any) {\n    console.error(\"Error fetching stored lead forms:\", error);\n    return [];\n  }\n}\n\n// Get leads from a form\nexport async function getFormLeads(formId: string): Promise<FacebookLead[]> {\n  try {\n    const res = await axiosInstance.get(`/api/facebook/forms/${formId}/leads`);\n    \n    if (res.data.success) {\n      return res.data.data;\n    }\n    \n    throw new Error(res.data.message || \"Failed to fetch form leads\");\n  } catch (error: any) {\n    console.error(\"Error fetching form leads:\", error);\n    const message = error.response?.data?.message || \"Failed to fetch form leads\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Subscribe to webhooks\nexport async function subscribeToWebhooks(pageId: string, webhookUrl: string, verifyToken: string) {\n  try {\n    const res = await axiosInstance.post(\"/api/facebook/webhooks/subscribe\", {\n      pageId,\n      webhookUrl,\n      verifyToken,\n      // Optional context so backend can save mapping to current webhook\n      webhookId: localStorage.getItem('current_webhook_id') || undefined,\n      formId: (window as any).__selectedFacebookFormId || undefined\n    });\n    \n    if (res.data.success) {\n      toast.success(\"Successfully subscribed to Facebook webhooks!\");\n      return res.data.data;\n    }\n    \n    throw new Error(res.data.message || \"Failed to subscribe to webhooks\");\n  } catch (error: any) {\n    console.error(\"Error subscribing to webhooks:\", error);\n    const message = error.response?.data?.message || \"Failed to subscribe to webhooks\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Test Facebook connection\nexport async function testFacebookConnection() {\n  try {\n    const res = await axiosInstance.get(\"/api/facebook/test-connection\");\n    \n    if (res.data.success) {\n      toast.success(\"Facebook connection test successful!\");\n      return res.data.data;\n    }\n    \n    throw new Error(res.data.message || \"Facebook connection test failed\");\n  } catch (error: any) {\n    console.error(\"Facebook connection test failed:\", error);\n    const message = error.response?.data?.message || \"Facebook connection test failed\";\n    toast.error(message);\n    throw error;\n  }\n}\n","import axiosInstance from \"@/api/axios/axiosInstance\";\nimport { toast } from \"sonner\";\n\n// Types\nexport interface GmailProfile {\n  email: string;\n  messagesTotal: number;\n  threadsTotal: number;\n}\n\nexport interface GmailStatus {\n  isConnected: boolean;\n  needsReauth?: boolean;\n  profile: GmailProfile | null;\n}\n\nexport interface GmailEmail {\n  id: string;\n  messageId: string;\n  fromAddress: string;\n  email: string;\n  name: string;\n  subject: string;\n  date: string;\n  snippet: string;\n  processed: boolean;\n  createdAt: string;\n}\n\nexport interface GmailEmailsResponse {\n  emails: GmailEmail[];\n  total: number;\n  limit: number;\n  offset: number;\n}\n\n// Generate Gmail OAuth URL\nexport async function generateGmailAuthUrl(): Promise<string> {\n  try {\n    const res = await axiosInstance.get(\"/api/gmail/auth/url\");\n    \n    if (res.data.success) {\n      return res.data.data.authUrl;\n    }\n    \n    throw new Error(res.data.message || \"Failed to generate Gmail auth URL\");\n  } catch (error: any) {\n    console.error(\"Error generating Gmail auth URL:\", error);\n    const message = error.response?.data?.message || \"Failed to generate Gmail auth URL\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Handle Gmail OAuth callback\nexport async function handleGmailCallback(code: string, state: string) {\n  try {\n    const res = await axiosInstance.post(\"/api/gmail/auth/callback\", {\n      code,\n      state\n    });\n    \n    if (res.data.success) {\n      toast.success(\"Gmail connected successfully!\");\n      return res.data.data;\n    }\n    \n    throw new Error(res.data.message || \"Failed to connect Gmail\");\n  } catch (error: any) {\n    console.error(\"Error handling Gmail callback:\", error);\n    const message = error.response?.data?.message || \"Failed to connect Gmail\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Get Gmail connection status\nexport async function getGmailStatus(): Promise<GmailStatus> {\n  try {\n    const res = await axiosInstance.get(\"/api/gmail/auth/status\");\n    \n    if (res.data.success) {\n      return res.data.data;\n    }\n    \n    throw new Error(res.data.message || \"Failed to get Gmail status\");\n  } catch (error: any) {\n    console.error(\"Error getting Gmail status:\", error);\n    const message = error.response?.data?.message || \"Failed to get Gmail status\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Disconnect Gmail\nexport async function disconnectGmail() {\n  try {\n    const res = await axiosInstance.delete(\"/api/gmail/auth/disconnect\");\n    \n    if (res.data.success) {\n      toast.success(\"Gmail disconnected successfully!\");\n      return res.data;\n    }\n    \n    throw new Error(res.data.message || \"Failed to disconnect Gmail\");\n  } catch (error: any) {\n    console.error(\"Error disconnecting Gmail:\", error);\n    const message = error.response?.data?.message || \"Failed to disconnect Gmail\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// List Gmail emails\nexport async function listGmailEmails(query: string = \"\", maxResults: number = 10) {\n  try {\n    const res = await axiosInstance.get(\"/api/gmail/emails\", {\n      params: { query, maxResults }\n    });\n    \n    if (res.data.success) {\n      return res.data.data.messages;\n    }\n    \n    throw new Error(res.data.message || \"Failed to list Gmail emails\");\n  } catch (error: any) {\n    console.error(\"Error listing Gmail emails:\", error);\n    const message = error.response?.data?.message || \"Failed to list Gmail emails\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Get specific Gmail email details\nexport async function getGmailEmailDetails(messageId: string) {\n  try {\n    const res = await axiosInstance.get(`/api/gmail/emails/${messageId}`);\n    \n    if (res.data.success) {\n      return res.data.data.email;\n    }\n    \n    throw new Error(res.data.message || \"Failed to get Gmail email details\");\n  } catch (error: any) {\n    console.error(\"Error getting Gmail email details:\", error);\n    const message = error.response?.data?.message || \"Failed to get Gmail email details\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Get stored Gmail emails from database\nexport async function getStoredGmailEmails(limit: number = 50, offset: number = 0): Promise<GmailEmailsResponse> {\n  try {\n    const res = await axiosInstance.get(\"/api/gmail/emails/stored\", {\n      params: { limit, offset }\n    });\n    \n    if (res.data.success) {\n      return res.data.data;\n    }\n    \n    throw new Error(res.data.message || \"Failed to get stored Gmail emails\");\n  } catch (error: any) {\n    console.error(\"Error getting stored Gmail emails:\", error);\n    const message = error.response?.data?.message || \"Failed to get stored Gmail emails\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n\n// Connect Gmail (redirect to OAuth in same tab) - using backend API\nexport async function connectGmail(userId?: string, redirectPath?: string) {\n  try {\n    const response = await axiosInstance.get(\"/api/gmail/auth/url\", {\n      params: { redirectPath: redirectPath || '/webhooks' }\n    });\n    \n    if (response.data.success) {\n      window.location.href = response.data.data.authUrl;\n    } else {\n      throw new Error(response.data.message || \"Failed to generate Gmail auth URL\");\n    }\n  } catch (error: any) {\n    console.error(\"Error generating Gmail auth URL:\", error);\n    const message = error.response?.data?.message || \"Failed to generate Gmail auth URL\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Check if Gmail is configured\nexport function isGmailConfigured(): boolean {\n  return !!(import.meta.env.VITE_GMAIL_CLIENT_ID);\n}\n\n// Send email via Gmail\nexport async function sendGmailEmail(emailData: {\n  to: string;\n  cc?: string;\n  bcc?: string;\n  subject: string;\n  body: string;\n  isHtml?: boolean;\n  attachments?: string[];\n}) {\n  try {\n    const res = await axiosInstance.post(\"/api/gmail/emails/send\", emailData);\n\n    if (res.data.success) {\n      toast.success(\"Email sent successfully!\");\n      return res.data.data;\n    }\n\n    throw new Error(res.data.message || \"Failed to send email\");\n  } catch (error: any) {\n    console.error(\"Error sending Gmail email:\", error);\n    const message = error.response?.data?.message || \"Failed to send email\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Send bulk emails via Gmail\nexport async function sendBulkGmailEmails(emails: Array<{\n  to: string;\n  subject: string;\n  body: string;\n  isHtml?: boolean;\n}>) {\n  try {\n    const res = await axiosInstance.post(\"/api/gmail/emails/send-bulk\", { emails });\n\n    if (res.data.success) {\n      const successCount = res.data.data.filter((r: any) => r.success).length;\n      toast.success(`${successCount} emails sent successfully!`);\n      return res.data.data;\n    }\n\n    throw new Error(res.data.message || \"Failed to send bulk emails\");\n  } catch (error: any) {\n    console.error(\"Error sending bulk Gmail emails:\", error);\n    const message = error.response?.data?.message || \"Failed to send bulk emails\";\n    toast.error(message);\n    throw error;\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Loader2, Mail, CheckCircle, AlertCircle, X } from 'lucide-react';\nimport { toast } from 'sonner';\nimport axiosInstance from '@/api/axios/axiosInstance';\n\ninterface GmailOAuthModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSuccess: (data: any) => void;\n  userId?: string;\n  redirectPath?: string;\n}\n\nconst GmailOAuthModal: React.FC<GmailOAuthModalProps> = ({\n  isOpen,\n  onClose,\n  onSuccess,\n  userId,\n  redirectPath\n}) => {\n  const [status, setStatus] = useState<'idle' | 'loading' | 'success' | 'error'>('idle');\n  const [message, setMessage] = useState('');\n  const iframeRef = useRef<HTMLIFrameElement>(null);\n\n  const generateGmailOAuthProxyUrl = () => {\n    const baseUrl = import.meta.env.VITE_APP_BASE_URL || 'http://localhost:5001';\n    const currentPath = redirectPath || window.location.hash.replace('#', '') || '/webhooks';\n\n    return `${baseUrl}/api/gmail/auth/proxy?userId=${userId || '1'}&redirectPath=${encodeURIComponent(currentPath)}`;\n  };\n\n  const handleConnect = async () => {\n    setStatus('loading');\n    setMessage('Opening Gmail authentication...');\n\n    try {\n      // Use backend API to generate auth URL with proper authentication\n      const response = await axiosInstance.get('/api/gmail/auth/url', {\n        params: {\n          redirectPath: 'popup' // Use 'popup' to indicate this is for popup flow\n        }\n      });\n\n      if (!response.data.success) {\n        throw new Error(response.data.message || 'Failed to generate Gmail auth URL');\n      }\n\n      console.log('üîÑ Opening Gmail OAuth in popup window');\n\n      // Open Gmail OAuth in popup window\n      const popup = window.open(\n        response.data.data.authUrl,\n        'gmail-oauth',\n        'width=600,height=700,scrollbars=yes,resizable=yes,status=yes,location=yes,toolbar=no,menubar=no'\n      );\n\n      if (!popup) {\n        throw new Error('Popup blocked. Please allow popups for this site.');\n      }\n\n      // Monitor popup for closure\n      const checkClosed = setInterval(() => {\n        if (popup.closed) {\n          clearInterval(checkClosed);\n          if (status === 'loading') {\n            setStatus('error');\n            setMessage('Authentication was cancelled. Please try again.');\n          }\n        }\n      }, 1000);\n\n      // Set timeout for popup\n      setTimeout(() => {\n        if (!popup.closed) {\n          popup.close();\n          clearInterval(checkClosed);\n          if (status === 'loading') {\n            setStatus('error');\n            setMessage('Authentication timeout. Please try again.');\n          }\n        }\n      }, 300000); // 5 minutes timeout\n\n    } catch (error: any) {\n      console.error('Gmail OAuth error:', error);\n      setStatus('error');\n      setMessage(error.message || 'Failed to initiate Gmail OAuth');\n    }\n  };\n\n  // Listen for messages from the OAuth popup\n  useEffect(() => {\n    const handleMessage = (event: MessageEvent) => {\n      // Verify origin for security\n      if (event.origin !== window.location.origin) {\n        return;\n      }\n\n      console.log('üîç Received message from popup:', event.data);\n\n      if (event.data.type === 'GMAIL_AUTH_SUCCESS') {\n        console.log('üéâ Received Gmail OAuth success from popup:', event.data);\n        setStatus('success');\n        setMessage('Gmail connected successfully!');\n        toast.success(`Gmail connected successfully! (${event.data.data.email})`);\n\n        // Call the success callback to update parent component\n        onSuccess(event.data.data);\n\n        // Close modal after a short delay\n        setTimeout(() => {\n          onClose();\n        }, 1500);\n      } else if (event.data.type === 'GMAIL_AUTH_ERROR') {\n        console.log('‚ùå Received Gmail OAuth error from popup:', event.data);\n        setStatus('error');\n        setMessage(event.data.message || 'Failed to connect Gmail');\n        toast.error(event.data.message || 'Failed to connect Gmail');\n\n        // Close modal after error display\n        setTimeout(() => {\n          onClose();\n        }, 3000);\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, [onSuccess, onClose, status]);\n\n  // Reset status when modal opens/closes\n  useEffect(() => {\n    if (isOpen) {\n      setStatus('idle');\n      setMessage('');\n    }\n  }, [isOpen]);\n\n  const handleClose = () => {\n    setStatus('idle');\n    setMessage('');\n    // Clear iframe src when closing\n    if (iframeRef.current) {\n      iframeRef.current.src = 'about:blank';\n    }\n    onClose();\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={handleClose}>\n      <DialogContent className=\"max-w-2xl max-h-[80vh]\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <Mail className=\"h-5 w-5 text-blue-600\" />\n            Connect Gmail Account\n          </DialogTitle>\n          <DialogDescription>\n            Connect your Gmail account to enable email automation in your workflows\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-4\">\n          {status === 'idle' && (\n            <div className=\"text-center space-y-4\">\n              <div className=\"p-6 bg-blue-50 rounded-lg border border-blue-200\">\n                <Mail className=\"h-12 w-12 text-blue-600 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                  Gmail Integration\n                </h3>\n                <p className=\"text-sm text-gray-600 mb-4\">\n                  By connecting your Gmail account, you'll be able to:\n                </p>\n                <ul className=\"text-sm text-gray-600 text-left space-y-1 mb-4\">\n                  <li>‚Ä¢ Read and send emails automatically</li>\n                  <li>‚Ä¢ Create email-based workflow triggers</li>\n                  <li>‚Ä¢ Access Gmail data in your automations</li>\n                </ul>\n              </div>\n              \n              <Button\n                onClick={handleConnect}\n                className=\"w-full h-12 bg-blue-600 hover:bg-blue-700 text-white\"\n              >\n                <Mail className=\"h-4 w-4 mr-2\" />\n                Connect With Gmail\n              </Button>\n              \n              <p className=\"text-xs text-gray-500 text-center\">\n                Please authenticate your Gmail account to allow access to AI CRUITMENT. \n                <a href=\"#\" className=\"text-blue-600 underline ml-1\">View privacy policy</a>\n              </p>\n            </div>\n          )}\n\n          {status === 'loading' && (\n            <div className=\"text-center space-y-6 py-8\">\n              <div className=\"flex flex-col items-center space-y-4\">\n                <div className=\"relative\">\n                  <div className=\"w-20 h-20 bg-blue-100 rounded-full flex items-center justify-center\">\n                    <Mail className=\"h-10 w-10 text-blue-600\" />\n                  </div>\n                  <div className=\"absolute -top-1 -right-1 w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center\">\n                    <Loader2 className=\"h-3 w-3 text-white animate-spin\" />\n                  </div>\n                </div>\n                <div className=\"space-y-2\">\n                  <h3 className=\"text-xl font-semibold text-gray-900\">\n                    Redirecting to Gmail\n                  </h3>\n                  <p className=\"text-sm text-gray-600 max-w-md\">\n                    {message}\n                  </p>\n                </div>\n                <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-200 max-w-md\">\n                  <div className=\"flex items-start space-x-3\">\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center\">\n                        <span className=\"text-white text-xs font-bold\">!</span>\n                      </div>\n                    </div>\n                    <div className=\"text-sm text-blue-800\">\n                      <p className=\"font-medium mb-1\">Secure Authentication</p>\n                      <p>You will be redirected to Gmail's secure authentication page. After completing authentication, you'll be returned to your workflow.</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {status === 'success' && (\n            <div className=\"text-center space-y-4\">\n              <div className=\"p-6 bg-green-50 rounded-lg border border-green-200\">\n                <CheckCircle className=\"h-12 w-12 text-green-600 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-semibold text-green-900 mb-2\">\n                  Successfully Connected!\n                </h3>\n                <p className=\"text-sm text-green-700\">\n                  Your Gmail account has been connected successfully. You can now use Gmail in your workflows.\n                </p>\n              </div>\n            </div>\n          )}\n\n          {status === 'error' && (\n            <div className=\"text-center space-y-4\">\n              <div className=\"p-6 bg-red-50 rounded-lg border border-red-200\">\n                <AlertCircle className=\"h-12 w-12 text-red-600 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-semibold text-red-900 mb-2\">\n                  Connection Failed\n                </h3>\n                <p className=\"text-sm text-red-700 mb-4\">\n                  {message}\n                </p>\n                <Button\n                  onClick={handleConnect}\n                  variant=\"outline\"\n                  className=\"border-red-300 text-red-700 hover:bg-red-50\"\n                >\n                  Try Again\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default GmailOAuthModal;\n","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { toast } from \"sonner\";\nimport { Megaphone, Loader2 } from \"lucide-react\";\nimport { getAllPhoneNumbers } from \"@/api/services/phoneNumbers/phoneNumberService\";\nimport { fetchAllAgentsComplete } from \"@/api/services/agents/agentService\";\nimport { getAllWorkflows } from \"@/api/services/workflows/workflowService\";\n\ntype CampaignActionConfigProps = {\n  initialConfig?: CampaignActionConfigState;\n  onSave: (config: CampaignActionConfigState) => Promise<void> | void;\n  onCancel: () => void;\n};\n\nexport type CampaignActionConfigState = {\n  name: string;\n  phoneNumberId: string;\n  assistantId?: string;\n  workflowId?: string;\n  autoLaunch?: boolean;\n};\n\nexport const CampaignActionConfig: React.FC<CampaignActionConfigProps> = ({ initialConfig, onSave, onCancel }) => {\n  const [name, setName] = useState(initialConfig?.name || \"\");\n  const [phoneNumberId, setPhoneNumberId] = useState(initialConfig?.phoneNumberId || \"\");\n  const [assistantId, setAssistantId] = useState<string | undefined>(initialConfig?.assistantId);\n  const [workflowId, setWorkflowId] = useState<string | undefined>(initialConfig?.workflowId);\n  const [autoLaunch, setAutoLaunch] = useState<boolean>(Boolean(initialConfig?.autoLaunch));\n\n  const [phoneNumbers, setPhoneNumbers] = useState<Array<{ id: string; number: string; friendlyName?: string }>>([]);\n  const [assistants, setAssistants] = useState<Array<{ id: string; name: string }>>([]);\n  const [workflows, setWorkflows] = useState<Array<{ id: string; name: string }>>([]);\n\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        setLoading(true);\n        const [phonesRes, assistantsRes, workflowsRes] = await Promise.all([\n          // Many list endpoints in this app return { data } at the top level\n          getAllPhoneNumbers(undefined, \"\"),\n          fetchAllAgentsComplete(\"\") as any,\n          getAllWorkflows(undefined, \"\", undefined) as any,\n        ]);\n\n        if (!mounted) return;\n\n        const phoneList = Array.isArray(phonesRes?.data) ? phonesRes.data : (Array.isArray(phonesRes) ? phonesRes : []);\n        setPhoneNumbers(\n          (phoneList || []).map((p: any) => ({ id: p.id || p._id || p.phoneNumberId || \"\", number: p.number || p.phoneNumber || \"\", friendlyName: p.friendlyName }))\n        );\n\n        const assistantList = Array.isArray(assistantsRes?.data) ? assistantsRes.data : (Array.isArray(assistantsRes) ? assistantsRes : []);\n        setAssistants((assistantList || []).map((a: any) => ({ id: a.id || a.assistant_id || \"\", name: a.name || \"Unnamed Assistant\" })));\n\n        const workflowList = Array.isArray(workflowsRes?.data) ? workflowsRes.data : (Array.isArray(workflowsRes) ? workflowsRes : []);\n        setWorkflows((workflowList || []).map((w: any) => ({ id: w.id || w.workflow_id || \"\", name: w.name || \"Untitled Workflow\" })));\n      } catch (error) {\n        console.error(\"Failed to load campaign deps:\", error);\n        toast.error(\"Failed to load campaign dependencies\");\n      } finally {\n        if (mounted) setLoading(false);\n      }\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const handleSave = async () => {\n    console.log('üîß Campaign handleSave called');\n    if (!name.trim()) {\n      toast.error(\"Campaign name is required\");\n      return;\n    }\n    if (!phoneNumberId) {\n      toast.error(\"Please select a phone number\");\n      return;\n    }\n    const config: CampaignActionConfigState = {\n      name: name.trim(),\n      phoneNumberId,\n      assistantId,\n      workflowId,\n      autoLaunch,\n    };\n    console.log('üìã Campaign config to save:', config);\n    await onSave(config);\n    console.log('‚úÖ Campaign onSave completed');\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center gap-3 pb-4 border-b\">\n        <div className=\"w-8 h-8 bg-indigo-600 rounded-lg flex items-center justify-center\">\n          <Megaphone className=\"h-5 w-5 text-white\" />\n        </div>\n        <div>\n          <h3 className=\"text-lg font-semibold text-gray-900\">Configure Outbound Campaign</h3>\n          <p className=\"text-sm text-gray-500\">Set up a campaign to run when this webhook triggers.</p>\n        </div>\n      </div>\n\n      <div className=\"space-y-4\">\n        <div>\n          <Label className=\"text-sm font-medium text-gray-900\">Campaign Name</Label>\n          <Input value={name} onChange={(e) => setName(e.target.value)} placeholder=\"e.g. New Leads Outreach\" className=\"mt-1 h-12\" />\n        </div>\n\n        <div>\n          <Label className=\"text-sm font-medium text-gray-900\">Phone Number</Label>\n          <Select value={phoneNumberId} onValueChange={setPhoneNumberId}>\n            <SelectTrigger className=\"w-full h-12 mt-1\">\n              <SelectValue placeholder={loading ? \"Loading...\" : \"Select a phone number\"} />\n            </SelectTrigger>\n            <SelectContent>\n              {phoneNumbers.map((p) => (\n                <SelectItem key={p.id} value={p.id}>\n                  {p.friendlyName ? `${p.friendlyName} (${p.number})` : p.number}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div>\n          <Label className=\"text-sm font-medium text-gray-900\">Assistant (optional)</Label>\n          <Select value={assistantId || \"\"} onValueChange={(v) => setAssistantId(v || undefined)}>\n            <SelectTrigger className=\"w-full h-12 mt-1\">\n              <SelectValue placeholder={loading ? \"Loading...\" : \"Select an assistant\"} />\n            </SelectTrigger>\n            <SelectContent>\n              {assistants.map((a) => (\n                <SelectItem key={a.id} value={a.id}>\n                  {a.name}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        {/* <div>\n          <Label className=\"text-sm font-medium text-gray-900\">Workflow (optional)</Label>\n          <Select value={workflowId || \"\"} onValueChange={(v) => setWorkflowId(v || undefined)}>\n            <SelectTrigger className=\"w-full h-12 mt-1\">\n              <SelectValue placeholder={loading ? \"Loading...\" : \"Select a workflow\"} />\n            </SelectTrigger>\n            <SelectContent>\n              {workflows.map((w) => (\n                <SelectItem key={w.id} value={w.id}>\n                  {w.name}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div> */}\n\n        <div className=\"flex items-center gap-3 pt-2\">\n          <input\n            id=\"autoLaunch\"\n            type=\"checkbox\"\n            className=\"h-4 w-4\"\n            checked={autoLaunch}\n            onChange={(e) => setAutoLaunch(e.target.checked)}\n          />\n          <Label htmlFor=\"autoLaunch\" className=\"text-sm text-gray-700\">Auto-launch campaign when triggered</Label>\n        </div>\n      </div>\n\n      <div className=\"flex gap-3 pt-6 border-t\">\n        <Button variant=\"outline\" onClick={onCancel} className=\"flex-1 h-12 border border-gray-300 rounded-lg\">\n          Cancel\n        </Button>\n        <Button onClick={handleSave} className=\"flex-1 h-12 bg-indigo-600 hover:bg-indigo-700 text-white rounded-lg\" disabled={loading}>\n          {loading ? <><Loader2 className=\"h-4 w-4 animate-spin mr-2\" />Saving...</> : \"Save\"}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default CampaignActionConfig;\n\n\n","'use client';\nimport e,{isValidElement as t,useRef as n,useLayoutEffect as o,useEffect as s,cloneElement as a,useSyncExternalStore as r,useState as i}from\"react\";import l from\"clsx\";const c=e=>\"number\"==typeof e&&!isNaN(e),d=e=>\"string\"==typeof e,u=e=>\"function\"==typeof e,p=e=>d(e)||u(e)?e:null,m=e=>t(e)||d(e)||u(e)||c(e);function f(e,t,n){void 0===n&&(n=300);const{scrollHeight:o,style:s}=e;requestAnimationFrame(()=>{s.minHeight=\"initial\",s.height=o+\"px\",s.transition=`all ${n}ms`,requestAnimationFrame(()=>{s.height=\"0\",s.padding=\"0\",s.margin=\"0\",setTimeout(t,n)})})}function g(t){let{enter:a,exit:r,appendPosition:i=!1,collapse:l=!0,collapseDuration:c=300}=t;return function(t){let{children:d,position:u,preventExitTransition:p,done:m,nodeRef:g,isIn:y,playToast:v}=t;const h=i?`${a}--${u}`:a,T=i?`${r}--${u}`:r,E=n(0);return o(()=>{const e=g.current,t=h.split(\" \"),n=o=>{o.target===g.current&&(v(),e.removeEventListener(\"animationend\",n),e.removeEventListener(\"animationcancel\",n),0===E.current&&\"animationcancel\"!==o.type&&e.classList.remove(...t))};e.classList.add(...t),e.addEventListener(\"animationend\",n),e.addEventListener(\"animationcancel\",n)},[]),s(()=>{const e=g.current,t=()=>{e.removeEventListener(\"animationend\",t),l?f(e,m,c):m()};y||(p?t():(E.current=1,e.className+=` ${T}`,e.addEventListener(\"animationend\",t)))},[y]),e.createElement(e.Fragment,null,d)}}function y(e,t){return null!=e?{content:e.content,containerId:e.props.containerId,id:e.props.toastId,theme:e.props.theme,type:e.props.type,data:e.props.data||{},isLoading:e.props.isLoading,icon:e.props.icon,status:t}:{}}const v=new Map;let h=[];const T=new Set,E=e=>T.forEach(t=>t(e)),b=()=>v.size>0;function I(e,t){var n;if(t)return!(null==(n=v.get(t))||!n.isToastActive(e));let o=!1;return v.forEach(t=>{t.isToastActive(e)&&(o=!0)}),o}function _(e,t){m(e)&&(b()||h.push({content:e,options:t}),v.forEach(n=>{n.buildToast(e,t)}))}function C(e,t){v.forEach(n=>{null!=t&&null!=t&&t.containerId?(null==t?void 0:t.containerId)===n.id&&n.toggle(e,null==t?void 0:t.id):n.toggle(e,null==t?void 0:t.id)})}function L(e){const{subscribe:o,getSnapshot:s,setProps:i}=n(function(e){const n=e.containerId||1;return{subscribe(o){const s=function(e,n,o){let s=1,r=0,i=[],l=[],f=[],g=n;const v=new Map,h=new Set,T=()=>{f=Array.from(v.values()),h.forEach(e=>e())},E=e=>{l=null==e?[]:l.filter(t=>t!==e),T()},b=e=>{const{toastId:n,onOpen:s,updateId:a,children:r}=e.props,i=null==a;e.staleId&&v.delete(e.staleId),v.set(n,e),l=[...l,e.props.toastId].filter(t=>t!==e.staleId),T(),o(y(e,i?\"added\":\"updated\")),i&&u(s)&&s(t(r)&&r.props)};return{id:e,props:g,observe:e=>(h.add(e),()=>h.delete(e)),toggle:(e,t)=>{v.forEach(n=>{null!=t&&t!==n.props.toastId||u(n.toggle)&&n.toggle(e)})},removeToast:E,toasts:v,clearQueue:()=>{r-=i.length,i=[]},buildToast:(n,l)=>{if((t=>{let{containerId:n,toastId:o,updateId:s}=t;const a=n?n!==e:1!==e,r=v.has(o)&&null==s;return a||r})(l))return;const{toastId:f,updateId:h,data:I,staleId:_,delay:C}=l,L=()=>{E(f)},N=null==h;N&&r++;const $={...g,style:g.toastStyle,key:s++,...Object.fromEntries(Object.entries(l).filter(e=>{let[t,n]=e;return null!=n})),toastId:f,updateId:h,data:I,closeToast:L,isIn:!1,className:p(l.className||g.toastClassName),bodyClassName:p(l.bodyClassName||g.bodyClassName),progressClassName:p(l.progressClassName||g.progressClassName),autoClose:!l.isLoading&&(w=l.autoClose,k=g.autoClose,!1===w||c(w)&&w>0?w:k),deleteToast(){const e=v.get(f),{onClose:n,children:s}=e.props;u(n)&&n(t(s)&&s.props),o(y(e,\"removed\")),v.delete(f),r--,r<0&&(r=0),i.length>0?b(i.shift()):T()}};var w,k;$.closeButton=g.closeButton,!1===l.closeButton||m(l.closeButton)?$.closeButton=l.closeButton:!0===l.closeButton&&($.closeButton=!m(g.closeButton)||g.closeButton);let P=n;t(n)&&!d(n.type)?P=a(n,{closeToast:L,toastProps:$,data:I}):u(n)&&(P=n({closeToast:L,toastProps:$,data:I}));const M={content:P,props:$,staleId:_};g.limit&&g.limit>0&&r>g.limit&&N?i.push(M):c(C)?setTimeout(()=>{b(M)},C):b(M)},setProps(e){g=e},setToggle:(e,t)=>{v.get(e).toggle=t},isToastActive:e=>l.some(t=>t===e),getSnapshot:()=>f}}(n,e,E);v.set(n,s);const r=s.observe(o);return h.forEach(e=>_(e.content,e.options)),h=[],()=>{r(),v.delete(n)}},setProps(e){var t;null==(t=v.get(n))||t.setProps(e)},getSnapshot(){var e;return null==(e=v.get(n))?void 0:e.getSnapshot()}}}(e)).current;i(e);const l=r(o,s,s);return{getToastToRender:function(t){if(!l)return[];const n=new Map;return e.newestOnTop&&l.reverse(),l.forEach(e=>{const{position:t}=e.props;n.has(t)||n.set(t,[]),n.get(t).push(e)}),Array.from(n,e=>t(e[0],e[1]))},isToastActive:I,count:null==l?void 0:l.length}}function N(e){const[t,o]=i(!1),[a,r]=i(!1),l=n(null),c=n({start:0,delta:0,removalDistance:0,canCloseOnClick:!0,canDrag:!1,didMove:!1}).current,{autoClose:d,pauseOnHover:u,closeToast:p,onClick:m,closeOnClick:f}=e;var g,y;function h(){o(!0)}function T(){o(!1)}function E(n){const o=l.current;c.canDrag&&o&&(c.didMove=!0,t&&T(),c.delta=\"x\"===e.draggableDirection?n.clientX-c.start:n.clientY-c.start,c.start!==n.clientX&&(c.canCloseOnClick=!1),o.style.transform=`translate3d(${\"x\"===e.draggableDirection?`${c.delta}px, var(--y)`:`0, calc(${c.delta}px + var(--y))`},0)`,o.style.opacity=\"\"+(1-Math.abs(c.delta/c.removalDistance)))}function b(){document.removeEventListener(\"pointermove\",E),document.removeEventListener(\"pointerup\",b);const t=l.current;if(c.canDrag&&c.didMove&&t){if(c.canDrag=!1,Math.abs(c.delta)>c.removalDistance)return r(!0),e.closeToast(),void e.collapseAll();t.style.transition=\"transform 0.2s, opacity 0.2s\",t.style.removeProperty(\"transform\"),t.style.removeProperty(\"opacity\")}}null==(y=v.get((g={id:e.toastId,containerId:e.containerId,fn:o}).containerId||1))||y.setToggle(g.id,g.fn),s(()=>{if(e.pauseOnFocusLoss)return document.hasFocus()||T(),window.addEventListener(\"focus\",h),window.addEventListener(\"blur\",T),()=>{window.removeEventListener(\"focus\",h),window.removeEventListener(\"blur\",T)}},[e.pauseOnFocusLoss]);const I={onPointerDown:function(t){if(!0===e.draggable||e.draggable===t.pointerType){c.didMove=!1,document.addEventListener(\"pointermove\",E),document.addEventListener(\"pointerup\",b);const n=l.current;c.canCloseOnClick=!0,c.canDrag=!0,n.style.transition=\"none\",\"x\"===e.draggableDirection?(c.start=t.clientX,c.removalDistance=n.offsetWidth*(e.draggablePercent/100)):(c.start=t.clientY,c.removalDistance=n.offsetHeight*(80===e.draggablePercent?1.5*e.draggablePercent:e.draggablePercent)/100)}},onPointerUp:function(t){const{top:n,bottom:o,left:s,right:a}=l.current.getBoundingClientRect();\"touchend\"!==t.nativeEvent.type&&e.pauseOnHover&&t.clientX>=s&&t.clientX<=a&&t.clientY>=n&&t.clientY<=o?T():h()}};return d&&u&&(I.onMouseEnter=T,e.stacked||(I.onMouseLeave=h)),f&&(I.onClick=e=>{m&&m(e),c.canCloseOnClick&&p()}),{playToast:h,pauseToast:T,isRunning:t,preventExitTransition:a,toastRef:l,eventHandlers:I}}function $(t){let{delay:n,isRunning:o,closeToast:s,type:a=\"default\",hide:r,className:i,style:c,controlledProgress:d,progress:p,rtl:m,isIn:f,theme:g}=t;const y=r||d&&0===p,v={...c,animationDuration:`${n}ms`,animationPlayState:o?\"running\":\"paused\"};d&&(v.transform=`scaleX(${p})`);const h=l(\"Toastify__progress-bar\",d?\"Toastify__progress-bar--controlled\":\"Toastify__progress-bar--animated\",`Toastify__progress-bar-theme--${g}`,`Toastify__progress-bar--${a}`,{\"Toastify__progress-bar--rtl\":m}),T=u(i)?i({rtl:m,type:a,defaultClassName:h}):l(h,i),E={[d&&p>=1?\"onTransitionEnd\":\"onAnimationEnd\"]:d&&p<1?null:()=>{f&&s()}};return e.createElement(\"div\",{className:\"Toastify__progress-bar--wrp\",\"data-hidden\":y},e.createElement(\"div\",{className:`Toastify__progress-bar--bg Toastify__progress-bar-theme--${g} Toastify__progress-bar--${a}`}),e.createElement(\"div\",{role:\"progressbar\",\"aria-hidden\":y?\"true\":\"false\",\"aria-label\":\"notification timer\",className:T,style:v,...E}))}let w=1;const k=()=>\"\"+w++;function P(e){return e&&(d(e.toastId)||c(e.toastId))?e.toastId:k()}function M(e,t){return _(e,t),t.toastId}function x(e,t){return{...t,type:t&&t.type||e,toastId:P(t)}}function A(e){return(t,n)=>M(t,x(e,n))}function B(e,t){return M(e,x(\"default\",t))}B.loading=(e,t)=>M(e,x(\"default\",{isLoading:!0,autoClose:!1,closeOnClick:!1,closeButton:!1,draggable:!1,...t})),B.promise=function(e,t,n){let o,{pending:s,error:a,success:r}=t;s&&(o=d(s)?B.loading(s,n):B.loading(s.render,{...n,...s}));const i={isLoading:null,autoClose:null,closeOnClick:null,closeButton:null,draggable:null},l=(e,t,s)=>{if(null==t)return void B.dismiss(o);const a={type:e,...i,...n,data:s},r=d(t)?{render:t}:t;return o?B.update(o,{...a,...r}):B(r.render,{...a,...r}),s},c=u(e)?e():e;return c.then(e=>l(\"success\",r,e)).catch(e=>l(\"error\",a,e)),c},B.success=A(\"success\"),B.info=A(\"info\"),B.error=A(\"error\"),B.warning=A(\"warning\"),B.warn=B.warning,B.dark=(e,t)=>M(e,x(\"default\",{theme:\"dark\",...t})),B.dismiss=function(e){!function(e){var t;if(b()){if(null==e||d(t=e)||c(t))v.forEach(t=>{t.removeToast(e)});else if(e&&(\"containerId\"in e||\"id\"in e)){const t=v.get(e.containerId);t?t.removeToast(e.id):v.forEach(t=>{t.removeToast(e.id)})}}else h=h.filter(t=>null!=e&&t.options.toastId!==e)}(e)},B.clearWaitingQueue=function(e){void 0===e&&(e={}),v.forEach(t=>{!t.props.limit||e.containerId&&t.id!==e.containerId||t.clearQueue()})},B.isActive=I,B.update=function(e,t){void 0===t&&(t={});const n=((e,t)=>{var n;let{containerId:o}=t;return null==(n=v.get(o||1))?void 0:n.toasts.get(e)})(e,t);if(n){const{props:o,content:s}=n,a={delay:100,...o,...t,toastId:t.toastId||e,updateId:k()};a.toastId!==e&&(a.staleId=e);const r=a.render||s;delete a.render,M(r,a)}},B.done=e=>{B.update(e,{progress:1})},B.onChange=function(e){return T.add(e),()=>{T.delete(e)}},B.play=e=>C(!0,e),B.pause=e=>C(!1,e);const O=\"undefined\"!=typeof window?o:s,D=t=>{let{theme:n,type:o,isLoading:s,...a}=t;return e.createElement(\"svg\",{viewBox:\"0 0 24 24\",width:\"100%\",height:\"100%\",fill:\"colored\"===n?\"currentColor\":`var(--toastify-icon-color-${o})`,...a})},z={info:function(t){return e.createElement(D,{...t},e.createElement(\"path\",{d:\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\"}))},warning:function(t){return e.createElement(D,{...t},e.createElement(\"path\",{d:\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\"}))},success:function(t){return e.createElement(D,{...t},e.createElement(\"path\",{d:\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\"}))},error:function(t){return e.createElement(D,{...t},e.createElement(\"path\",{d:\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"}))},spinner:function(){return e.createElement(\"div\",{className:\"Toastify__spinner\"})}},R=n=>{const{isRunning:o,preventExitTransition:s,toastRef:r,eventHandlers:i,playToast:c}=N(n),{closeButton:d,children:p,autoClose:m,onClick:f,type:g,hideProgressBar:y,closeToast:v,transition:h,position:T,className:E,style:b,bodyClassName:I,bodyStyle:_,progressClassName:C,progressStyle:L,updateId:w,role:k,progress:P,rtl:M,toastId:x,deleteToast:A,isIn:B,isLoading:O,closeOnClick:D,theme:R}=n,S=l(\"Toastify__toast\",`Toastify__toast-theme--${R}`,`Toastify__toast--${g}`,{\"Toastify__toast--rtl\":M},{\"Toastify__toast--close-on-click\":D}),H=u(E)?E({rtl:M,position:T,type:g,defaultClassName:S}):l(S,E),F=function(e){let{theme:n,type:o,isLoading:s,icon:r}=e,i=null;const l={theme:n,type:o};return!1===r||(u(r)?i=r({...l,isLoading:s}):t(r)?i=a(r,l):s?i=z.spinner():(e=>e in z)(o)&&(i=z[o](l))),i}(n),X=!!P||!m,Y={closeToast:v,type:g,theme:R};let q=null;return!1===d||(q=u(d)?d(Y):t(d)?a(d,Y):function(t){let{closeToast:n,theme:o,ariaLabel:s=\"close\"}=t;return e.createElement(\"button\",{className:`Toastify__close-button Toastify__close-button--${o}`,type:\"button\",onClick:e=>{e.stopPropagation(),n(e)},\"aria-label\":s},e.createElement(\"svg\",{\"aria-hidden\":\"true\",viewBox:\"0 0 14 16\"},e.createElement(\"path\",{fillRule:\"evenodd\",d:\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"})))}(Y)),e.createElement(h,{isIn:B,done:A,position:T,preventExitTransition:s,nodeRef:r,playToast:c},e.createElement(\"div\",{id:x,onClick:f,\"data-in\":B,className:H,...i,style:b,ref:r},e.createElement(\"div\",{...B&&{role:k},className:u(I)?I({type:g}):l(\"Toastify__toast-body\",I),style:_},null!=F&&e.createElement(\"div\",{className:l(\"Toastify__toast-icon\",{\"Toastify--animate-icon Toastify__zoom-enter\":!O})},F),e.createElement(\"div\",null,p)),q,e.createElement($,{...w&&!X?{key:`pb-${w}`}:{},rtl:M,theme:R,delay:m,isRunning:o,isIn:B,closeToast:v,hide:y,type:g,style:L,className:C,controlledProgress:X,progress:P||0})))},S=function(e,t){return void 0===t&&(t=!1),{enter:`Toastify--animate Toastify__${e}-enter`,exit:`Toastify--animate Toastify__${e}-exit`,appendPosition:t}},H=g(S(\"bounce\",!0)),F=g(S(\"slide\",!0)),X=g(S(\"zoom\")),Y=g(S(\"flip\")),q={position:\"top-right\",transition:H,autoClose:5e3,closeButton:!0,pauseOnHover:!0,pauseOnFocusLoss:!0,draggable:\"touch\",draggablePercent:80,draggableDirection:\"x\",role:\"alert\",theme:\"light\"};function Q(t){let o={...q,...t};const s=t.stacked,[a,r]=i(!0),c=n(null),{getToastToRender:d,isToastActive:m,count:f}=L(o),{className:g,style:y,rtl:v,containerId:h}=o;function T(e){const t=l(\"Toastify__toast-container\",`Toastify__toast-container--${e}`,{\"Toastify__toast-container--rtl\":v});return u(g)?g({position:e,rtl:v,defaultClassName:t}):l(t,p(g))}function E(){s&&(r(!0),B.play())}return O(()=>{if(s){var e;const t=c.current.querySelectorAll('[data-in=\"true\"]'),n=12,s=null==(e=o.position)?void 0:e.includes(\"top\");let r=0,i=0;Array.from(t).reverse().forEach((e,t)=>{const o=e;o.classList.add(\"Toastify__toast--stacked\"),t>0&&(o.dataset.collapsed=`${a}`),o.dataset.pos||(o.dataset.pos=s?\"top\":\"bot\");const l=r*(a?.2:1)+(a?0:n*t);o.style.setProperty(\"--y\",`${s?l:-1*l}px`),o.style.setProperty(\"--g\",`${n}`),o.style.setProperty(\"--s\",\"\"+(1-(a?i:0))),r+=o.offsetHeight,i+=.025})}},[a,f,s]),e.createElement(\"div\",{ref:c,className:\"Toastify\",id:h,onMouseEnter:()=>{s&&(r(!1),B.pause())},onMouseLeave:E},d((t,n)=>{const o=n.length?{...y}:{...y,pointerEvents:\"none\"};return e.createElement(\"div\",{className:T(t),style:o,key:`container-${t}`},n.map(t=>{let{content:n,props:o}=t;return e.createElement(R,{...o,stacked:s,collapseAll:E,isIn:m(o.toastId,o.containerId),style:o.style,key:`toast-${o.key}`},n)}))}))}export{H as Bounce,Y as Flip,z as Icons,F as Slide,Q as ToastContainer,X as Zoom,f as collapseToast,g as cssTransition,B as toast,N as useToast,L as useToastContainer};\n//# sourceMappingURL=react-toastify.esm.mjs.map\n"," import React, { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\n// Removed unused Select imports since page/form selection is hidden\nimport { Facebook, Loader2 } from 'lucide-react';\nimport * as facebookService from '@/api/services/facebook/facebookService';\nimport { toast } from 'react-toastify';\nimport secureLocalStorage from 'react-secure-storage';\n\ninterface FacebookLeadAdsTriggerProps {\n  webhookId?: string;\n  workflowEnabled?: boolean;\n  onConnectionChange?: (connected: boolean) => void;\n}\n\nconst FacebookLeadAdsTrigger: React.FC<FacebookLeadAdsTriggerProps> = ({ webhookId, workflowEnabled, onConnectionChange }) => {\n  const [connectionType, setConnectionType] = useState<'new' | 'existing'>('new');\n  const [connectionName, setConnectionName] = useState('Facebook Lead Ads #1');\n  const [status, setStatus] = useState<facebookService.FacebookConnectionStatus>({ isConnected: false });\n  const [pages, setPages] = useState<facebookService.FacebookPage[]>([]);\n  const [leadForms, setLeadForms] = useState<facebookService.FacebookLeadForm[]>([]);\n  const [selectedPageId, setSelectedPageId] = useState('');\n  const [selectedFormId, setSelectedFormId] = useState('');\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [isLoadingForms, setIsLoadingForms] = useState(false);\n\n  // Debug logging\n  console.log('üîÑ [FacebookLeadAdsTrigger] Component render:', {\n    webhookId,\n    isConnected: status.isConnected,\n    pagesCount: pages.length,\n    formsCount: leadForms.length,\n    selectedPageId,\n    selectedFormId\n  });\n\n  useEffect(() => {\n    console.log('üîÑ Component mounted/webhookId changed, loading status...', { webhookId });\n    if (webhookId !== undefined && webhookId !== null) {\n      // Small delay to ensure webhook record is fully created\n      setTimeout(() => {\n        loadStatus();\n      }, 100);\n    } else {\n      console.log('‚ö†Ô∏è webhookId is undefined/null, skipping loadStatus');\n    }\n  }, [webhookId]);\n\n  // Add aggressive polling to detect Facebook connection changes\n  useEffect(() => {\n    if (!webhookId) return;\n\n    const pollForConnection = async () => {\n      // Check storage first\n      const tempConnected = sessionStorage.getItem('temp_facebook_connected') === 'true';\n      const localConnected = localStorage.getItem(`facebook_connected_${webhookId}`) === 'true';\n\n      if ((tempConnected || localConnected) && !status.isConnected) {\n        console.log('üîÑ Detected Facebook connection in storage, reloading status');\n        loadStatus();\n        return;\n      }\n\n      // If not connected, also check backend directly with webhook ID\n      if (!status.isConnected && webhookId) {\n        try {\n          const backendStatus = await facebookService.getFacebookConnectionStatus(webhookId);\n          if (backendStatus.isConnected && !status.isConnected) {\n            console.log('üîÑ Detected Facebook connection via backend API, updating status');\n            setStatus(backendStatus);\n            onConnectionChange?.(true);\n\n            // Load pages\n            try {\n              const pages = await facebookService.getFacebookPages();\n              setPages(pages);\n            } catch (e) {\n              console.log('Failed to load pages:', e);\n            }\n          }\n        } catch (e) {\n          // Ignore backend check errors\n        }\n      }\n    };\n\n    const interval = setInterval(pollForConnection, 3000); // Check every 3 seconds\n    return () => clearInterval(interval);\n  }, [webhookId, status.isConnected]);\n\n  // Add window focus listener to check status when user returns from OAuth popup\n  useEffect(() => {\n    const handleWindowFocus = () => {\n      if (webhookId && !status.isConnected) {\n        console.log('üîÑ Window focused, checking for Facebook connection');\n        setTimeout(() => {\n          loadStatus();\n        }, 1000); // Wait 1 second for any storage updates to complete\n      }\n    };\n\n    window.addEventListener('focus', handleWindowFocus);\n    return () => window.removeEventListener('focus', handleWindowFocus);\n  }, [webhookId, status.isConnected]);\n\n  // Debug: Watch for status changes\n  useEffect(() => {\n    console.log('üîÑ [FacebookLeadAdsTrigger] Status changed:', status);\n  }, [status]);\n\n  // Add effect to listen for storage changes (for cross-tab communication)\n  useEffect(() => {\n    const handleStorageChange = (e: StorageEvent) => {\n      if (e.key === 'temp_facebook_connected' || e.key?.startsWith('facebook_connected_')) {\n        console.log('üîÑ Storage change detected, refreshing status...', e.key, e.newValue);\n        setTimeout(() => loadStatus(), 100);\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n\n  // Add global message listener for OAuth success messages\n  useEffect(() => {\n    console.log('üîß [FacebookLeadAdsTrigger] Setting up global message listener for webhookId:', webhookId);\n    const handleMessage = (event: MessageEvent) => {\n      console.log('üîî [FacebookLeadAdsTrigger] Message received from origin:', event.origin, 'data:', event.data);\n      console.log('üîî [FacebookLeadAdsTrigger] Current webhookId:', webhookId);\n      // Verify origin for security - be more permissive for development\n      const allowedOrigins = [\n        window.location.origin,\n        import.meta.env.VITE_APP_BASE_URL || 'http://localhost:5001',\n        'http://localhost:5173',\n        'http://localhost:5174',\n        'https://ai.research-hero.com'\n      ];\n\n      // For development, also allow localhost origins\n      const isLocalhost = event.origin.includes('localhost') || event.origin === 'null';\n      const isAllowedOrigin = allowedOrigins.includes(event.origin) || isLocalhost;\n\n      if (!isAllowedOrigin) {\n        console.warn('üö´ [FacebookLeadAdsTrigger] Ignoring message from unauthorized origin:', event.origin);\n        return;\n      }\n\n      console.log('üì® [FacebookLeadAdsTrigger] Received popup message:', event.data);\n      console.log('üì® [FacebookLeadAdsTrigger] Message type:', event.data?.type);\n\n      if (event.data.type === 'facebook_oauth_success') {\n        console.log('üéâ [FacebookLeadAdsTrigger] Facebook OAuth success received from popup');\n\n        const facebookUser = event.data.data?.facebookUser;\n        console.log('üë§ [FacebookLeadAdsTrigger] Facebook user data:', facebookUser);\n\n        if (facebookUser) {\n          console.log('üíæ [FacebookLeadAdsTrigger] Storing connection data...');\n\n          // Always store in session storage for immediate use during webhook creation\n          console.log('üìù [FacebookLeadAdsTrigger] Storing in session storage for immediate use');\n          sessionStorage.setItem('temp_facebook_user', JSON.stringify(facebookUser));\n          sessionStorage.setItem('temp_facebook_connected', 'true');\n          console.log('‚úÖ [FacebookLeadAdsTrigger] Session storage updated:', {\n            temp_facebook_connected: sessionStorage.getItem('temp_facebook_connected'),\n            temp_facebook_user: !!sessionStorage.getItem('temp_facebook_user')\n          });\n\n          // Also store in localStorage if we have a webhookId for persistence\n          if (webhookId) {\n            console.log('üìù [FacebookLeadAdsTrigger] Also storing for webhook:', webhookId);\n            localStorage.setItem(`facebook_connected_${webhookId}`, 'true');\n            localStorage.setItem(`facebook_user_${webhookId}`, JSON.stringify(facebookUser));\n          }\n\n          // Update status and load pages\n          console.log('üîÑ [FacebookLeadAdsTrigger] Setting status to connected with user:', facebookUser);\n          setStatus({ isConnected: true, facebookUser: facebookUser });\n          console.log('üîÑ [FacebookLeadAdsTrigger] Status set, calling onConnectionChange');\n          onConnectionChange?.(true);\n\n          // Load pages immediately after OAuth success\n          console.log('üîÑ [FacebookLeadAdsTrigger] Loading pages after OAuth success');\n          setTimeout(async () => {\n            try {\n              const pages = await facebookService.getFacebookPages();\n              console.log('‚úÖ Pages loaded immediately after OAuth:', pages.length);\n              setPages(pages);\n            } catch (e) {\n              console.log('‚ùå Failed to load pages immediately:', e);\n            }\n          }, 500);\n\n          // Load pages and show success message\n          console.log('üîÑ [FacebookLeadAdsTrigger] Loading Facebook pages after OAuth success...');\n          facebookService.getFacebookPages()\n            .then(fetchedPages => {\n              console.log('‚úÖ [FacebookLeadAdsTrigger] Facebook connected and pages loaded:', fetchedPages.length, 'pages');\n              setPages(fetchedPages);\n\n              // Auto-select first page and load its forms\n              if (fetchedPages.length > 0) {\n                const firstPageId = fetchedPages[0].id;\n                setSelectedPageId(firstPageId);\n                console.log('üîÑ [FacebookLeadAdsTrigger] Auto-selecting first page and loading forms...');\n\n                facebookService.getPageLeadForms(firstPageId)\n                  .then(forms => {\n                    console.log('‚úÖ [FacebookLeadAdsTrigger] Forms loaded for first page:', forms.length, 'forms');\n                    setLeadForms(forms);\n                    toast.success(`‚úÖ Facebook Lead Ads connected! Found ${fetchedPages.length} pages and ${forms.length} forms.`);\n                  })\n                  .catch(formError => {\n                    console.log('‚ùå [FacebookLeadAdsTrigger] Failed to load forms for first page:', formError);\n                    toast.success(`‚úÖ Facebook Lead Ads connected! Found ${fetchedPages.length} pages.`);\n                  });\n              } else {\n                toast.success('‚úÖ Facebook Lead Ads connected successfully!');\n              }\n            })\n            .catch((e) => {\n              console.error('Post-OAuth pages loading failed', e);\n              toast.success('‚úÖ Facebook Lead Ads connected successfully!');\n            });\n        } else {\n          // Fallback: just reload status\n          loadStatus().then(() => {\n            toast.success('Facebook Lead Ads connected successfully!');\n          }).catch((e) => {\n            console.error('Post-OAuth refresh failed', e);\n            toast.error('Failed to refresh Facebook connection status');\n          });\n        }\n      } else if (event.data.type === 'facebook_oauth_error') {\n        console.error('‚ùå [FacebookLeadAdsTrigger] Facebook OAuth error received from popup:', event.data.message);\n        toast.error(`Facebook connection failed: ${event.data.message || 'Unknown error'}`);\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [webhookId]); // Add webhookId to dependency array to avoid stale closure\n\n  // Clear temporary storage when component unmounts (if not transferred to permanent)\n  useEffect(() => {\n    return () => {\n      // Only clear if this is a new webhook (no webhookId) and user is navigating away\n      if (!webhookId) {\n        const tempConnected = sessionStorage.getItem('temp_facebook_connected');\n        if (tempConnected) {\n          console.log('Clearing temporary Facebook connection on unmount');\n          sessionStorage.removeItem('temp_facebook_connected');\n          sessionStorage.removeItem('temp_facebook_user');\n        }\n      }\n    };\n  }, [webhookId]);\n\n  const loadStatus = async () => {\n    try {\n      console.log('üîç loadStatus called with webhookId:', webhookId);\n\n      // For new webhook flows (no webhookId), always start disconnected\n      if (!webhookId) {\n        console.log('üÜï New webhook flow - starting disconnected');\n        // Clear any previous session data to ensure clean state\n        sessionStorage.removeItem('temp_facebook_connected');\n        sessionStorage.removeItem('temp_facebook_user');\n        setStatus({ isConnected: false });\n        setPages([]);\n        setLeadForms([]);\n        onConnectionChange?.(false);\n        return;\n      }\n\n      // For existing webhooks, check webhook-specific connection\n      console.log('üîç Existing webhook - checking webhook-specific connection for:', webhookId);\n\n      // Check localStorage for this specific webhook first\n      const isConnected = localStorage.getItem(`facebook_connected_${webhookId}`) === 'true';\n      const userStr = localStorage.getItem(`facebook_user_${webhookId}`);\n      console.log('üîç localStorage check:', { isConnected, hasUserStr: !!userStr });\n\n      if (isConnected && userStr) {\n        try {\n          const facebookUser = JSON.parse(userStr);\n          console.log('‚úÖ Found webhook-specific Facebook connection in localStorage');\n          setStatus({ isConnected: true, facebookUser });\n\n          // Load pages for this webhook connection\n          try {\n            const storedPages = await facebookService.getStoredFacebookPages();\n            console.log('üì¶ Stored pages loaded:', storedPages.length, 'pages');\n            setPages(storedPages);\n          } catch (error) {\n            console.log('‚ùå Failed to load pages:', error);\n            setPages([]);\n          }\n\n          onConnectionChange?.(true);\n          return;\n        } catch (e) {\n          console.error('‚ùå Invalid webhook-specific data, clearing:', e);\n          localStorage.removeItem(`facebook_connected_${webhookId}`);\n          localStorage.removeItem(`facebook_user_${webhookId}`);\n        }\n      }\n\n      // Fallback: Check session storage for temporary connections (during webhook creation)\n      const tempConnected = sessionStorage.getItem('temp_facebook_connected') === 'true';\n      const tempUserStr = sessionStorage.getItem('temp_facebook_user');\n      console.log('üîç sessionStorage fallback check:', { tempConnected, hasTempUserStr: !!tempUserStr });\n\n      if (tempConnected && tempUserStr) {\n        try {\n          const facebookUser = JSON.parse(tempUserStr);\n          console.log('‚úÖ Found Facebook connection in sessionStorage, using as fallback');\n          setStatus({ isConnected: true, facebookUser });\n\n          // Load pages for this connection\n          try {\n            const storedPages = await facebookService.getStoredFacebookPages();\n            console.log('üì¶ Stored pages loaded from sessionStorage fallback:', storedPages.length, 'pages');\n            setPages(storedPages);\n          } catch (error) {\n            console.log('‚ùå Failed to load pages from sessionStorage fallback:', error);\n            setPages([]);\n          }\n\n          onConnectionChange?.(true);\n          return;\n        } catch (e) {\n          console.error('‚ùå Invalid sessionStorage data:', e);\n        }\n      }\n\n      // No connection found anywhere\n      console.log('‚ùå No Facebook connection found in localStorage or sessionStorage');\n      setStatus({ isConnected: false });\n      setPages([]);\n      setLeadForms([]);\n      onConnectionChange?.(false);\n    } catch (e) {\n      console.error('‚ùå Error in loadStatus:', e);\n      setStatus({ isConnected: false });\n      setPages([]);\n      setLeadForms([]);\n      onConnectionChange?.(false);\n    }\n  };\n\n  // Demo login function for authentication\n  const performDemoLogin = async () => {\n    try {\n      console.log('üîê Performing demo login...');\n      const response = await fetch(`${import.meta.env.VITE_APP_BASE_URL}/api/auth/demo-login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.success && result.data.token) {\n          secureLocalStorage.setItem('token', result.data.token);\n          localStorage.setItem('token', result.data.token); // Fallback for compatibility\n          console.log('‚úÖ Demo login successful');\n          return result.data.token;\n        }\n      }\n      throw new Error('Demo login failed');\n    } catch (error) {\n      console.error('‚ùå Demo login error:', error);\n      throw error;\n    }\n  };\n\n  const handleConnect = async () => {\n    console.log('üöÄ handleConnect called');\n\n    // Check if webhook flow is enabled using the prop\n    console.log('üîç Webhook toggle check:', { workflowEnabled });\n\n    if (!workflowEnabled) {\n      // Show message to turn on webhook flow first\n      toast.error('First ON the Toggle');\n      return;\n    }\n\n    setIsConnecting(true);\n    try {\n      console.log('üîç Current status:', status);\n      if (status.isConnected) {\n        console.log('‚úÖ Already connected, loading pages...');\n        const freshPages = await facebookService.getFacebookPages();\n        setPages(freshPages);\n        return;\n      }\n\n      // Debug: Check environment and configuration\n      console.log('üîß Debug Info:', {\n        baseUrl: import.meta.env.VITE_APP_BASE_URL,\n        currentOrigin: window.location.origin,\n        webhookId: webhookId\n      });\n\n      // Check if backend is available first\n      console.log('üîç Checking backend availability...');\n      let backendAvailable = true;\n      let needsAuth = false;\n      try {\n        const token = secureLocalStorage.getItem('token') || localStorage.getItem('token');\n        console.log('üîë Using token:', !!token);\n        const healthCheck = await fetch(`${import.meta.env.VITE_APP_BASE_URL}/api/auth/facebook/status`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('üè• Health check response:', healthCheck.status, healthCheck.ok);\n        backendAvailable = healthCheck.ok;\n\n        // Check if it's an auth error\n        if (healthCheck.status === 401) {\n          console.log('üîê Authentication required');\n          needsAuth = true;\n          backendAvailable = true; // Backend is running, just need auth\n        }\n      } catch (e) {\n        console.error('‚ùå Backend check failed:', e);\n        backendAvailable = false;\n      }\n\n      if (!backendAvailable) {\n        throw new Error('‚ùå Backend server is not running!\\n\\nPlease start the backend server:\\n1. Open terminal in backend folder\\n2. Run: npm start\\n3. Wait for \"Server is running on port 5001\"\\n4. Try connecting again');\n      }\n\n      // If we need authentication, perform demo login\n      if (needsAuth) {\n        console.log('üîê Authentication required, performing demo login...');\n        await performDemoLogin();\n        toast.success('‚úÖ Authenticated successfully');\n      }\n\n      console.log('üîÑ Generating Facebook OAuth URL...');\n      let oauthUrl: string;\n      try {\n        oauthUrl = await facebookService.generateFacebookOAuthUrl();\n        console.log('‚úÖ Facebook OAuth URL generated:', oauthUrl);\n\n        if (!oauthUrl || typeof oauthUrl !== 'string') {\n          throw new Error('Invalid OAuth URL received: ' + oauthUrl);\n        }\n\n        if (!oauthUrl.startsWith('https://www.facebook.com/')) {\n          console.log('‚ö†Ô∏è Unexpected OAuth URL format:', oauthUrl);\n        }\n      } catch (oauthError: any) {\n        console.error('‚ùå Error generating OAuth URL:', oauthError);\n        throw new Error('Failed to generate Facebook OAuth URL: ' + (oauthError?.message || oauthError));\n      }\n\n      const width = 600;\n      const height = 700;\n      const left = window.screenX + (window.outerWidth - width) / 2;\n      const top = window.screenY + (window.outerHeight - height) / 2;\n\n      console.log('üîÑ Opening Facebook OAuth popup...');\n      console.log('üîó OAuth URL:', oauthUrl);\n      const popup = window.open(\n        oauthUrl,\n        'fb_oauth',\n        `width=${width},height=${height},left=${left},top=${top},toolbar=0,location=0,status=0,menubar=0`\n      );\n      console.log('üì± Popup opened:', !!popup);\n\n      // Add popup monitoring with auto force connect\n      if (popup) {\n        const checkClosed = setInterval(() => {\n          if (popup.closed) {\n            console.log('üîí Popup was closed - checking if OAuth completed');\n            clearInterval(checkClosed);\n\n            // Wait a moment for any backend processing to complete\n            setTimeout(async () => {\n              console.log('üîÑ Popup closed, attempting auto force connect...');\n\n              try {\n                // Try to get Facebook pages to see if OAuth worked\n                const pages = await facebookService.getFacebookPages();\n                console.log('‚úÖ OAuth successful! Pages found:', pages.length);\n\n                // Auto force connect since OAuth worked\n                const testUser = {\n                  id: '4098579607137444',\n                  name: 'Facebook User',\n                  email: ''\n                };\n\n                console.log('üöÄ Auto applying force connect...');\n                setStatus({ isConnected: true, facebookUser: testUser });\n                onConnectionChange?.(true);\n                setPages(pages);\n\n                toast.success(`‚úÖ Facebook Lead Ads connected! Found ${pages.length} pages.`);\n\n                // Auto-select first page and load forms\n                if (pages.length > 0) {\n                  const firstPageId = pages[0].id;\n                  setSelectedPageId(firstPageId);\n\n                  try {\n                    const forms = await facebookService.getPageLeadForms(firstPageId);\n                    setLeadForms(forms);\n                    console.log('‚úÖ Auto-loaded forms for first page:', forms.length);\n                  } catch (formError) {\n                    console.log('‚ùå Failed to auto-load forms:', formError);\n                  }\n                }\n\n              } catch (error) {\n                console.log('‚ùå OAuth may have failed or been cancelled:', error);\n                toast.info('Facebook connection was cancelled or failed');\n              }\n            }, 2000); // Wait 2 seconds for backend processing\n          }\n        }, 1000);\n\n        // Also check if popup is blocked\n        setTimeout(() => {\n          if (popup.closed) {\n            console.log('‚ö†Ô∏è Popup was closed immediately - might be blocked');\n          }\n        }, 100);\n      }\n\n      if (!popup) {\n        console.error('‚ùå Popup was blocked by browser');\n        const popupError = new Error('Popup was blocked. Please allow popups for this site and try again.');\n        (popupError as any).isPopupBlocked = true;\n        throw popupError;\n      }\n\n      // Monitor popup URL changes\n      let lastUrl = '';\n      const urlMonitor = setInterval(() => {\n        try {\n          if (popup && !popup.closed) {\n            const currentUrl = popup.location.href;\n            if (currentUrl !== lastUrl) {\n              console.log('üîÑ Popup URL changed:', currentUrl);\n              lastUrl = currentUrl;\n            }\n          } else if (popup && popup.closed) {\n            clearInterval(urlMonitor);\n            console.log('üîí Popup closed, stopping URL monitoring');\n          }\n        } catch (e) {\n          // Cross-origin error is expected when navigating to Facebook\n          if (lastUrl === '') {\n            console.log('üåê Popup navigated to external domain (Facebook)');\n            lastUrl = 'external';\n          }\n        }\n      }, 500);\n\n      await new Promise<void>((resolve, reject) => {\n        let isResolved = false;\n        let authenticationSuccessful = false;\n\n        const allowedOrigins = [window.location.origin];\n        try {\n          const urlObj = new URL(oauthUrl);\n          const redirectParam = urlObj.searchParams.get('redirect_uri');\n          if (redirectParam) {\n            try {\n              const decoded = decodeURIComponent(redirectParam);\n              const backendOrigin = new URL(decoded).origin;\n              if (!allowedOrigins.includes(backendOrigin)) allowedOrigins.push(backendOrigin);\n            } catch (e) {\n              // ignore\n            }\n          } else {\n            const popupOrigin = urlObj.origin;\n            if (!allowedOrigins.includes(popupOrigin)) allowedOrigins.push(popupOrigin);\n          }\n        } catch (e) {}\n\n        // Simple popup closure detection - only trigger after a reasonable delay\n        let popupMonitor: NodeJS.Timeout;\n        const startPopupMonitoring = () => {\n          popupMonitor = setInterval(() => {\n            if (popup && popup.closed && !isResolved && !authenticationSuccessful) {\n              // Wait a bit longer before considering it cancelled\n              setTimeout(() => {\n                if (!isResolved && !authenticationSuccessful) {\n                  isResolved = true;\n                  clearInterval(popupMonitor);\n                  clearInterval(urlMonitor);\n                  window.removeEventListener('message', handleMessage);\n                  // Popup was closed by user\n                  const cancellationError = new Error('Authentication was cancelled by user');\n                  (cancellationError as any).isUserCancellation = true;\n                  reject(cancellationError);\n                }\n              }, 3000); // Wait 3 seconds after popup closes\n            }\n          }, 1000);\n        };\n\n        // Start monitoring after a short delay to avoid immediate false positives\n        setTimeout(startPopupMonitoring, 2000);\n\n        const handleMessage = (event: MessageEvent) => {\n          if (isResolved) {\n            console.log('‚ö†Ô∏è [FB OAuth Listener] Message received but already resolved, ignoring');\n            return;\n          }\n\n          console.log('üì® [FB OAuth Listener] message received from', event.origin, event.data);\n          console.log('üîç [FB OAuth Listener] allowed origins:', allowedOrigins);\n\n          // Be very permissive with origins for Facebook OAuth (development mode)\n          const isValidOrigin = allowedOrigins.includes(event.origin) ||\n                               event.origin === 'null' ||\n                               event.origin === '*' ||\n                               event.origin === window.location.origin ||\n                               event.origin.includes('localhost') ||\n                               event.origin.includes('ai.research-hero.com');\n\n          if (!isValidOrigin) {\n            console.log('‚ö†Ô∏è [FB OAuth Listener] Message from disallowed origin, ignoring:', event.origin);\n            console.log('üîç [FB OAuth Listener] Current window origin:', window.location.origin);\n            console.log('üîç [FB OAuth Listener] Allowed origins:', allowedOrigins);\n            return;\n          }\n\n          console.log('‚úÖ [FB OAuth Listener] Origin validation passed for:', event.origin);\n\n          // Check if this is a Facebook OAuth message\n          if (!event.data?.type || !event.data.type.includes('facebook_oauth')) {\n            console.log('‚ö†Ô∏è [FB OAuth Listener] Not a Facebook OAuth message, ignoring:', event.data?.type);\n            return;\n          }\n\n          // This is our Facebook OAuth message - immediately stop all monitoring and resolve\n          console.log('‚úÖ [FB OAuth] Valid Facebook OAuth message received, processing...');\n          isResolved = true;\n          clearInterval(popupMonitor);\n          clearInterval(urlMonitor);\n          window.removeEventListener('message', handleMessage);\n\n          // Immediately close the popup\n          try {\n            if (popup && !popup.closed) {\n              popup.close();\n              console.log('Popup closed by frontend after message');\n            }\n          } catch (e) {\n            console.log('Failed to close popup from frontend:', e);\n          }\n\n          if (event.data?.type === 'facebook_oauth_success') {\n            console.log('üéâ [FB OAuth] Success message received!');\n            authenticationSuccessful = true; // Mark authentication as successful\n            const facebookUser = event.data.data?.facebookUser;\n            console.log('üë§ [FB OAuth] Facebook user data:', facebookUser);\n            console.log('‚úÖ [FB OAuth] Authentication completed successfully');\n\n            if (facebookUser) {\n              console.log('üíæ [FB OAuth] Storing connection data...');\n\n              // Always store in session storage for immediate use during webhook creation\n              console.log('üìù [FB OAuth] Storing in session storage for immediate use');\n              sessionStorage.setItem('temp_facebook_user', JSON.stringify(facebookUser));\n              sessionStorage.setItem('temp_facebook_connected', 'true');\n              console.log('‚úÖ [FB OAuth] Session storage updated:', {\n                temp_facebook_connected: sessionStorage.getItem('temp_facebook_connected'),\n                temp_facebook_user: !!sessionStorage.getItem('temp_facebook_user')\n              });\n\n              // If we have a webhookId, also store permanently for this webhook\n              if (webhookId) {\n                console.log('üìù [FB OAuth] Also storing permanently for webhook:', webhookId);\n                localStorage.setItem(`facebook_connected_${webhookId}`, 'true');\n                localStorage.setItem(`facebook_user_${webhookId}`, JSON.stringify(facebookUser));\n              }\n\n              console.log('üîÑ [FB OAuth] Setting status to connected...');\n              setStatus({ isConnected: true, facebookUser: facebookUser });\n              onConnectionChange?.(true);\n\n              // Load pages and show success message\n              console.log('üîÑ Loading Facebook pages after OAuth success...');\n              facebookService.getFacebookPages()\n                .then(fetchedPages => {\n                  console.log('‚úÖ Facebook connected and pages loaded:', fetchedPages.length, 'pages');\n                  console.log('üìÑ Pages data:', fetchedPages);\n                  setPages(fetchedPages);\n\n                  // Auto-select first page and load its forms\n                  if (fetchedPages.length > 0) {\n                    const firstPageId = fetchedPages[0].id;\n                    setSelectedPageId(firstPageId);\n                    console.log('üîÑ Auto-selecting first page and loading forms...');\n\n                    facebookService.getPageLeadForms(firstPageId)\n                      .then(forms => {\n                        console.log('‚úÖ Forms loaded for first page:', forms.length, 'forms');\n                        setLeadForms(forms);\n                        toast.success(`‚úÖ Facebook Lead Ads connected! Found ${fetchedPages.length} pages and ${forms.length} forms.`);\n                      })\n                      .catch(formError => {\n                        console.log('‚ùå Failed to load forms for first page:', formError);\n                        toast.success(`‚úÖ Facebook Lead Ads connected! Found ${fetchedPages.length} pages.`);\n                      });\n                  } else {\n                    toast.success('‚úÖ Facebook Lead Ads connected successfully!');\n                  }\n\n                  // Refresh the status to ensure UI is updated\n                  setTimeout(() => {\n                    console.log('üîÑ Refreshing status after OAuth success...');\n                    loadStatus();\n                  }, 100);\n\n                  setTimeout(() => {\n                    const formSection = document.getElementById('facebook-form-section');\n                    if (formSection) {\n                      console.log('üìç Scrolling to form section');\n                      formSection.scrollIntoView({ behavior: 'smooth' });\n                    } else {\n                      console.log('‚ö†Ô∏è Form section not found');\n                    }\n                  }, 500);\n\n                  resolve();\n                })\n                .catch(error => {\n                  console.error('Error loading pages, trying fallback:', error);\n                  facebookService.getStoredFacebookPages()\n                    .then(storedPages => {\n                      console.log('‚úÖ Facebook connected, using stored pages:', storedPages.length, 'pages');\n                      setPages(storedPages);\n                      toast.success('‚úÖ Facebook Lead Ads connected successfully!');\n                      resolve();\n                    })\n                    .catch(fallbackError => {\n                      console.error('Error loading stored pages:', fallbackError);\n                      toast.success('‚úÖ Facebook Lead Ads connected! Please refresh to load pages.');\n                      resolve();\n                    });\n                });\n            } else {\n              reject(new Error('No user data received from Facebook'));\n            }\n          } else if (event.data?.type === 'facebook_oauth_error') {\n            const errMsg = event.data.error || event.data.message || 'Failed to connect to Facebook';\n            console.error('‚ùå Facebook OAuth error:', errMsg);\n\n            // Check if this is a user denial/cancellation\n            if (errMsg.toLowerCase().includes('denied') ||\n                errMsg.toLowerCase().includes('cancelled') ||\n                errMsg.toLowerCase().includes('access_denied')) {\n              console.log('‚ÑπÔ∏è Facebook authentication denied by user');\n              const denialError = new Error(errMsg);\n              (denialError as any).isUserCancellation = true;\n              reject(denialError);\n            } else {\n              toast.error('‚ùå ' + errMsg);\n              reject(new Error(errMsg));\n            }\n          }\n        };\n\n        window.addEventListener('message', handleMessage);\n\n        // Add a timeout to prevent hanging indefinitely\n        const timeout = setTimeout(() => {\n          if (!isResolved) {\n            isResolved = true;\n            clearInterval(popupMonitor);\n            clearInterval(urlMonitor);\n            window.removeEventListener('message', handleMessage);\n            if (popup && !popup.closed) {\n              popup.close();\n            }\n            console.log('‚è∞ Facebook OAuth timeout - closing popup');\n            const timeoutError = new Error('Facebook authentication timed out');\n            (timeoutError as any).isTimeout = true;\n            reject(timeoutError);\n          }\n        }, 300000); // 5 minutes timeout\n\n        // Clean up timeout when resolved\n        const originalResolve = resolve;\n        const originalReject = reject;\n\n        resolve = (...args) => {\n          clearTimeout(timeout);\n          originalResolve(...args);\n        };\n\n        reject = (...args) => {\n          clearTimeout(timeout);\n          originalReject(...args);\n        };\n      });\n    } catch (error) {\n      // Check if this is a user cancellation\n      const isUserCancellation = (error as any)?.isUserCancellation === true;\n      const isTimeout = (error as any)?.isTimeout === true;\n      const isPopupBlocked = (error as any)?.isPopupBlocked === true;\n\n      if (isUserCancellation) {\n        // Don't show error toast or log for user cancellation - it's expected behavior\n        return;\n      } else if (isTimeout) {\n        console.error('‚è∞ Facebook authentication timed out');\n        toast.error('Facebook authentication timed out. Please try again.');\n      } else if (isPopupBlocked) {\n        console.error('üö´ Popup blocked by browser');\n        toast.error('Popup was blocked. Please allow popups for this site and try again.');\n      } else {\n        console.error('‚ùå Error in Facebook connection:', error);\n        console.error('‚ùå Error details:', {\n          message: error instanceof Error ? error.message : 'Unknown error',\n          stack: error instanceof Error ? error.stack : undefined,\n          type: typeof error,\n          error\n        });\n        toast.error(error instanceof Error ? error.message : 'Failed to connect to Facebook');\n      }\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  const handlePageChange = async (pageId: string) => {\n    console.log('üîÑ Page changed to:', pageId);\n    setSelectedPageId(pageId);\n    setSelectedFormId('');\n    setIsLoadingForms(true);\n\n    try {\n      if (pageId) {\n        console.log('üîÑ Loading forms for page:', pageId);\n        const forms = await facebookService.getPageLeadForms(pageId);\n        console.log('‚úÖ Forms loaded:', forms.length, 'forms');\n        setLeadForms(forms);\n\n        if (forms.length > 0) {\n          toast.success(`‚úÖ Found ${forms.length} lead form${forms.length !== 1 ? 's' : ''} for this page`);\n        } else {\n          toast.info('‚ÑπÔ∏è No lead forms found for this page');\n        }\n      } else {\n        setLeadForms([]);\n      }\n    } catch (error: any) {\n      console.error('‚ùå Error loading forms for page:', pageId, error);\n      setLeadForms([]);\n      toast.error('Failed to load lead forms for this page: ' + (error?.message || 'Unknown error'));\n    } finally {\n      setIsLoadingForms(false);\n    }\n  };\n\n  const handleFormChange = (formId: string) => {\n    console.log('üîÑ Form changed to:', formId);\n    setSelectedFormId(formId);\n  };\n\n  const handleSaveSelection = async () => {\n    (window as any).__selectedFacebookFormId = selectedFormId;\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center gap-3 pb-4 border-b\">\n        <div className=\"w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center\">\n          <Facebook className=\"h-5 w-5 text-white\" />\n        </div>\n        <div>\n          <h3 className=\"text-lg font-semibold text-gray-900\">Connect Facebook Lead Ads Account</h3>\n          <p className=\"text-sm text-gray-500\">All connections are fully encrypted and secure. Comply with SOC Type 2 and GDPR.</p>\n        </div>\n      </div>\n\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center gap-3 mb-4\">\n          <div className=\"w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center\">\n            <Facebook className=\"h-5 w-5 text-white\" />\n          </div>\n          <span className=\"text-lg font-medium\">Facebook Lead Ads</span>\n          {/* Debug buttons */}\n          {/* <div className=\"ml-auto flex gap-2\">\n            <button\n              onClick={() => {\n                console.log('üîß === STORAGE DIAGNOSTIC ===');\n                console.log('WebhookId:', webhookId);\n                console.log('SessionStorage temp_facebook_connected:', sessionStorage.getItem('temp_facebook_connected'));\n                console.log('SessionStorage temp_facebook_user:', sessionStorage.getItem('temp_facebook_user'));\n                console.log('LocalStorage facebook_connected_' + webhookId + ':', localStorage.getItem(`facebook_connected_${webhookId}`));\n                console.log('LocalStorage facebook_user_' + webhookId + ':', localStorage.getItem(`facebook_user_${webhookId}`));\n                console.log('Current status:', status);\n                console.log('=== END DIAGNOSTIC ===');\n              }}\n              className=\"px-3 py-1 text-xs bg-blue-200 rounded hover:bg-blue-300\"\n            >\n              Check Storage\n            </button>\n            <button\n              onClick={() => {\n                console.log('üîß Manual status reload triggered');\n                loadStatus();\n              }}\n              className=\"px-3 py-1 text-xs bg-gray-200 rounded hover:bg-gray-300\"\n            >\n              Reload Status\n            </button>\n            <button\n              onClick={async () => {\n                console.log('üîß FORCE CONNECTION TEST');\n                // Manually set connection status for testing\n                const testUser = { id: '4098579607137444', name: 'Anas Khan', email: '' };\n                setStatus({ isConnected: true, facebookUser: testUser });\n                onConnectionChange?.(true);\n\n                // Try to load pages\n                try {\n                  const pages = await facebookService.getFacebookPages();\n                  console.log('‚úÖ Pages loaded:', pages);\n                  setPages(pages);\n                } catch (error) {\n                  console.log('‚ùå Pages failed:', error);\n                }\n              }}\n              className=\"px-3 py-1 text-xs bg-green-200 rounded hover:bg-green-300\"\n            >\n              Force Connect\n            </button>\n            <button\n              onClick={() => {\n                console.log('üß™ TESTING MESSAGE LISTENER');\n                // Simulate the OAuth success message\n                const testMessage = {\n                  type: 'facebook_oauth_success',\n                  data: {\n                    isConnected: true,\n                    facebookUser: {\n                      id: '4098579607137444',\n                      name: 'Test User',\n                      email: 'test@example.com'\n                    }\n                  }\n                };\n\n                // Trigger the message handler directly\n                window.postMessage(testMessage, window.location.origin);\n                console.log('üß™ Test message sent:', testMessage);\n              }}\n              className=\"px-3 py-1 text-xs bg-purple-200 rounded hover:bg-purple-300\"\n            >\n              Test Message\n            </button>\n            <button\n              onClick={() => {\n                console.log('üß™ TESTING POPUP CALLBACK DIRECTLY');\n                // Open the popup callback URL directly to test if it works\n                const testUrl = 'http://localhost:5173/#/facebook/popup-callback?success=true&name=Test%20User&email=test@example.com&id=123456789';\n                window.open(testUrl, 'test_popup', 'width=600,height=700');\n                console.log('üß™ Opened test popup callback URL:', testUrl);\n              }}\n              className=\"px-3 py-1 text-xs bg-yellow-200 rounded hover:bg-yellow-300\"\n            >\n              Test Popup\n            </button>\n          </div> */}\n        </div>\n\n        <RadioGroup value={connectionType} onValueChange={(v: 'new' | 'existing') => setConnectionType(v)} className=\"space-y-3\">\n          <div className=\"flex items-center space-x-2\">\n            <RadioGroupItem value=\"new\" id=\"fb-new-connection\" />\n            <Label htmlFor=\"fb-new-connection\" className=\"text-sm font-medium\">Add New Connection</Label>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <RadioGroupItem value=\"existing\" id=\"fb-existing-connection\" />\n            <Label htmlFor=\"fb-existing-connection\" className=\"text-sm font-medium\">Select Existing Connection</Label>\n          </div>\n        </RadioGroup>\n\n        {connectionType === 'new' && (\n          <div className=\"space-y-2\">\n            <Label className=\"text-sm font-medium text-gray-900\">New Connection Name</Label>\n            <Input value={connectionName} onChange={(e) => setConnectionName(e.target.value)} placeholder=\"Facebook Lead Ads #1\" className=\"w-full h-12 border border-gray-300 rounded-lg\" />\n            <p className=\"text-xs text-gray-500\">Name your connection with Facebook Lead Ads account.</p>\n          </div>\n        )}\n\n        <div className=\"pt-4 space-y-2\">\n          <div className=\"flex items-center gap-3\">\n            {!status.isConnected ? (\n              <Button onClick={handleConnect} disabled={isConnecting} className=\"flex-1 h-12 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center justify-center gap-2\">\n                {isConnecting ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <span className=\"text-lg\">üìò</span>}\n                Connect With Facebook Lead Ads\n              </Button>\n            ) : (\n              <>\n                <Button onClick={handleConnect} disabled={isConnecting} className=\"flex-1 h-12 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center justify-center gap-2\">\n                  <span className=\"text-lg\">üìò</span>\n                  Connect With Facebook Lead Ads\n                </Button>\n                <div className=\"flex items-center justify-center w-12 h-12 bg-green-100 rounded-lg\">\n                  <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                  </svg>\n                </div>\n              </>\n            )}\n          </div>\n\n          {/* Disconnect option - only show when connected */}\n          {status.isConnected && (\n            <div className=\"flex justify-end\">\n              <Button\n                onClick={() => {\n                  if (webhookId) {\n                    localStorage.removeItem(`facebook_connected_${webhookId}`);\n                    localStorage.removeItem(`facebook_user_${webhookId}`);\n                  } else {\n                    sessionStorage.removeItem('temp_facebook_connected');\n                    sessionStorage.removeItem('temp_facebook_user');\n                  }\n                  setStatus({ isConnected: false });\n                  setPages([]);\n                  setLeadForms([]);\n                  setSelectedPageId('');\n                  setSelectedFormId('');\n                  onConnectionChange?.(false);\n                  toast.success('Facebook disconnected successfully');\n                }}\n                variant=\"outline\"\n                size=\"sm\"\n                className=\"text-xs text-red-600 hover:text-red-700 hover:bg-red-50\"\n              >\n                Disconnect\n              </Button>\n            </div>\n          )}\n\n          {/* Page and form selection hidden from sidebar - functionality preserved for backend */}\n          {/* The connection still loads pages and forms in the background for webhook functionality */}\n        </div>\n\n\n      </div>\n    </div>\n  );\n};\n\nexport default FacebookLeadAdsTrigger;\n","import React, { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { MessageSquare, Phone, Smartphone, Info, AlertCircle } from 'lucide-react';\nimport { toast } from 'sonner';\n\ninterface TextWebhookConfigProps {\n  initialConfig?: TextWebhookConfig;\n  onCancel: () => void;\n  onSave: (config: TextWebhookConfig) => void;\n}\n\nexport interface TextWebhookConfig {\n  messageTemplate: string;\n  fromPhoneNumber: string;\n  testPhoneNumber?: string;\n  enableNotifications: boolean;\n}\n\nconst TextWebhookConfig: React.FC<TextWebhookConfigProps> = ({\n  initialConfig,\n  onCancel,\n  onSave\n}) => {\n  const [config, setConfig] = useState<TextWebhookConfig>({\n    messageTemplate: initialConfig?.messageTemplate || 'New lead received from {name} ({email}) at {timestamp}',\n    fromPhoneNumber: initialConfig?.fromPhoneNumber || '+13462331126',\n    testPhoneNumber: initialConfig?.testPhoneNumber || '',\n    enableNotifications: initialConfig?.enableNotifications ?? true\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTesting, setIsTesting] = useState(false);\n\n  const handleSave = () => {\n    if (!config.messageTemplate.trim()) {\n      toast.error('Message template is required');\n      return;\n    }\n\n    if (!config.fromPhoneNumber.trim()) {\n      toast.error('From phone number is required');\n      return;\n    }\n\n    onSave(config);\n  };\n\n  const handleTestSMS = async () => {\n    if (!config.testPhoneNumber?.trim()) {\n      toast.error('Please enter a test phone number');\n      return;\n    }\n\n    setIsTesting(true);\n    try {\n      // This would call the backend test endpoint\n      const response = await fetch('/api/text-webhook/test', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          toPhoneNumber: config.testPhoneNumber,\n          message: config.messageTemplate,\n          fromPhoneNumber: config.fromPhoneNumber\n        })\n      });\n\n      const result = await response.json();\n      \n      if (result.success) {\n        toast.success('Test SMS sent successfully!');\n      } else {\n        toast.error(`Failed to send test SMS: ${result.error}`);\n      }\n    } catch (error) {\n      console.error('Error testing SMS:', error);\n      toast.error('Failed to send test SMS. Please try again.');\n    } finally {\n      setIsTesting(false);\n    }\n  };\n\n  const availablePlaceholders = [\n    { placeholder: '{name}', description: 'Contact name' },\n    { placeholder: '{email}', description: 'Contact email' },\n    { placeholder: '{phone}', description: 'Contact phone' },\n    { placeholder: '{company}', description: 'Company name' },\n    { placeholder: '{message}', description: 'Message content' },\n    { placeholder: '{timestamp}', description: 'Current timestamp' },\n    { placeholder: '{webhook_id}', description: 'Webhook ID' }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center gap-3\">\n        <div className=\"flex items-center justify-center w-10 h-10 bg-blue-100 rounded-lg\">\n          <Smartphone className=\"h-5 w-5 text-blue-600\" />\n        </div>\n        <div>\n          <h3 className=\"text-lg font-semibold text-gray-900\">Text Webhook Configuration</h3>\n          <p className=\"text-sm text-gray-600\">Configure SMS notifications for your webhook</p>\n        </div>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <MessageSquare className=\"h-5 w-5\" />\n            Message Template\n          </CardTitle>\n          <CardDescription>\n            Customize the SMS message that will be sent. Use placeholders to include dynamic data.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"messageTemplate\">Message Template</Label>\n            <Textarea\n              id=\"messageTemplate\"\n              placeholder=\"Enter your message template...\"\n              value={config.messageTemplate}\n              onChange={(e) => setConfig({ ...config, messageTemplate: e.target.value })}\n              rows={4}\n              className=\"font-mono text-sm\"\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label>Available Placeholders</Label>\n            <div className=\"flex flex-wrap gap-2\">\n              {availablePlaceholders.map((item) => (\n                <Badge\n                  key={item.placeholder}\n                  variant=\"outline\"\n                  className=\"cursor-pointer hover:bg-gray-100\"\n                  onClick={() => {\n                    const textarea = document.getElementById('messageTemplate') as HTMLTextAreaElement;\n                    if (textarea) {\n                      const start = textarea.selectionStart;\n                      const end = textarea.selectionEnd;\n                      const text = textarea.value;\n                      const before = text.substring(0, start);\n                      const after = text.substring(end);\n                      textarea.value = before + item.placeholder + after;\n                      textarea.focus();\n                      textarea.setSelectionRange(start + item.placeholder.length, start + item.placeholder.length);\n                      setConfig({ ...config, messageTemplate: textarea.value });\n                    }\n                  }}\n                >\n                  {item.placeholder}\n                  <span className=\"ml-1 text-xs text-gray-500\">({item.description})</span>\n                </Badge>\n              ))}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Phone className=\"h-5 w-5\" />\n            Phone Number Configuration\n          </CardTitle>\n          <CardDescription>\n            Configure the phone numbers for sending and testing SMS messages.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"fromPhoneNumber\">From Phone Number</Label>\n            <Input\n              id=\"fromPhoneNumber\"\n              type=\"tel\"\n              placeholder=\"+1234567890\"\n              value={config.fromPhoneNumber}\n              onChange={(e) => setConfig({ ...config, fromPhoneNumber: e.target.value })}\n            />\n            <p className=\"text-xs text-gray-500\">\n              This is the Twilio phone number that will send the SMS messages.\n            </p>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"testPhoneNumber\">Test Phone Number (Optional)</Label>\n            <Input\n              id=\"testPhoneNumber\"\n              type=\"tel\"\n              placeholder=\"+1234567890\"\n              value={config.testPhoneNumber}\n              onChange={(e) => setConfig({ ...config, testPhoneNumber: e.target.value })}\n            />\n            <p className=\"text-xs text-gray-500\">\n              Enter a phone number to test your SMS configuration.\n            </p>\n          </div>\n\n          {config.testPhoneNumber && (\n            <Button\n              onClick={handleTestSMS}\n              disabled={isTesting}\n              variant=\"outline\"\n              className=\"w-full\"\n            >\n              {isTesting ? 'Sending...' : 'Send Test SMS'}\n            </Button>\n          )}\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Info className=\"h-5 w-5\" />\n            How It Works\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3 text-sm text-gray-600\">\n            <div className=\"flex items-start gap-2\">\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0\"></div>\n              <p>When webhook data is received, the system will automatically extract phone numbers from the payload.</p>\n            </div>\n            <div className=\"flex items-start gap-2\">\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0\"></div>\n              <p>Your message template will be processed, replacing placeholders with actual data from the webhook.</p>\n            </div>\n            <div className=\"flex items-start gap-2\">\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0\"></div>\n              <p>An SMS will be sent to the extracted phone number using your configured Twilio account.</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      <div className=\"flex items-center gap-3 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n        <AlertCircle className=\"h-5 w-5 text-yellow-600 flex-shrink-0\" />\n        <div className=\"text-sm text-yellow-800\">\n          <p className=\"font-medium\">Important Note</p>\n          <p>Make sure your webhook data contains phone number fields (phone, mobile, cell, etc.) for this action to work properly.</p>\n        </div>\n      </div>\n\n      <div className=\"flex justify-end gap-3 pt-4 border-t\">\n        <Button variant=\"outline\" onClick={onCancel}>\n          Cancel\n        </Button>\n        <Button onClick={handleSave} disabled={isLoading}>\n          {isLoading ? 'Saving...' : 'Save Configuration'}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default TextWebhookConfig;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  Search,\n  Webhook,\n  Mail,\n  ChevronDown,\n  Loader2,\n  Plus,\n  MoreHorizontal,\n  ArrowLeft,\n  Database,\n  Trash2,\n  Facebook,\n  Megaphone,\n  Smartphone\n} from 'lucide-react';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport { Label } from '@/components/ui/label';\nimport { toast } from 'sonner';\nimport axiosInstance from '@/api/axios/axiosInstance';\nimport secureLocalStorage from 'react-secure-storage';\nimport { Sheet, SheetContent, SheetHeader, SheetTitle } from '@/components/ui/sheet';\nimport * as contactService from '@/api/services/contact/contactService';\nimport * as facebookService from '@/api/services/facebook/facebookService';\nimport * as gmailService from '@/api/services/gmail/gmailService';\nimport GmailOAuthModal from '@/components/GmailOAuthModal';\nimport { CampaignActionConfig, type CampaignActionConfigState } from './components/CampaignActionConfig';\nimport FacebookLeadAdsTrigger from './components/FacebookLeadAdsTrigger';\nimport TextWebhookConfig from '@/components/TextWebhookConfig';\nimport type { TextWebhookConfig as TextWebhookConfigType } from '@/components/TextWebhookConfig';\n\ninterface WebhookCreatorProps {\n  webhook?: any;\n  workflowName?: string;\n  onBack: () => void;\n  onSave: () => void;\n}\n\ninterface WebhookApp {\n  id: string;\n  name: string;\n  icon: (() => React.ReactElement) | string;\n  description: string;\n}\n\ninterface TriggerEvent {\n  id: string;\n  name: string;\n  description: string;\n}\n\ninterface ActionApp {\n  id: string;\n  name: string;\n  icon: (() => React.ReactElement) | string;\n  color: string;\n  description: string;\n  events?: ActionEvent[];\n}\n\ninterface ActionEvent {\n  id: string;\n  name: string;\n  description: string;\n}\n\ninterface ActionCard {\n  id: number;\n  isExpanded: boolean;\n  selectedApp: ActionApp | null;\n  selectedEvent: ActionEvent | null;\n  searchQuery: string;\n  isConnected: boolean;\n  selectedListId?: string;\n  gmailConfig?: GmailConfig;\n  campaignConfig?: CampaignActionConfigState;\n  textConfig?: TextWebhookConfigType;\n}\n\ninterface GmailConfig {\n  fromEmail: string;\n  to: string;\n  cc: string;\n  bcc: string;\n  subject: string;\n  body: string;\n  isHtml: boolean;\n  attachments: string[];\n  template: string;\n}\n\nconst WebhookCreator: React.FC<WebhookCreatorProps> = ({ webhook, workflowName, onBack, onSave }) => {\n  console.log('üîç WebhookCreator rendered with props:', { webhook: !!webhook, workflowName });\n  const [selectedTrigger, setSelectedTrigger] = useState<TriggerEvent | null>(null);\n  const [selectedApp, setSelectedApp] = useState<WebhookApp | null>(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [webhookUrl, setWebhookUrl] = useState('');\n  const [isTriggerExpanded, setIsTriggerExpanded] = useState(false); // Default expanded\n  const [actionCards, setActionCards] = useState<ActionCard[]>([]);\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [selectedCardForSidebar, setSelectedCardForSidebar] = useState<number | null>(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // Webhook capture states\n  const [isCapturing, setIsCapturing] = useState(false);\n  const [capturedData, setCapturedData] = useState<any>(null);\n\n  // Gmail OAuth states\n  const [gmailAuthStatus, setGmailAuthStatus] = useState<'disconnected' | 'connecting' | 'connected'>('disconnected');\n  const [isGmailModalOpen, setIsGmailModalOpen] = useState(false);\n  const [captureInterval, setCaptureInterval] = useState<NodeJS.Timeout | null>(null);\n  const [workflowTitle, setWorkflowTitle] = useState(workflowName || 'Untitled Workflow');\n\n\n  // Auto-save functionality\n  const [autoSaveInterval, setAutoSaveInterval] = useState<NodeJS.Timeout | null>(null);\n  const [isSaving, setIsSaving] = useState(false);\n\n  // Update workflow title when workflowName prop changes (e.g., after OAuth redirect)\n  useEffect(() => {\n    if (workflowName && workflowName !== workflowTitle) {\n      console.log('üîÑ Updating workflow title from prop:', workflowName);\n      setWorkflowTitle(workflowName);\n    }\n  }, [workflowName]);\n\n  // Persist workflow state to localStorage for OAuth redirects\n  useEffect(() => {\n    if (workflowTitle && workflowTitle !== 'Untitled Workflow') {\n      const workflowState = {\n        workflowTitle,\n        selectedTrigger,\n        selectedApp,\n        actionCards: actionCards.length > 0 ? actionCards : undefined,\n        timestamp: Date.now()\n      };\n      localStorage.setItem('webhook_creator_state', JSON.stringify(workflowState));\n    }\n  }, [workflowTitle, selectedTrigger, selectedApp, actionCards]);\n\n  // Restore workflow state from localStorage if available\n  useEffect(() => {\n    const savedState = localStorage.getItem('webhook_creator_state');\n    if (savedState && !webhook) { // Only restore if not editing existing webhook\n      try {\n        const state = JSON.parse(savedState);\n        // Only restore if saved within last 30 minutes (OAuth session)\n        if (Date.now() - state.timestamp < 30 * 60 * 1000) {\n          console.log('üîÑ Restoring workflow state from localStorage:', state);\n          if (state.selectedTrigger && !selectedTrigger) {\n            setSelectedTrigger(state.selectedTrigger);\n          }\n          if (state.selectedApp && !selectedApp) {\n            setSelectedApp(state.selectedApp);\n          }\n          if (state.actionCards && actionCards.length === 0) {\n            setActionCards(state.actionCards);\n          }\n        } else {\n          // Clean up old state\n          localStorage.removeItem('webhook_creator_state');\n        }\n      } catch (error) {\n        console.error('Error restoring workflow state:', error);\n        localStorage.removeItem('webhook_creator_state');\n      }\n    }\n  }, []);\n  const [workflowEnabled, setWorkflowEnabled] = useState(false); // Default to false (OFF)\n  const [showTriggerEvents, setShowTriggerEvents] = useState(false);\n  const [webhookCreated, setWebhookCreated] = useState(false); // Track if webhook is created in DB\n  const [availableLists, setAvailableLists] = useState<contactService.ContactList[]>([]);\n  const [capturedWebhookData, setCapturedWebhookData] = useState<any>(null); // Store captured webhook data for dynamic mapping\n\n  // Auto-save states\n  const [isEditMode, setIsEditMode] = useState(false); // Track if we're editing existing webhook\n  const [autoSaveTimeout, setAutoSaveTimeout] = useState<NodeJS.Timeout | null>(null);\n  const [lastSaved, setLastSaved] = useState<Date | null>(null);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const [triggerSidebarOpen, setTriggerSidebarOpen] = useState(false);\n\n  // Facebook connection states\n  const [facebookConnectionType, setFacebookConnectionType] = useState<'new' | 'existing'>('new');\n  const [facebookConnectionName, setFacebookConnectionName] = useState('Facebook Lead Ads #1');\n  const [facebookConnectionStatus, setFacebookConnectionStatus] = useState<facebookService.FacebookConnectionStatus>({ isConnected: false });\n  const [facebookPages, setFacebookPages] = useState<facebookService.FacebookPage[]>([]);\n  const [facebookLeadForms, setFacebookLeadForms] = useState<facebookService.FacebookLeadForm[]>([]);\n  const [selectedFacebookPage, setSelectedFacebookPage] = useState<string>('');\n  const [selectedLeadForm, setSelectedLeadForm] = useState<string>('');\n  const [isConnectingFacebook, setIsConnectingFacebook] = useState(false);\n\n  // List creation states\n  const [selectedList, setSelectedList] = useState<string>('');\n  const [isCreatingList, setIsCreatingList] = useState(false);\n  const [newListData, setNewListData] = useState({\n    listName: '',\n    description: '',\n    type: 'General'\n  });\n\n  // Available apps (webhook, Email Parser, Facebook Lead Ads)\n    const availableApps: WebhookApp[] = [\n      {\n        id: 'webhook',\n        name: 'Webhook',\n        icon: () => <Webhook className=\"h-8 w-8 text-purple-600\" />,\n        description: 'Receive HTTP requests from external services'\n      },\n      {\n        id: 'email-parser',\n        name: 'Email Parser (AI Cruitment)',\n        icon: () => <Mail className=\"h-8 w-8 text-pink-600\" />,\n        description: 'Parse emails sent to a unique email address'\n      },\n      {\n        id: 'facebook-lead-ads',\n        name: 'Facebook Lead Ads',\n        icon: () => <Facebook className=\"h-8 w-8 text-blue-600\" />,\n        description: 'Trigger when new leads are submitted on your Facebook Lead Ads forms'\n      }\n    ];\n\n  // Trigger events for webhook\n  const webhookTriggerEvents: TriggerEvent[] = [\n    {\n      id: 'catch-webhook',\n      name: 'Catch Webhook (Preferred)',\n      description: 'Triggers when a new POST, PUT or GET request is sent to the webhook URL.'\n    }\n    // {\n    //   id: 'catch-webhook-headers',\n    //   name: 'Catch Webhook with Headers',\n    //   description: 'Triggers when a new POST, PUT or GET request is sent to the webhook URL, providing the raw request body (up to 2 MB) along with headers.'\n    // },\n    // {\n    //   id: 'catch-webhook-file',\n    //   name: 'Catch Webhook with File Data',\n    //   description: 'Triggers when a new file is sent via POST request to the webhook URL.'\n    // }\n  ];\n\n  // Trigger events for Email Parser\n  const emailParserTriggerEvents: TriggerEvent[] = [\n    {\n      id: 'new-email-received',\n      name: 'New Email Received',\n      description: 'Triggers when a new email is sent to your unique email parser address.'\n    }\n  ];\n\n  // Trigger events for Facebook Lead Ads\n  const facebookLeadAdsTriggerEvents: TriggerEvent[] = [\n    {\n      id: 'facebook-lead-ads-new-lead',\n      name: 'New Lead Instant',\n      description: 'Triggers when a new lead is submitted to your selected Facebook Lead Ads form.'\n    }\n  ];\n\n  // Gmail is now an ACTION app only, no trigger events needed\n\n  // Get trigger events based on selected app\n    const getTriggerEvents = () => {\n      if (selectedApp?.id === 'email-parser') {\n        return emailParserTriggerEvents;\n      }\n      if (selectedApp?.id === 'facebook-lead-ads') {\n        return facebookLeadAdsTriggerEvents;\n      }\n      return webhookTriggerEvents;\n    };\n\n  // Action apps available for \"Do this\" cards\n  const actionApps: ActionApp[] = [\n    {\n      id: 'outbound-campaign',\n      name: 'Campaign',\n      icon: () => <Megaphone className=\"h-6 w-6 text-white\" />,\n      color: 'bg-indigo-600',\n      description: 'Create or launch an outbound calling campaign',\n      events: [\n        { id: 'create-campaign', name: 'Create Campaign', description: 'Create a new outbound campaign' },\n        // { id: 'launch-campaign', name: 'Launch Campaign', description: 'Launch an existing campaign' }\n      ]\n    },\n    {\n      id: 'gmail-service',\n      name: 'Gmail Service',\n      icon: () => <Mail className=\"h-6 w-6 text-white\" />,\n      color: 'bg-red-600',\n      description: 'Send emails and manage Gmail account',\n      events: [\n        { id: 'send-email', name: 'Send Email', description: 'Send an email using Gmail.' },\n        { id: 'create-draft', name: 'Create Draft', description: 'Create a draft email in Gmail.' },\n        { id: 'reply-to-email', name: 'Reply to Email', description: 'Reply to an existing email.' },\n        { id: 'forward-email', name: 'Forward Email', description: 'Forward an email to another recipient.' },\n        { id: 'add-label', name: 'Add Label to Email', description: 'Add a label to an email in Gmail.' },\n        { id: 'mark-as-read', name: 'Mark Email as Read', description: 'Mark an email as read in Gmail.' },\n        { id: 'mark-as-unread', name: 'Mark Email as Unread', description: 'Mark an email as unread in Gmail.' },\n        { id: 'archive-email', name: 'Archive Email', description: 'Archive an email in Gmail.' },\n        { id: 'delete-email', name: 'Delete Email', description: 'Delete an email from Gmail.' },\n        { id: 'search-emails', name: 'Search Emails', description: 'Search for emails in Gmail.' }\n      ]\n    },\n    {\n      id: 'lists',\n      name: 'Lists',\n      icon: 'üìã',\n      color: 'bg-green-600',\n      description: 'Manage contact lists and data',\n      events: [\n        { id: 'add-to-list', name: 'Add Contact to List', description: 'Add a new contact to a specific list.' },\n        { id: 'create-list', name: 'Create New List', description: 'Create a new contact list.' },\n        { id: 'update-contact', name: 'Update Contact', description: 'Update existing contact information.' },\n        { id: 'remove-from-list', name: 'Remove from List', description: 'Remove a contact from a list.' }\n      ]\n    },\n    {\n      id: 'text-webhook',\n      name: 'Text Webhook',\n      icon: () => <Smartphone className=\"h-6 w-6 text-white\" />,\n      color: 'bg-blue-600',\n      description: 'Send SMS notifications when webhook data is received',\n      events: [\n        { id: 'send-sms', name: 'Send SMS', description: 'Send an SMS notification to extracted phone numbers.' }\n      ]\n    }\n  ];\n\n\n\n  // Initialize component - don't auto-select webhook\n  useEffect(() => {\n    // Component initialization without auto-selection\n    loadFacebookConnectionStatus();\n    console.log('WebhookCreator initialized with workflow name:', workflowName);\n  }, [workflowName]);\n\n  // Load available lists from database\n  const loadAvailableLists = async () => {\n    try {\n      const response = await contactService.getAllContactLists();\n      if (response.success) {\n        setAvailableLists(response.data || []);\n      }\n    } catch (error) {\n      console.error('Error loading lists:', error);\n      setAvailableLists([]); // Set empty array on error to prevent undefined\n    }\n  };\n\n  // Create new list\n  const handleCreateList = async () => {\n    try {\n      if (!newListData.listName.trim() || !newListData.description.trim()) {\n        toast.error('Please fill in all required fields');\n        return;\n      }\n\n      const response = await contactService.createList({\n        listName: newListData.listName,\n        description: newListData.description,\n        type: newListData.type\n      });\n\n      if (response.success) {\n        // Reload lists to include the new one\n\n        await loadAvailableLists();\n\n        // Select the newly created list\n        setSelectedList(response.data.id.toString());\n\n        // Reset form and close creation mode\n        setNewListData({\n          listName: '',\n          description: '',\n          type: 'General'\n        });\n        setIsCreatingList(false);\n\n        toast.success('List created successfully!');\n      }\n    } catch (error) {\n      console.error('Error creating list:', error);\n      toast.error('Failed to create list');\n    }\n  };\n\n  // Load Facebook connection status\n  const loadFacebookConnectionStatus = async () => {\n    try {\n      console.log('üîç Loading Facebook connection status...', {\n        currentWebhookId,\n        isConnected: facebookConnectionStatus.isConnected,\n        hasWebhook: !!webhook\n      });\n\n      // For new webhook flows, don't load any connection status unless we already have Facebook data\n      if (!currentWebhookId && !facebookConnectionStatus.isConnected && !webhook) {\n        console.log('üÜï New webhook flow - not loading Facebook connection status');\n        setFacebookConnectionStatus({ isConnected: false });\n        setFacebookPages([]);\n        return;\n      }\n\n      // For existing webhooks, load webhook-specific connection status\n      const webhookId = currentWebhookId || (webhook && (webhook.webhook_id || webhook.id));\n      if (webhookId) {\n        console.log('üìã Loading Facebook status for webhook:', webhookId);\n        const status = await facebookService.getFacebookConnectionStatus(webhookId);\n        setFacebookConnectionStatus(status);\n\n        if (status.isConnected) {\n          // Load pages and forms if connected\n          const pages = await facebookService.getStoredFacebookPages();\n          setFacebookPages(pages);\n          console.log('‚úÖ Facebook connection loaded:', { status, pagesCount: pages.length });\n        }\n      }\n    } catch (error) {\n      console.error('Error loading Facebook connection status:', error);\n      setFacebookConnectionStatus({ isConnected: false });\n      setFacebookPages([]);\n    }\n  };\n\n  // Handle Facebook connection\n  const handleFacebookConnect = async () => {\n    try {\n      setIsConnectingFacebook(true);\n\n      if (facebookConnectionStatus.isConnected) {\n        // If already connected, just load the data\n        const pages = await facebookService.getFacebookPages();\n        setFacebookPages(pages);\n        toast.success('Facebook data loaded successfully!');\n      } else {\n        // Generate OAuth URL and redirect in a popup\n        const oauthUrl = await facebookService.generateFacebookOAuthUrl();\n        const popup = window.open(oauthUrl, 'fb_oauth', 'width=600,height=700');\n\n        // Listen for OAuth completion\n        const handleMessage = async (event: MessageEvent) => {\n          if (!event?.data || event.data.type !== 'facebook_oauth_success') return;\n          window.removeEventListener('message', handleMessage);\n          try {\n            // Reload connection status and pages after success\n            await loadFacebookConnectionStatus();\n            if (popup && !popup.closed) popup.close();\n            toast.success('Facebook authorized successfully');\n          } catch (e) {\n            console.error('Post-OAuth refresh failed', e);\n          }\n        };\n        window.addEventListener('message', handleMessage);\n        toast.info('Please complete Facebook authorization in the popup window');\n      }\n    } catch (error) {\n      console.error('Error connecting to Facebook:', error);\n      toast.error('Failed to connect to Facebook');\n    } finally {\n      setIsConnectingFacebook(false);\n    }\n  };\n\n  // Load lead forms for selected page\n  const loadLeadFormsForPage = async (pageId: string) => {\n    try {\n      const forms = await facebookService.getPageLeadForms(pageId);\n      setFacebookLeadForms(forms);\n    } catch (error) {\n      console.error('Error loading lead forms:', error);\n      setFacebookLeadForms([]);\n    }\n  };\n\n  // Handle Facebook page selection\n  const handleFacebookPageSelect = (pageId: string) => {\n    setSelectedFacebookPage(pageId);\n    if (pageId) {\n      loadLeadFormsForPage(pageId);\n    } else {\n      setFacebookLeadForms([]);\n    }\n    // Trigger auto-save to persist page selection\n    triggerAutoSave();\n  };\n\n  // Handle webhook app selection\n  const handleWebhookAppSelect = (app: WebhookApp) => {\n    setSelectedApp(app);\n    setShowTriggerEvents(true);\n  };\n\n  // Handle Email Parser app selection\n  const handleEmailParserAppSelect = (app: WebhookApp) => {\n    setSelectedApp(app);\n    setShowTriggerEvents(true);\n  };\n\n  const addActionCard = () => {\n    const newCard: ActionCard = {\n      id: Date.now(),\n      isExpanded: true,\n      selectedApp: null,\n      selectedEvent: null,\n      searchQuery: '',\n      isConnected: false\n    };\n    setActionCards([...actionCards, newCard]);\n    triggerAutoSave(); // Auto-save when adding action card\n  };\n\n  const updateActionCard = (cardId: number, updates: Partial<ActionCard>) => {\n    console.log('üîÑ updateActionCard called:', { cardId, updates });\n    setActionCards(cards => {\n      const updatedCards = cards.map(card =>\n        card.id === cardId ? { ...card, ...updates } : card\n      );\n      console.log('üìã Updated action cards:', updatedCards);\n      return updatedCards;\n    });\n    triggerAutoSave(); // Auto-save on action card updates\n  };\n\n  // Helper function to update Gmail config\n  const updateGmailConfig = (cardId: number, field: keyof GmailConfig, value: any) => {\n    const card = actionCards.find(c => c.id === cardId);\n    const currentConfig = card?.gmailConfig || {\n      fromEmail: '',\n      to: '',\n      cc: '',\n      bcc: '',\n      subject: '',\n      body: '',\n      isHtml: false,\n      attachments: [],\n      template: 'default'\n    };\n\n    updateActionCard(cardId, {\n      gmailConfig: {\n        ...currentConfig,\n        [field]: value\n      }\n    });\n  };\n\n  const removeActionCard = (cardId: number) => {\n    setActionCards(cards => cards.filter(card => card.id !== cardId));\n    triggerAutoSave(); // Auto-save when removing action card\n  };\n\n  const handleTriggerSelect = async (trigger: TriggerEvent) => {\n      setSelectedTrigger(trigger);\n      setIsLoading(true);\n\n      try {\n        if (selectedApp?.id === 'email-parser') {\n          // For Email Parser, generate a unique email address\n          const userId = Math.random().toString(36).substring(2, 8);\n          const emailAddress = `${userId}@aicruitment.com`;\n          setWebhookUrl(emailAddress);\n          toast.success('Email Parser address generated! Forward emails to this address to trigger the workflow.');\n        } else if (selectedApp?.id === 'webhook') {\n          // For webhook, generate webhook URL without storing to database\n          const baseUrl = import.meta.env.VITE_APP_BASE_URL || `${window.location.protocol}//${window.location.host}`;\n          const webhookId = Math.random().toString(36).substring(2, 15);\n          const generatedUrl = `${baseUrl}/api/webhook-data/capture/${webhookId}`;\n          setWebhookUrl(generatedUrl);\n          toast.success('Webhook URL generated! Toggle ON to activate and save to database.');\n        } else if (selectedApp?.id === 'facebook-lead-ads') {\n          // For Facebook Lead Ads, no URL generation required; show connect UI\n          setWebhookUrl('');\n          toast.info('Select event, then connect your Facebook Lead Ads.');\n\n          // Create webhook record immediately for Facebook Lead Ads\n          if (workflowTitle && workflowTitle.trim()) {\n            console.log('üîß Creating webhook record for Facebook Lead Ads with title:', workflowTitle);\n            await ensureWebhookRecord();\n          } else {\n            console.log('üîß No workflow title yet, webhook record will be created when title is entered');\n          }\n        }\n\n        // Auto-add first action card\n        addActionCard();\n\n        // üîÑ Start auto-save when trigger is selected\n        console.log('üîÑ Trigger selected, starting auto-save functionality');\n        setHasUnsavedChanges(true);\n        startAutoSave();\n        toast.success('üîÑ Auto-save started! Changes will be saved every second.');\n\n      } catch (error: any) {\n        console.error('Error handling trigger selection:', error);\n        toast.error('Failed to setup trigger');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n  const captureWebhookResponse = async () => {\n    if (!webhookUrl) return;\n\n    if (isCapturing) {\n      // Stop capturing\n      setIsCapturing(false);\n      if (captureInterval) {\n        clearInterval(captureInterval);\n        setCaptureInterval(null);\n      }\n      toast.info('Stopped capturing webhook responses');\n      return;\n    }\n\n    // Start capturing\n    setIsCapturing(true);\n    setCapturedData(null);\n    toast.info('Listening for webhook responses...');\n\n    // Extract webhook ID from URL\n    const webhookId = webhookUrl.split('/').pop();\n\n    // Poll for webhook logs every 2 seconds\n    const interval = setInterval(async () => {\n      try {\n        const response = await axiosInstance.get(`/api/webhook-data/capture/${webhookId}/history?limit=1`);\n\n        if (response.data.success && response.data.data && response.data.data.webhookData && response.data.data.webhookData.length > 0) {\n          const latestData = response.data.data.webhookData[0];\n\n          // Check if this is a new data entry (within last 60 seconds for better capture window)\n          const dataTime = new Date(latestData.created_at);\n          const now = new Date();\n          const timeDiff = (now.getTime() - dataTime.getTime()) / 1000;\n\n          if (timeDiff <= 60) {\n            // Extract the captured data\n            let capturedWebhookData = latestData.data;\n            if (typeof capturedWebhookData === 'string') {\n              try {\n                capturedWebhookData = JSON.parse(capturedWebhookData);\n              } catch (e) {\n                // Keep as string if parsing fails\n              }\n            }\n\n            setCapturedData(capturedWebhookData);\n            setIsCapturing(false);\n            clearInterval(interval);\n            setCaptureInterval(null);\n            toast.success('Webhook data captured successfully!');\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching webhook data:', error);\n      }\n    }, 2000);\n\n    setCaptureInterval(interval);\n\n    // Auto-stop after 60 seconds\n    setTimeout(() => {\n      if (isCapturing) {\n        setIsCapturing(false);\n        clearInterval(interval);\n        setCaptureInterval(null);\n        toast.warning('Capture timeout - no webhook response received');\n      }\n    }, 60000);\n  };\n\n  // Save webhook toggle state to database\n  const saveWebhookToggleState = async (enabled: boolean) => {\n    if (!webhookCreated) return;\n\n    try {\n      // Get webhook ID from existing webhook, current draft id, or extract from URL\n      const webhookId = webhook?.webhook_id || webhook?.id || currentWebhookId || (webhookUrl ? webhookUrl.split('/').pop() : '');\n\n      if (!webhookId) {\n        throw new Error('Webhook ID not found');\n      }\n\n      const updateData = {\n        name: workflowTitle,\n        description: selectedTrigger?.description || '',\n        trigger_event: selectedTrigger?.id,\n        trigger_app: selectedApp?.id || 'webhook',\n        url: webhookUrl,\n        isActive: enabled,\n        actionCards: actionCards.map(card => ({\n          id: card.id,\n          selectedApp: card.selectedApp,\n          selectedEvent: card.selectedEvent,\n          isConnected: card.isConnected,\n          selectedListId: card.selectedListId,\n          campaignConfig: card.campaignConfig,\n          textConfig: card.textConfig,\n          gmailConfig: card.gmailConfig\n        }))\n      };\n\n      const response = await axiosInstance.put(`/api/webhooks/${webhookId}`, updateData);\n\n      if (response.data.success) {\n        console.log(`Webhook ${enabled ? 'activated' : 'deactivated'} successfully`);\n      } else {\n        throw new Error(response.data.message || 'Failed to update webhook');\n      }\n    } catch (error: any) {\n      console.error('Error saving webhook toggle state:', error);\n      toast.error(error.response?.data?.message || 'Failed to save webhook state');\n    }\n  };\n\n  // Handle toggle functionality - create/activate webhook in database\n    const handleToggleWorkflow = async (enabled: boolean) => {\n      // For Facebook Lead Ads, allow activation without a webhookUrl\n      const canActivateWithoutUrl = selectedApp?.id === 'facebook-lead-ads';\n      if (enabled && !webhookCreated && selectedTrigger && (webhookUrl || canActivateWithoutUrl)) {\n        // If draft already exists, just toggle on instead of creating again\n        if (currentWebhookId) {\n          setWorkflowEnabled(true);\n          await saveWebhookToggleState(true);\n          toast.success('Webhook activated!');\n          return;\n        }\n        // Validate required fields\n        if (!workflowTitle || !workflowTitle.trim()) {\n          toast.error('Please enter a workflow name');\n          return;\n        }\n  \n        if (!selectedTrigger.id) {\n          toast.error('Please select a trigger event');\n          return;\n        }\n  \n        // Create webhook in database when toggled ON\n        setIsLoading(true);\n        try {\n          console.log('üîß Creating webhook with data:', {\n            name: workflowTitle,\n            trigger_event: selectedTrigger.id,\n            trigger_app: selectedApp?.id || 'webhook',\n            description: selectedTrigger.description,\n            url: webhookUrl\n          });\n\n          // Create webhook for regular webhooks and Email Parser\n          const response = await axiosInstance.post('/api/webhooks/create', {\n            name: workflowTitle || `Webhook - ${selectedTrigger.name}`,\n            trigger_event: selectedTrigger.id,\n            trigger_app: selectedApp?.id || 'webhook',\n            description: selectedTrigger.description,\n            url: webhookUrl, // Pass the existing URL so backend uses the same webhook ID\n            is_active: true\n          });\n\n          if (response.data.success) {\n            const webhookId = response.data.data.webhook_id;\n            setCurrentWebhookId(webhookId);\n            setWebhookCreated(true);\n            setWorkflowEnabled(true);\n\n            // Log the webhook data for debugging\n            if (response.data.data) {\n              console.log('‚úÖ Webhook created successfully:', response.data.data);\n              console.log('‚úÖ Webhook ID from response:', webhookId);\n            }\n\n            toast.success('Webhook activated and saved to database!');\n          } else {\n            throw new Error(response.data.message || 'Failed to create webhook');\n          }\n        } catch (error: any) {\n          console.error('Error creating webhook:', error);\n          const errorMessage = error.response?.data?.message || error.message || 'Failed to activate webhook';\n          toast.error(errorMessage);\n          return; // Don't change toggle state if creation failed\n        } finally {\n          setIsLoading(false);\n        }\n      } else if (enabled && webhookCreated) {\n        // Just toggle the state if webhook already exists\n        setWorkflowEnabled(true);\n        await saveWebhookToggleState(true); // Manually save toggle state\n        \n        // Gmail is now an action app only, no trigger setup needed\n        \n        toast.success('Webhook activated!');\n      } else {\n        // Toggle OFF\n        setWorkflowEnabled(false);\n        await saveWebhookToggleState(false); // Manually save toggle state\n        \n        // Gmail is now an action app only, no watch to stop\n        \n        toast.info('Webhook deactivated');\n      }\n    };\n\n  // Auto-save function with debouncing\n  const autoSaveWebhook = async () => {\n    // Allow autosave if we have or can create a draft id\n    if (!hasUnsavedChanges) return;\n\n    setIsSaving(true);\n    try {\n      // For new workflows, create a draft first\n      if (!webhook && !currentWebhookId) {\n        await ensureWebhookRecord();\n      }\n      const webhookId = (webhook && (webhook.webhook_id || webhook.id)) || currentWebhookId;\n      if (!webhookId) {\n        console.error('‚ùå No webhook ID available for auto-save');\n        return;\n      }\n\n      console.log('üíæ Auto-saving webhook:', webhookId);\n\n      // Prepare update data\n      const updateData = {\n        name: workflowTitle,\n        description: selectedTrigger?.description || '',\n        trigger_event: selectedTrigger?.id,\n        trigger_app: selectedApp?.id || 'webhook',\n        url: webhookUrl,\n        isActive: workflowEnabled,\n        actionCards: actionCards.map(card => ({\n          id: card.id,\n          selectedApp: card.selectedApp,\n          selectedEvent: card.selectedEvent,\n          isConnected: card.isConnected,\n          selectedListId: card.selectedListId,\n          campaignConfig: card.campaignConfig,\n          textConfig: card.textConfig,\n          gmailConfig: card.gmailConfig\n        })),\n        // Save Facebook connection data\n        facebookConnection: {\n          isConnected: facebookConnectionStatus.isConnected,\n          facebookUser: facebookConnectionStatus.facebookUser,\n          pages: facebookPages,\n          selectedPageId: selectedFacebookPage,\n          selectedLeadFormId: selectedLeadForm,\n          leadForms: facebookLeadForms\n        }\n      };\n\n      console.log('üì§ Sending auto-save data:', {\n        webhookId,\n        hasActionCards: updateData.actionCards?.length || 0,\n        hasFacebookConnection: !!updateData.facebookConnection,\n        facebookConnected: updateData.facebookConnection?.isConnected,\n        facebookPagesCount: updateData.facebookConnection?.pages?.length || 0\n      });\n\n      const response = await axiosInstance.put(`/api/webhooks/${webhookId}`, updateData);\n      if (response.data.success) {\n        setHasUnsavedChanges(false);\n        setLastSaved(new Date());\n        setIsEditMode(true);\n        console.log('‚úÖ Webhook auto-saved successfully');\n      } else {\n        console.error('‚ùå Auto-save failed - server returned error:', response.data);\n        throw new Error(response.data.message || 'Auto-save failed');\n      }\n    } catch (error) {\n      console.error('‚ùå Auto-save failed:', error);\n\n      // Retry auto-save after 5 seconds if it failed\n      setTimeout(() => {\n        if (hasUnsavedChanges) {\n          console.log('üîÑ Retrying auto-save...');\n          autoSaveWebhook();\n        }\n      }, 5000);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Start auto-save interval\n  const startAutoSave = () => {\n    console.log('üîÑ Starting auto-save every 1 second');\n    if (autoSaveInterval) {\n      clearInterval(autoSaveInterval);\n    }\n    const interval = setInterval(() => {\n      autoSaveWebhook();\n    }, 1000); // Save every 1 second\n    setAutoSaveInterval(interval);\n  };\n\n  // Stop auto-save interval\n  const stopAutoSave = () => {\n    console.log('‚èπÔ∏è Stopping auto-save');\n    if (autoSaveInterval) {\n      clearInterval(autoSaveInterval);\n      setAutoSaveInterval(null);\n    }\n  };\n\n  // Cleanup auto-save on unmount\n  useEffect(() => {\n    return () => {\n      if (autoSaveInterval) {\n        clearInterval(autoSaveInterval);\n      }\n    };\n  }, [autoSaveInterval]);\n\n  // Debounced auto-save trigger\n  const triggerAutoSave = async () => {\n    console.log('üîÑ triggerAutoSave called', {\n      hasWebhook: !!webhook,\n      currentWebhookId,\n      facebookConnected: facebookConnectionStatus.isConnected,\n      facebookPagesCount: facebookPages.length,\n      actionCardsCount: actionCards.length,\n      campaignCards: actionCards.filter(card => card.selectedApp?.id === 'outbound-campaign')\n    });\n\n    // For new workflows, attempt to create a draft before scheduling autosave\n    if (!webhook && !currentWebhookId) {\n      try {\n        console.log('üîß Creating webhook record before auto-save...');\n        await ensureWebhookRecord();\n      } catch (error) {\n        console.error('‚ùå Failed to ensure webhook record:', error);\n        return; // Don't proceed with auto-save if webhook creation failed\n      }\n    }\n    setHasUnsavedChanges(true);\n\n    // Clear existing timeout\n    if (autoSaveTimeout) {\n      clearTimeout(autoSaveTimeout);\n    }\n\n    // Set new timeout for auto-save (2 seconds delay)\n    const timeout = setTimeout(() => {\n      autoSaveWebhook();\n    }, 2000);\n\n    setAutoSaveTimeout(timeout);\n  };\n\n  const saveWebhook = () => {\n    toast.success('Webhook workflow saved successfully!');\n    onSave();\n  };\n\n  // Load existing webhook data if editing\n  useEffect(() => {\n    if (webhook) {\n      console.log('Loading existing webhook data:', webhook);\n\n      // Load existing webhook data for editing\n      setIsEditMode(true); // Enable auto-save for existing webhooks\n\n      // Handle trigger type from different possible field names\n      const triggerType = webhook.triggerType || webhook.trigger_type || webhook.events;\n      let triggerTypeId = null;\n\n      if (triggerType) {\n        // If events is a JSON string, parse it\n        if (typeof triggerType === 'string' && triggerType.startsWith('[')) {\n          try {\n            const parsedEvents = JSON.parse(triggerType);\n            triggerTypeId = parsedEvents[0];\n          } catch (error) {\n            triggerTypeId = triggerType;\n          }\n        } else {\n          triggerTypeId = triggerType;\n        }\n      }\n\n      // Determine webhook type based on trigger type\n            const isEmailParserWebhook = triggerTypeId && emailParserTriggerEvents.some(t => t.id === triggerTypeId);\n            const isFacebookLeadAdsWebhook = triggerTypeId && facebookLeadAdsTriggerEvents.some(t => t.id === triggerTypeId);\n            // Gmail is now an action app only, no longer a trigger\n      \n            if (isEmailParserWebhook) {\n              // Set Email Parser app as selected\n              setSelectedApp(availableApps.find(app => app.id === 'email-parser') || availableApps[1]);\n              const trigger = emailParserTriggerEvents.find(t => t.id === triggerTypeId);\n              console.log('Setting Email Parser trigger for existing webhook:', trigger || { id: triggerTypeId, name: triggerTypeId, description: '' });\n              setSelectedTrigger(trigger || { id: triggerTypeId, name: triggerTypeId, description: '' });\n            } else if (isFacebookLeadAdsWebhook) {\n              setSelectedApp(availableApps.find(app => app.id === 'facebook-lead-ads') || availableApps[2]);\n              const trigger = facebookLeadAdsTriggerEvents.find(t => t.id === triggerTypeId);\n              console.log('Setting Facebook Lead Ads trigger for existing webhook:', trigger || { id: triggerTypeId, name: triggerTypeId, description: '' });\n              setSelectedTrigger(trigger || { id: triggerTypeId, name: triggerTypeId, description: '' });\n            } else {\n              // Set webhook app as selected (default)\n              setSelectedApp(availableApps[0]);\n              const trigger = webhookTriggerEvents.find(t => t.id === triggerTypeId);\n              console.log('Setting webhook trigger for existing webhook:', trigger || { id: triggerTypeId, name: triggerTypeId, description: '' });\n              setSelectedTrigger(trigger || { id: triggerTypeId, name: triggerTypeId, description: '' });\n            }\n\n      setShowTriggerEvents(true);\n      setIsTriggerExpanded(true); // Expand trigger card for existing webhooks\n\n      setWebhookUrl(webhook.url || '');\n      setWebhookCreated(true); // Existing webhook is already in database\n      setWorkflowEnabled(webhook.status === 'active' || webhook.is_active || webhook.isActive); // Set toggle based on webhook status\n      setWorkflowTitle(webhook.name || 'Untitled Workflow');\n\n      // Load action cards if they exist in webhook metadata\n      if (webhook.metadata) {\n        try {\n          const metadata = typeof webhook.metadata === 'string' ? JSON.parse(webhook.metadata) : webhook.metadata;\n          if (metadata.actionCards && metadata.actionCards.length > 0) {\n            setActionCards(metadata.actionCards);\n          }\n\n          // Restore Facebook connection data if it exists\n          if (metadata.facebookConnection) {\n            console.log('üîÑ Restoring Facebook connection data from metadata:', metadata.facebookConnection);\n\n            // Use setTimeout to ensure state updates happen after component is fully mounted\n            setTimeout(() => {\n              setFacebookConnectionStatus({\n                isConnected: metadata.facebookConnection.isConnected || false,\n                facebookUser: metadata.facebookConnection.facebookUser\n              });\n\n              if (metadata.facebookConnection.pages) {\n                setFacebookPages(metadata.facebookConnection.pages);\n                console.log('‚úÖ Restored Facebook pages:', metadata.facebookConnection.pages.length);\n              }\n\n              if (metadata.facebookConnection.selectedPageId) {\n                setSelectedFacebookPage(metadata.facebookConnection.selectedPageId);\n                console.log('‚úÖ Restored selected page:', metadata.facebookConnection.selectedPageId);\n              }\n\n              if (metadata.facebookConnection.selectedLeadFormId) {\n                setSelectedLeadForm(metadata.facebookConnection.selectedLeadFormId);\n                console.log('‚úÖ Restored selected lead form:', metadata.facebookConnection.selectedLeadFormId);\n              }\n\n              if (metadata.facebookConnection.leadForms) {\n                setFacebookLeadForms(metadata.facebookConnection.leadForms);\n                console.log('‚úÖ Restored lead forms:', metadata.facebookConnection.leadForms.length);\n              }\n\n              console.log('üéâ Facebook connection restoration completed');\n            }, 100); // Small delay to ensure proper state sequencing\n          }\n        } catch (error) {\n          console.error('Error parsing webhook metadata:', error);\n        }\n      }\n\n      setLastSaved(new Date(webhook.updated_at || webhook.created_at));\n    } else {\n      setIsEditMode(false); // Disable auto-save for new webhooks\n      setIsTriggerExpanded(false); // Don't expand for new webhooks\n    }\n  }, [webhook]);\n\n  // Check Gmail connection status on component load (do not auto-mark cards)\n  useEffect(() => {\n    const checkGmailStatus = async () => {\n      try {\n        console.log('üîç Checking Gmail connection status...');\n        const response = await axiosInstance.get('/api/gmail/auth/status');\n        console.log('üìß Gmail status response:', response.data);\n\n        if (response.data.success && response.data.data.isConnected) {\n          console.log('‚úÖ Gmail account exists for user (global status)');\n          // Only set auth status; do not auto-mark action cards for new workflows\n          setGmailAuthStatus('connected');\n        } else {\n          console.log('‚ùå Gmail is not connected');\n          setGmailAuthStatus('disconnected');\n        }\n      } catch (error) {\n        console.error('Error checking Gmail status:', error);\n        setGmailAuthStatus('disconnected');\n      }\n    };\n\n    checkGmailStatus();\n  }, []); // Only run on component mount\n\n  // Do not auto-mark Gmail action cards as connected when cards change; connection is per-card\n\n  // Listen for popup OAuth completion messages\n  useEffect(() => {\n    const handleMessage = (event: MessageEvent) => {\n      // Verify origin for security - be more permissive for development\n      const allowedOrigins = [\n        window.location.origin,\n        import.meta.env.VITE_APP_BASE_URL || 'http://localhost:5001',\n        'http://localhost:5173',\n        'http://localhost:5174',\n        'https://ai.research-hero.com'\n      ];\n\n      // For development, also allow localhost origins\n      const isLocalhost = event.origin.includes('localhost') || event.origin === 'null';\n      const isAllowedOrigin = allowedOrigins.includes(event.origin) || isLocalhost;\n\n      if (!isAllowedOrigin) {\n        console.warn('üö´ Ignoring message from unauthorized origin:', event.origin);\n        return;\n      }\n\n      console.log('üì® Received popup message:', event.data);\n\n      if (event.data.type === 'GMAIL_AUTH_SUCCESS') {\n        console.log('üéâ Gmail OAuth success received from popup');\n        handleGmailOAuthSuccess(event.data.data);\n        setIsGmailModalOpen(false);\n        toast.success('Gmail connected successfully!');\n      } else if (event.data.type === 'GMAIL_AUTH_ERROR') {\n        console.error('‚ùå Gmail OAuth error received from popup:', event.data.message);\n        setGmailAuthStatus('disconnected');\n        setIsGmailModalOpen(false);\n        toast.error(`Gmail connection failed: ${event.data.message}`);\n      } else if (event.data.type === 'facebook_oauth_success') {\n        console.log('üéâ Facebook OAuth success received from popup');\n\n        const facebookUser = event.data.data?.facebookUser;\n        console.log('üë§ [WebhookCreator] Facebook user data:', facebookUser);\n\n        if (facebookUser) {\n          // Store in session storage for temporary use during webhook creation\n          console.log('üìù [WebhookCreator] Storing in session storage for webhook creation');\n          sessionStorage.setItem('temp_facebook_user', JSON.stringify(facebookUser));\n          sessionStorage.setItem('temp_facebook_connected', 'true');\n          console.log('‚úÖ [WebhookCreator] Session storage updated:', {\n            temp_facebook_connected: sessionStorage.getItem('temp_facebook_connected'),\n            temp_facebook_user: !!sessionStorage.getItem('temp_facebook_user')\n          });\n        }\n\n        // Update Facebook connection status immediately\n        setFacebookConnectionStatus({ isConnected: true, facebookUser });\n        console.log('‚úÖ Facebook connection status updated:', { isConnected: true, facebookUser });\n\n        // Reload Facebook connection status and pages after success\n        loadFacebookConnectionStatus().then(async () => {\n          toast.success('Facebook Lead Ads connected successfully!');\n          console.log('üîÑ Triggering auto-save after Facebook connection...');\n          // Trigger auto-save to persist Facebook connection data\n          await triggerAutoSave();\n          console.log('‚úÖ Auto-save triggered after Facebook connection');\n\n          // Wait a moment then verify the data was saved\n          setTimeout(async () => {\n            try {\n              const webhookId = currentWebhookId || (webhook && (webhook.webhook_id || webhook.id));\n              if (webhookId) {\n                console.log('üîç Verifying Facebook connection was saved...');\n                // Force reload to verify persistence\n                await loadFacebookConnectionStatus();\n              }\n            } catch (e) {\n              console.error('Failed to verify Facebook connection persistence:', e);\n            }\n          }, 3000);\n        }).catch((e) => {\n          console.error('Post-OAuth refresh failed', e);\n          toast.error('Failed to refresh Facebook connection status');\n        });\n      } else if (event.data.type === 'facebook_oauth_error') {\n        console.error('‚ùå Facebook OAuth error received from popup:', event.data.message);\n        toast.error(`Facebook connection failed: ${event.data.message || 'Unknown error'}`);\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, []);\n\n  // Handle Gmail OAuth callback parameters (professional redirect flow)\n  // Note: This is now primarily for backward compatibility since we use popup flow\n  useEffect(() => {\n    const gmailSuccess = searchParams.get('gmail_success');\n    const gmailError = searchParams.get('gmail_error');\n    const email = searchParams.get('email');\n    const cardId = searchParams.get('card_id');\n    const tempId = searchParams.get('tempId');\n    const returnToWorkflow = searchParams.get('return_to_workflow');\n\n    // Log all parameters for debugging\n    console.log('üîç Gmail OAuth callback parameters:', {\n      gmailSuccess,\n      gmailError,\n      email,\n      cardId,\n      tempId,\n      returnToWorkflow,\n      webhook: webhook?.id || webhook?.webhook_id,\n      actionCards: actionCards.length\n    });\n\n    if (gmailSuccess === 'true' && email) {\n      setGmailAuthStatus('connected');\n      toast.success(`Gmail account connected successfully! (${decodeURIComponent(email)})`);\n\n      // Prefer linking the connection to a specific card if provided\n      if (cardId) {\n        const cardIdNum = parseInt(cardId);\n        console.log('Updating specific Gmail card with ID:', cardIdNum);\n        setActionCards(prevCards =>\n          prevCards.map(card =>\n            card.id === cardIdNum && card.selectedApp?.id === 'gmail-service'\n              ? { ...card, isConnected: true }\n              : card\n          )\n        );\n        setIsGmailModalOpen(false);\n      } else {\n        // No specific card provided; do not auto-mark all cards for new workflows\n        console.log('No card ID found; leaving action cards unchanged');\n        setIsGmailModalOpen(false);\n      }\n\n      // Close sidebar if it was open\n      if (selectedCardForSidebar) {\n        setSidebarOpen(false);\n      }\n\n      // If we have a webhook, update it in the database with the new Gmail connection status\n      if (webhook && (webhook.webhook_id || webhook.id)) {\n        const webhookId = webhook.webhook_id || webhook.id;\n        console.log('Updating webhook in database with Gmail connection status:', webhookId);\n        \n        // Update the webhook with the new action cards state\n        const updateData = {\n          name: workflowTitle,\n          description: selectedTrigger?.description || '',\n          trigger_event: selectedTrigger?.id,\n          trigger_app: selectedApp?.id || 'webhook',\n          isActive: workflowEnabled,\n          metadata: JSON.stringify({\n            actionCards: actionCards.map(card => ({\n              id: card.id,\n              selectedApp: card.selectedApp,\n              selectedEvent: card.selectedEvent,\n              isConnected: card.selectedApp?.id === 'gmail-service' ? true : card.isConnected,\n              selectedListId: card.selectedListId,\n              campaignConfig: card.campaignConfig,\n              textConfig: card.textConfig,\n              gmailConfig: card.gmailConfig\n            }))\n          })\n        };\n        \n        axiosInstance.put(`/api/webhooks/${webhookId}`, updateData)\n          .then(response => {\n            console.log('‚úÖ Updated webhook with Gmail connection status:', response.data);\n          })\n          .catch(error => {\n            console.error('‚ùå Failed to update webhook with Gmail connection status:', error);\n          });\n      }\n\n      // Clear only Gmail-related URL parameters, keep workflow state\n      const newParams = new URLSearchParams(searchParams);\n      newParams.delete('gmail_success');\n      newParams.delete('gmail_error');\n      newParams.delete('email');\n      // Keep card_id and tempId for workflow state restoration\n      setSearchParams(newParams);\n    } else if (gmailError) {\n      const errorMessage = decodeURIComponent(gmailError);\n      setGmailAuthStatus('disconnected');\n      toast.error(`Gmail connection failed: ${errorMessage}`);\n\n      // If we have a specific card ID, only update that card\n      if (cardId) {\n        const cardIdNum = parseInt(cardId);\n        console.log('Updating specific Gmail card with ID:', cardIdNum);\n        setActionCards(prevCards =>\n          prevCards.map(card =>\n            card.id === cardIdNum && card.selectedApp?.id === 'gmail-service'\n              ? { ...card, isConnected: false }\n              : card\n          )\n        );\n      } else {\n        // No specific card provided; leave cards unchanged\n        console.log('No card ID found; leaving action cards unchanged');\n      }\n\n      // Clear only Gmail-related URL parameters, keep workflow state\n      const newParams = new URLSearchParams(searchParams);\n      newParams.delete('gmail_success');\n      newParams.delete('gmail_error');\n      newParams.delete('email');\n      // Keep card_id and tempId for workflow state restoration\n      setSearchParams(newParams);\n    }\n  }, [searchParams, setSearchParams, selectedCardForSidebar]);\n\n  // Note: Removed popup message listener since we're using same-tab redirect now\n\n  // Add default action cards for existing webhooks if none exist\n  useEffect(() => {\n    if (webhook && isEditMode && actionCards.length === 0) {\n      // Only add default card if metadata doesn't have action cards\n      let hasActionCardsInMetadata = false;\n      if (webhook.metadata) {\n        try {\n          const metadata = typeof webhook.metadata === 'string' ? JSON.parse(webhook.metadata) : webhook.metadata;\n          hasActionCardsInMetadata = metadata.actionCards && metadata.actionCards.length > 0;\n        } catch (e) {\n          hasActionCardsInMetadata = false;\n        }\n      }\n\n      // Only add default card if there are no action cards in metadata\n      if (!hasActionCardsInMetadata) {\n        const defaultCard: ActionCard = {\n          id: Date.now(),\n          isExpanded: true,\n          selectedApp: null,\n          selectedEvent: null,\n          searchQuery: '',\n          isConnected: false\n        };\n        setActionCards([defaultCard]);\n      }\n    }\n  }, [webhook, isEditMode]);\n\n  // Cleanup timeout and capture interval on unmount\n  useEffect(() => {\n    return () => {\n      if (autoSaveTimeout) {\n        clearTimeout(autoSaveTimeout);\n      }\n      if (captureInterval) {\n        clearInterval(captureInterval);\n      }\n    };\n  }, [autoSaveTimeout, captureInterval]);\n\n  // Gmail OAuth success handler\n  const handleGmailOAuthSuccess = async (data: any) => {\n    console.log('üéâ Gmail OAuth success in WebhookCreator:', data);\n    setGmailAuthStatus('connected');\n\n    // Re-check Gmail status from backend to ensure consistency\n    try {\n      const response = await axiosInstance.get('/api/gmail/auth/status');\n      if (response.data.success && response.data.data.isConnected) {\n        console.log('‚úÖ Gmail status confirmed from backend:', response.data.data);\n        // If a specific sidebar card is selected, mark only that card as connected\n        if (selectedCardForSidebar) {\n          setActionCards(prevCards => prevCards.map(card =>\n            card.id === selectedCardForSidebar && card.selectedApp?.id === 'gmail-service'\n              ? { ...card, isConnected: true }\n              : card\n          ));\n        }\n\n        // Trigger auto-save if in edit mode to persist the connection status\n        if (isEditMode) {\n          triggerAutoSave();\n        }\n      }\n    } catch (error) {\n      console.error('Error re-checking Gmail status:', error);\n    }\n\n    console.log('‚úÖ Gmail connection status updated successfully');\n  };\n\n  // Ensure a draft webhook exists in DB so autosave can update it\n  const [currentWebhookId, setCurrentWebhookId] = useState<string | number | null>(null);\n  const ensureWebhookRecord = async () => {\n    try {\n      console.log('üîß ensureWebhookRecord called with:', {\n        webhookCreated,\n        currentWebhookId,\n        workflowTitle,\n        selectedTrigger: selectedTrigger?.id,\n        selectedApp: selectedApp?.id,\n        webhookUrl\n      });\n\n      if (webhookCreated || currentWebhookId) {\n        console.log('üîß Webhook already exists, skipping creation');\n        return;\n      }\n      if (!workflowTitle || !workflowTitle.trim()) {\n        console.log('üîß No workflow title, skipping webhook creation');\n        return;\n      }\n      if (!selectedTrigger?.id) {\n        console.log('üîß No trigger selected, skipping webhook creation');\n        return;\n      }\n\n      // For Facebook Lead Ads, allow creating webhook record without URL initially\n      const isFacebookLeadAds = selectedApp?.id === 'facebook-lead-ads';\n      if (!webhookUrl && !isFacebookLeadAds) {\n        console.log('üîß No webhook URL and not Facebook Lead Ads, skipping webhook creation');\n        return;\n      }\n\n      const payload = {\n        name: workflowTitle,\n        trigger_event: selectedTrigger.id,\n        trigger_app: selectedApp?.id || 'webhook',\n        description: selectedTrigger.description,\n        url: webhookUrl || '', // Allow empty URL for Facebook Lead Ads initially\n        is_active: false,\n      };\n\n      console.log('üîß Creating webhook with payload:', payload);\n      const response = await axiosInstance.post('/api/webhooks', payload);\n      console.log('üîß Webhook creation response:', response.data);\n\n      if (response.data?.success) {\n        const createdId = response.data.data?.id || response.data.data?.webhook_id;\n        if (createdId) {\n          console.log('‚úÖ Webhook created successfully with ID:', createdId);\n          setCurrentWebhookId(createdId);\n          setWebhookCreated(true);\n          setIsEditMode(true);\n          setLastSaved(new Date());\n          console.log('‚úÖ Draft webhook created for autosave:', createdId);\n\n          // Transfer temporary Facebook connection to permanent storage\n          if (selectedApp?.id === 'facebook-lead-ads') {\n            const tempConnected = sessionStorage.getItem('temp_facebook_connected');\n            const tempUser = sessionStorage.getItem('temp_facebook_user');\n\n            if (tempConnected === 'true' && tempUser) {\n              localStorage.setItem(`facebook_connected_${createdId}`, 'true');\n              localStorage.setItem(`facebook_user_${createdId}`, tempUser);\n\n              // Keep temporary storage for now - it will be cleared when webhook is finalized\n              // sessionStorage.removeItem('temp_facebook_connected');\n              // sessionStorage.removeItem('temp_facebook_user');\n\n              console.log('‚úÖ Transferred temporary Facebook connection to webhook:', createdId);\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Failed to ensure webhook record (draft):', error);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-6xl mx-auto px-6 py-8\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-8\">\n          <div className=\"flex items-center gap-4\">\n            <Button\n              variant=\"ghost\"\n              onClick={() => {\n                // Clean up localStorage state when going back\n                localStorage.removeItem('webhook_creator_state');\n                onBack();\n              }}\n              className=\"h-10 px-3 rounded-lg hover:bg-white/50\"\n            >\n              <ArrowLeft className=\"h-4 w-4 mr-2\" />\n              Back\n            </Button>\n            <div>\n              <div className=\"flex items-center gap-3\">\n                <Input\n                  value={workflowTitle}\n                  onChange={(e) => {\n                    setWorkflowTitle(e.target.value);\n                    triggerAutoSave(); // Trigger auto-save on title change\n                  }}\n                  className=\"text-xl font-semibold border-none bg-transparent p-0 h-auto focus-visible:ring-0\"\n                />\n                {/* Auto-save status indicator */}\n                <div className=\"flex items-center gap-2\">\n                  {isSaving ? (\n                    <div className=\"flex items-center gap-1 text-xs text-blue-600\">\n                      <div className=\"w-2 h-2 bg-blue-500 rounded-full animate-pulse\"></div>\n                      <span>Saving...</span>\n                    </div>\n                  ) : autoSaveInterval ? (\n                    <div className=\"flex items-center gap-1 text-xs text-green-600\">\n                      <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n                      <span>Auto-save ON</span>\n                    </div>\n                  ) : lastSaved ? (\n                    <div className=\"flex items-center gap-1 text-xs text-gray-600\">\n                      <div className=\"w-2 h-2 bg-gray-500 rounded-full\"></div>\n                      <span>Saved {lastSaved.toLocaleTimeString()}</span>\n                    </div>\n                  ) : null}\n                </div>\n                <MoreHorizontal className=\"h-5 w-5 text-gray-400\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex items-center gap-4\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm text-gray-600\">OFF</span>\n              <div\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors cursor-pointer ${\n                  workflowEnabled ? 'bg-blue-600' : 'bg-gray-300'\n                } ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\n                onClick={() => {\n                  if (!isLoading) {\n                    if (!selectedTrigger && !workflowEnabled) {\n                      toast.error('Please select a trigger event first');\n                      return;\n                    }\n                    if (!workflowTitle.trim() && !workflowEnabled) {\n                      toast.error('Please enter a workflow name first');\n                      return;\n                    }\n                    handleToggleWorkflow(!workflowEnabled);\n                  }\n                }}\n              >\n                <span\n                  className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                    workflowEnabled ? 'translate-x-6' : 'translate-x-1'\n                  }`}\n                />\n              </div>\n              <span className=\"text-sm text-blue-600 font-medium\">ON</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Workflow Cards */}\n        <div className=\"space-y-6\">\n          {/* Trigger Card */}\n          <div className=\"bg-white rounded-2xl border border-gray-200 shadow-sm\">\n            <div\n              className={`p-6 cursor-pointer transition-all duration-200 ${isTriggerExpanded ? 'border-b border-gray-200' : ''}`}\n              onClick={() => setIsTriggerExpanded(!isTriggerExpanded)}\n            >\n              <div className=\"flex items-center gap-4\">\n                <div className=\"flex items-center justify-center w-12 h-12 bg-purple-100 rounded-xl\">\n                  <Webhook className=\"h-6 w-6 text-purple-600\" />\n                </div>\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center gap-2 mb-1\">\n                    <span className=\"text-sm text-gray-500\">Trigger : When this happens ...</span>\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900\">\n                    1. Choose Your First Application : Trigger\n                  </h3>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Badge variant=\"secondary\" className=\"bg-green-100 text-green-700 hover:bg-green-100\">\n                    Free Task\n                  </Badge>\n                  {/* Disabled 3-dots menu for trigger card */}\n                  <div className=\"h-5 w-5 text-gray-300 cursor-not-allowed\" title=\"Trigger card cannot be deleted\">\n                    <MoreHorizontal className=\"h-5 w-5\" />\n                  </div>\n                  <ChevronDown className={`h-5 w-5 text-gray-400 transition-transform ${isTriggerExpanded ? 'rotate-180' : ''}`} />\n                </div>\n              </div>\n            </div>\n\n            {isTriggerExpanded && (\n              <div className=\"p-6 space-y-6\">\n                {/* Choose App Section */}\n                <div className=\"space-y-4\">\n                  <h4 className=\"text-lg font-semibold text-gray-900\">Choose App</h4>\n\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                    <Input\n                      placeholder=\"Search apps or type / and describe your task...\"\n                      value={searchQuery}\n                      onChange={(e) => setSearchQuery(e.target.value)}\n                      className=\"pl-12 h-12 border border-gray-300 rounded-lg focus:border-blue-500 focus:ring-1 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  {/* Apps Grid */}\n                                    <div className=\"grid grid-cols-7 gap-4\">\n                                      <div\n                                        className={`flex flex-col items-center p-4 border rounded-lg cursor-pointer transition-all ${\n                                          selectedApp?.id === 'webhook'\n                                            ? 'border-purple-500 bg-purple-50'\n                                            : 'border-gray-200 hover:border-purple-300 hover:bg-purple-50'\n                                        }`}\n                                        onClick={() => handleWebhookAppSelect(availableApps[0])}\n                                      >\n                                        <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mb-2\">\n                                          {typeof availableApps[0]?.icon === 'string' ? (\n                                            <span className=\"text-lg\">{availableApps[0].icon}</span>\n                                          ) : typeof availableApps[0]?.icon === 'function' ? (\n                                            availableApps[0].icon()\n                                          ) : (\n                                            <Webhook className=\"h-6 w-6 text-purple-600\" />\n                                          )}\n                                        </div>\n                                        <span className=\"text-sm font-medium text-center\">Webhook</span>\n                                      </div>\n                  \n                                      {/* <div\n                                        className={`flex flex-col items-center p-4 border rounded-lg cursor-pointer transition-all ${\n                                          selectedApp?.id === 'email-parser'\n                                            ? 'border-pink-500 bg-pink-50'\n                                            : 'border-gray-200 hover:border-pink-300 hover:bg-pink-50'\n                                        }`}\n                                        onClick={() => handleEmailParserAppSelect(availableApps[1])}\n                                      >\n                                        <div className=\"w-12 h-12 bg-pink-100 rounded-lg flex items-center justify-center mb-2\">\n                                          {typeof availableApps[1]?.icon === 'string' ? (\n                                            <span className=\"text-lg\">{availableApps[1].icon}</span>\n                                          ) : typeof availableApps[1]?.icon === 'function' ? (\n                                            availableApps[1].icon()\n                                          ) : (\n                                            <Mail className=\"h-6 w-6 text-pink-600\" />\n                                          )}\n                                        </div>\n                                        <span className=\"text-sm font-medium text-center\">Email Parser</span>\n                                      </div> */}\n\n                                      <div\n                                        className={`flex flex-col items-center p-4 border rounded-lg cursor-pointer transition-all ${\n                                          selectedApp?.id === 'facebook-lead-ads'\n                                            ? 'border-blue-500 bg-blue-50'\n                                            : 'border-gray-200 hover:border-blue-300 hover:bg-blue-50'\n                                        }`}\n                                        onClick={() => handleWebhookAppSelect(availableApps[2])}\n                                      >\n                                        <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-2\">\n                                          {typeof availableApps[2]?.icon === 'string' ? (\n                                            <span className=\"text-lg\">{availableApps[2].icon}</span>\n                                          ) : typeof availableApps[2]?.icon === 'function' ? (\n                                            availableApps[2].icon()\n                                          ) : (\n                                            <Facebook className=\"h-6 w-6 text-blue-600\" />\n                                          )}\n                                        </div>\n                                        <span className=\"text-sm font-medium text-center\">Facebook Lead Ads</span>\n                                      </div>\n                                      \n                                      {/* Gmail is now an action app only, removed from triggers */}\n                  \n                                      {/* Other app placeholders */}\n                                      {/* {[\n                                       \n                                        { name: 'Schedule\\n', icon: 'üìÖ', color: 'bg-green-100', textColor: 'text-green-600' },\n                                        { name: '123FormBuilder', icon: 'üìù', color: 'bg-yellow-100', textColor: 'text-yellow-600' },\n                                        { name: '360 Dialog\\n(Cloud)', icon: 'üí¨', color: 'bg-red-100', textColor: 'text-red-600' },\n                                      \n                                        { name: '3veta', icon: 'üéØ', color: 'bg-indigo-100', textColor: 'text-indigo-600' }\n                                      ].map((app, index) => (\n                                        <div key={index} className=\"flex flex-col items-center p-4 border border-gray-200 rounded-lg hover:border-gray-300 cursor-pointer transition-all opacity-50\">\n                                          <div className={`w-12 h-12 ${app.color} rounded-lg flex items-center justify-center mb-2`}>\n                                            {typeof app.icon === 'string' ? (\n                                              <span className=\"text-lg\">{app.icon}</span>\n                                            ) : app.icon ? (\n                                              React.cloneElement(app.icon, { className: \"h-6 w-6\" })\n                                            ) : (\n                                              <div className=\"h-6 w-6 bg-gray-400 rounded\"></div>\n                                            )}\n                                          </div>\n                                          <span className=\"text-sm font-medium text-center whitespace-pre-line\">{app.name}</span>\n                                        </div>\n                                      ))} */}\n                                    </div>\n                </div>\n\n                {/* Trigger Event Section */}\n                                {/* {selectedApp && (selectedApp.id === 'webhook' || selectedApp.id === 'facebook-lead-ads') && (\n                                  <div className=\"space-y-4 border-t pt-6\">\n                                    <div>\n                                      <label className=\"block text-sm font-medium text-gray-900 mb-2\">Trigger Event</label>\n                                      <Select value={selectedTrigger?.id} onValueChange={(value) => {\n                                        const trigger = getTriggerEvents().find(t => t.id === value);\n                                        if (trigger) {\n                                          setSelectedTrigger(trigger);\n                                          handleTriggerSelect(trigger);\n                                        }\n                                      }}>\n                                        <SelectTrigger className=\"w-full h-12 border border-gray-300 rounded-lg\">\n                                          <SelectValue placeholder=\"Search & select\" />\n                                        </SelectTrigger>\n                                        <SelectContent>\n                                          {getTriggerEvents().map((trigger) => (\n                                            <SelectItem key={trigger.id} value={trigger.id} className=\"p-3\">\n                                              <div>\n                                                <div className=\"font-medium\">{trigger.name}</div>\n                                                <div className=\"text-sm text-gray-500 mt-1\">{trigger.description}</div>\n                                              </div>\n                                            </SelectItem>\n                                          ))}\n                                        </SelectContent>\n                                      </Select>\n                                    </div>\n                                  </div>\n                                )} */}\n\n{selectedApp && (selectedApp.id === 'webhook' || selectedApp.id === 'facebook-lead-ads') && (\n  <div className=\"space-y-4 border-t pt-6\">\n    <div>\n      <label className=\"block text-sm font-semibold text-gray-800 mb-2\">\n        Trigger Event\n      </label>\n      <Select\n        value={selectedTrigger?.id}\n        onValueChange={(value) => {\n          const trigger = getTriggerEvents().find((t) => t.id === value);\n          if (trigger) {\n            setSelectedTrigger(trigger);\n            handleTriggerSelect(trigger);\n          }\n        }}\n      >\n        {/* Trigger */}\n        <SelectTrigger className=\"w-full h-12 px-4 rounded-md border border-gray-300 bg-white text-sm text-gray-900 font-medium shadow-sm hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-blue-600 transition\">\n          <SelectValue placeholder=\"Select a trigger event\" />\n        </SelectTrigger>\n\n        {/* Dropdown */}\n        <SelectContent className=\"rounded-md border border-gray-200 bg-white shadow-lg max-h-72 overflow-y-auto\">\n          {getTriggerEvents().map((trigger) => (\n            <SelectItem\n              key={trigger.id}\n              value={trigger.id}\n              className=\"p-3 cursor-pointer hover:bg-blue-50 focus:bg-blue-50 rounded-sm transition\"\n            >\n              <div className=\"flex flex-col\">\n                <span className=\"text-sm font-medium text-gray-900\">\n                  {trigger.name}\n                </span>\n                <span className=\"text-xs text-gray-500\">{trigger.description}</span>\n              </div>\n            </SelectItem>\n          ))}\n        </SelectContent>\n      </Select>\n    </div>\n  </div>\n)}\n\n\n\n\n\n                {/* Facebook Lead Ads Trigger Config */}\n                {selectedTrigger && selectedApp?.id === 'facebook-lead-ads' && (\n                  <div className=\"space-y-4 border-t pt-6\">\n                    <div className=\"flex items-center gap-2 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n                      <div className=\"w-2 h-2 rounded-full bg-blue-500\"></div>\n                      <span className=\"text-sm text-blue-800\">Select event then connect your Facebook Lead Ads account to complete setup.</span>\n                    </div>\n                    <div className=\"flex items-center gap-3\">\n                      <Button\n                        onClick={() => {\n                          // Check if webhook flow is enabled using the state variable\n                          console.log('üîç Main Connect button - Webhook toggle check:', { workflowEnabled });\n\n                          if (!workflowEnabled) {\n                            // Show message to turn on webhook flow first\n                            toast.error('First ON the Toggle');\n                            return;\n                          }\n\n                          // If toggle is ON, open the sidebar\n                          setTriggerSidebarOpen(true);\n                        }}\n                        className=\"flex-1 h-12 bg-blue-600 hover:bg-blue-700 text-white rounded-lg\"\n                      >\n                        Connect\n                      </Button>\n                      {facebookConnectionStatus.isConnected && (\n                        <div className=\"flex items-center justify-center w-12 h-12 bg-green-100 rounded-lg\">\n                          <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                          </svg>\n                        </div>\n                      )}\n                    </div>\n\n                    {/* Connection Status and Form Selection */}\n                    {facebookConnectionStatus.isConnected && (\n                      <div className=\"space-y-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\n                        <div className=\"flex items-center gap-2\">\n                          <div className=\"w-2 h-2 rounded-full bg-green-500\"></div>\n                          <span className=\"text-sm font-medium text-green-800\">\n                            Connected as {facebookConnectionStatus.facebookUser?.name || 'Facebook User'}\n                          </span>\n                        </div>\n\n                        {/* Page Selection */}\n                        {facebookPages.length > 0 && (\n                          <div className=\"space-y-2\">\n                            <Label className=\"text-sm font-medium text-gray-700\">Select Facebook Page</Label>\n                            <select\n                              value={selectedFacebookPage}\n                              onChange={(e) => handleFacebookPageSelect(e.target.value)}\n                              className=\"w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                            >\n                              <option value=\"\">Choose a page...</option>\n                              {facebookPages.map((page) => (\n                                <option key={page.id} value={page.id}>\n                                  {page.name}\n                                </option>\n                              ))}\n                            </select>\n                          </div>\n                        )}\n\n                        {/* Lead Form Selection */}\n                        {selectedFacebookPage && facebookLeadForms.length > 0 && (\n                          <div className=\"space-y-2\">\n                            <Label className=\"text-sm font-medium text-gray-700\">Select Lead Form</Label>\n                            <select\n                              value={selectedLeadForm}\n                              onChange={(e) => {\n                                setSelectedLeadForm(e.target.value);\n                                triggerAutoSave(); // Trigger auto-save to persist lead form selection\n                              }}\n                              className=\"w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                            >\n                              <option value=\"\">Choose a lead form...</option>\n                              {facebookLeadForms.map((form) => (\n                                <option key={form.id} value={form.id}>\n                                  {form.name}\n                                </option>\n                              ))}\n                            </select>\n                          </div>\n                        )}\n\n                        {selectedFacebookPage && facebookLeadForms.length === 0 && (\n                          <div className=\"text-sm text-gray-600\">\n                            No lead forms found for this page.\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                {/* Email Parser Address Section */}\n                {selectedTrigger && selectedApp?.id === 'email-parser' && (\n                  <div className=\"space-y-4 border-t pt-6\">\n                    <div>\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <label className=\"block text-sm font-medium text-gray-900\">Email Parser Address</label>\n                        <div className=\"flex items-center gap-2\">\n                          <div className={`w-2 h-2 rounded-full ${webhookCreated ? 'bg-green-500' : 'bg-yellow-500'}`}></div>\n                          <span className={`text-xs font-medium ${webhookCreated ? 'text-green-700' : 'text-yellow-700'}`}>\n                            {webhookCreated ? 'Active' : 'Toggle ON to Activate'}\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <Input\n                          value={webhookUrl || 'Select a trigger event to generate email address...'}\n                          readOnly\n                          className=\"flex-1 h-12 border border-gray-300 rounded-lg bg-gray-50 font-mono text-sm\"\n                        />\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => {\n                            if (webhookUrl) {\n                              navigator.clipboard.writeText(webhookUrl);\n                              toast.success('Email address copied to clipboard!');\n                            } else {\n                              toast.error('Please select a trigger event first');\n                            }\n                          }}\n                          className=\"h-12 px-4 bg-blue-600 text-white hover:bg-blue-700\"\n                        >\n                          Copy\n                        </Button>\n                      </div>\n                      <div className=\"mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n                        <p className=\"text-sm text-blue-800 mb-2\">\n                          You need to send or forward the email to the above-mentioned email parser address and we will fetch all the details from that email.\n                        </p>\n                        <div className=\"bg-blue-100 border-l-4 border-blue-500 p-3 mt-3\">\n                          <p className=\"text-sm text-blue-700 font-medium\">Important Note:</p>\n                          <p className=\"text-sm text-blue-700 mt-1\">\n                            Please note that we can fetch attachments up to 5MB, and each workflow has a unique Email Parser address.\n                            Attachments will be stored for 48 hours. You can also use the Text Formatter &gt; Text Parser Module to extract specific\n                            text from the email body.\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"mt-4 flex items-center gap-2\">\n                        <span className=\"text-sm text-gray-600\">Simple Response</span>\n                        <div className=\"relative inline-block w-12 h-6\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"sr-only\"\n                            checked={true}\n                            readOnly\n                          />\n                          <div className=\"block bg-blue-600 w-12 h-6 rounded-full\"></div>\n                          <div className=\"dot absolute left-1 top-1 bg-white w-4 h-4 rounded-full transition transform translate-x-6\"></div>\n                        </div>\n                      </div>\n                      <Button\n                        variant=\"outline\"\n                        className=\"mt-4 w-full h-12 border-2 border-blue-600 text-blue-600 hover:bg-blue-50\"\n                      >\n                        Capture Email Parser Response\n                      </Button>\n                    </div>\n                  </div>\n                )}\n\n                {/* Webhook URL Section */}\n                                {selectedTrigger && selectedApp?.id === 'webhook' && (\n                                  <div className=\"space-y-4 border-t pt-6\">\n                                    <div>\n                                      <div className=\"flex items-center justify-between mb-2\">\n                                        <label className=\"block text-sm font-medium text-gray-900\">Webhook URL</label>\n                                        <div className=\"flex items-center gap-2\">\n                                          <div className={`w-2 h-2 rounded-full ${webhookCreated ? 'bg-green-500' : 'bg-yellow-500'}`}></div>\n                                          <span className={`text-xs font-medium ${webhookCreated ? 'text-green-700' : 'text-yellow-700'}`}>\n                                            {webhookCreated ? 'Active in Database' : 'Not Saved - Toggle ON to Activate'}\n                                          </span>\n                                        </div>\n                                      </div>\n                                      <div className=\"flex items-center gap-2\">\n                                        <Input\n                                          value={webhookUrl || 'Select a trigger event to generate webhook URL...'}\n                                          readOnly\n                                          className=\"flex-1 h-12 border border-gray-300 rounded-lg bg-gray-50 font-mono text-sm\"\n                                        />\n                                        <Button\n                                          variant=\"outline\"\n                                          size=\"sm\"\n                                          onClick={() => {\n                                            if (webhookUrl) {\n                                              navigator.clipboard.writeText(webhookUrl);\n                                              toast.success('Webhook URL copied to clipboard!');\n                                            } else {\n                                              toast.error('Please select a trigger event first');\n                                            }\n                                          }}\n                                          disabled={!webhookUrl}\n                                          className=\"h-12 px-4 bg-blue-600 text-white hover:bg-blue-700 border-blue-600 disabled:bg-gray-400\"\n                                        >\n                                          Copy\n                                        </Button>\n                                        <Button\n                                          variant=\"outline\"\n                                          size=\"sm\"\n                                          onClick={async () => {\n                                            if (!webhookUrl) {\n                                              toast.error('Please select a trigger event first');\n                                              return;\n                                            }\n                \n                                            try {\n                                              const webhookId = webhookUrl.split('/').pop();\n                                              const response = await axiosInstance.post(`/api/webhook-data/test/${webhookId}`);\n                \n                                              if (response.data.success) {\n                                                toast.success('Test webhook sent successfully! Check your Gmail for the test email.');\n                                              } else {\n                                                toast.error('Failed to send test webhook');\n                                              }\n                                            } catch (error: any) {\n                                              console.error('Test webhook error:', error);\n                                              toast.error(error.response?.data?.message || 'Failed to send test webhook');\n                                            }\n                                          }}\n                                          disabled={!webhookUrl || !webhookCreated}\n                                          className=\"h-12 px-4 bg-green-600 text-white hover:bg-green-700 border-green-600 disabled:bg-gray-400\"\n                                        >\n                                          Test\n                                        </Button>\n                                      </div>\n                                    </div>\n                \n                                    <div className=\"space-y-3\">\n                                      <p className=\"text-sm font-medium text-gray-900\">Follow the steps below:</p>\n                                      <ul className=\"space-y-2 text-sm text-gray-600\">\n                                        <li>‚Ä¢ Log in to the application where you want to enter the webhook URL.</li>\n                                        <li>‚Ä¢ Copy the webhook URL and add it under the webhook section of the application.</li>\n                                        <li>‚Ä¢ Click on the below \"Capture Webhook Response\" button and do a test record so that the webhook response can be captured here.</li>\n                                      </ul>\n                \n                                      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                                        <p className=\"text-sm text-blue-800 font-medium\">Important Note:</p>\n                                        <p className=\"text-sm text-blue-700 mt-1\">\n                                          The webhook URL is unique for every workflow. Toggle the workflow ON to activate and save it to the database. Only active webhooks will receive and process incoming requests.\n                                        </p>\n                                      </div>\n                \n                                      <div className=\"flex items-center gap-3\">\n                                        <span className=\"text-sm text-gray-700\">Simple Response</span>\n                                        <div className=\"relative inline-flex h-6 w-11 items-center rounded-full bg-blue-600\">\n                                          <span className=\"inline-block h-4 w-4 transform rounded-full bg-white translate-x-6\" />\n                                        </div>\n                                      </div>\n                \n                                      <Button\n                                        onClick={captureWebhookResponse}\n                                        disabled={!webhookUrl}\n                                        className=\"w-full h-12 bg-blue-600 hover:bg-blue-700 text-white rounded-lg disabled:bg-gray-400\"\n                                      >\n                                        {isCapturing ? (\n                                          <Loader2 className=\"h-4 w-4 animate-spin mr-2\" />\n                                        ) : null}\n                                        {isCapturing ? 'Stop Capturing' : 'Capture Webhook Response'}\n                                      </Button>\n                \n                                      {/* Captured Data Display */}\n                                      {capturedData && (\n                                        <div className=\"mt-6 space-y-4\">\n                                          <div className=\"flex items-center justify-between\">\n                                            <div>\n                                              <h4 className=\"text-lg font-semibold text-gray-900\">Captured Webhook Data</h4>\n                                              <p className=\"text-sm text-gray-500\">Data received at {new Date().toLocaleString()}</p>\n                                            </div>\n                                            <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\n                                              ‚úì Captured\n                                            </Badge>\n                                          </div>\n                \n                                          <div className=\"bg-gray-50 rounded-lg border border-gray-200 overflow-hidden\">\n                                            <div className=\"bg-gray-100 px-4 py-2 border-b border-gray-200\">\n                                              <div className=\"grid grid-cols-2 gap-4 text-sm font-medium text-gray-700\">\n                                                <span>Label</span>\n                                                <span>Value</span>\n                                              </div>\n                                            </div>\n                \n                                            <div className=\"divide-y divide-gray-200\">\n                                              {Object.entries(capturedData).map(([key, value]) => (\n                                                <div key={key} className=\"grid grid-cols-2 gap-4 px-4 py-3\">\n                                                  <div className=\"text-sm font-medium text-gray-900 bg-gray-100 px-3 py-2 rounded border\">\n                                                    {key}\n                                                  </div>\n                                                  <div className=\"text-sm text-gray-700 bg-gray-100 px-3 py-2 rounded border min-h-[40px] flex items-center\">\n                                                    {typeof value === 'object' ? JSON.stringify(value, null, 2) : String(value)}\n                                                  </div>\n                                                </div>\n                                              ))}\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )}\n                                    </div>\n                                  </div>\n                                )}\n                                \n                                {/* Gmail is now an action app only - no trigger configuration needed */}\n                                {false && (\n                                  <div className=\"space-y-4 border-t pt-6\">\n                                    <div>\n                                      <div className=\"flex items-center justify-between mb-2\">\n                                        <label className=\"block text-sm font-medium text-gray-900\">Gmail Trigger</label>\n                                        <div className=\"flex items-center gap-2\">\n                                          <div className={`w-2 h-2 rounded-full ${webhookCreated ? 'bg-green-500' : 'bg-yellow-500'}`}></div>\n                                          <span className={`text-xs font-medium ${webhookCreated ? 'text-green-700' : 'text-yellow-700'}`}>\n                                            {webhookCreated ? 'Active in Database' : 'Not Saved - Toggle ON to Activate'}\n                                          </span>\n                                        </div>\n                                      </div>\n                                      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n                                        <div className=\"flex items-start space-x-3\">\n                                          <div className=\"flex-shrink-0\">\n                                            <div className=\"w-6 h-6 bg-red-600 rounded-full flex items-center justify-center\">\n                                              <Mail className=\"h-4 w-4 text-white\" />\n                                            </div>\n                                          </div>\n                                          <div className=\"text-sm text-red-800\">\n                                            <p className=\"font-medium mb-1\">Gmail Integration</p>\n                                            <p>\n                                              This trigger will monitor your Gmail inbox for new emails. When a new email matching your criteria arrives,\n                                              it will trigger this workflow. You must connect your Gmail account and toggle the workflow ON to activate.\n                                            </p>\n                                          </div>\n                                        </div>\n                                      </div>\n                                      \n                                      <div className=\"mt-4 flex items-center justify-between\">\n                                        <div className=\"flex items-center gap-2\">\n                                          <span className=\"text-sm text-gray-600\">Connect Gmail Account</span>\n                                          <Button\n                                            onClick={async () => {\n                                              try {\n                                                // Check if user has Gmail connected\n                                                const statusResponse = await axiosInstance.get('/api/gmail/auth/status');\n                                                if (statusResponse.data.success && statusResponse.data.data.isConnected) {\n                                                  toast.success('Gmail account already connected!');\n                                                  return;\n                                                }\n                                                \nsetSidebarOpen(true);\n                                              } catch (error) {\n                                                console.error('Error checking Gmail status:', error);\n                                                toast.error('Failed to check Gmail connection status');\n                                              }\n                                            }}\n                                            className=\"h-10 bg-red-600 hover:bg-red-700 text-white\"\n                                          >\n                                            <Mail className=\"h-4 w-4 mr-2\" />\n                                            Connect Gmail\n                                          </Button>\n                                        </div>\n                                        \n                                        {gmailAuthStatus === 'connected' && (\n                                          <div className=\"flex items-center gap-2 text-sm text-green-600\">\n                                            <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                                            <span>Connected</span>\n                                          </div>\n                                        )}\n                                      </div>\n                                    </div>\n                                  </div>\n                                )}\n\n\n              </div>\n            )}\n          </div>\n\n          {/* Connection Line and Plus Button */}\n          {selectedTrigger && (\n            <div className=\"flex justify-center py-6\">\n              <div className=\"flex flex-col items-center\">\n                <div className=\"w-px h-8 bg-gray-300\"></div>\n                <div\n                  className=\"w-12 h-12 bg-blue-600 rounded-full flex items-center justify-center cursor-pointer hover:bg-blue-700 transition-colors shadow-lg\"\n                  onClick={addActionCard}\n                >\n                  <Plus className=\"h-6 w-6 text-white\" />\n                </div>\n                <div className=\"w-px h-8 bg-gray-300\"></div>\n              </div>\n            </div>\n          )}\n\n          {/* Action Cards */}\n          {actionCards.map((card, index) => (\n            <React.Fragment key={card.id}>\n              <div className=\"bg-white rounded-2xl border border-gray-200 shadow-sm\">\n              <div\n                className={`p-6 cursor-pointer transition-all duration-200 ${card.isExpanded ? 'border-b border-gray-200' : ''}`}\n                onClick={() => updateActionCard(card.id, { isExpanded: !card.isExpanded })}\n              >\n                <div className=\"flex items-center gap-4\">\n                  <div className=\"flex items-center justify-center w-12 h-12 bg-green-100 rounded-xl\">\n                    <Database className=\"h-6 w-6 text-green-600\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-2 mb-1\">\n                      <span className=\"text-sm text-gray-500\">Action : Do this ...</span>\n                    </div>\n                    <h3 className=\"text-lg font-semibold text-gray-900\">\n                      {card.selectedApp ?\n                        `${index + 2}. ${card.selectedApp.name} : ${card.selectedEvent?.name || 'Action'}` :\n                        `${index + 2}. Choose Your Next Application : Action`\n                      }\n                    </h3>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    {/* Dropdown menu for action cards */}\n                    <DropdownMenu>\n                      <DropdownMenuTrigger asChild>\n                        <button\n                          className=\"h-5 w-5 text-gray-400 hover:text-gray-600 transition-colors\"\n                          onClick={(e) => e.stopPropagation()} // Prevent card expansion when clicking menu\n                        >\n                          <MoreHorizontal className=\"h-5 w-5\" />\n                        </button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent align=\"end\" className=\"w-48\">\n                        <DropdownMenuItem\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            removeActionCard(card.id);\n                            toast.success('Action card removed successfully');\n                          }}\n                          className=\"flex items-center gap-2 px-3 py-2 text-sm text-red-600 hover:text-red-700 hover:bg-red-50 cursor-pointer\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                          Delete Action\n                        </DropdownMenuItem>\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                    <ChevronDown className={`h-5 w-5 text-gray-400 transition-transform ${card.isExpanded ? 'rotate-180' : ''}`} />\n                  </div>\n                </div>\n              </div>\n\n              {card.isExpanded && (\n                <div className=\"p-6 space-y-6\">\n                  {!card.selectedApp ? (\n                    // App Selection\n                    <div className=\"space-y-4\">\n                      <h4 className=\"text-lg font-semibold text-gray-900\">Choose App</h4>\n\n                      <div className=\"relative\">\n                        <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                        <Input\n                          placeholder=\"Search apps or type / and describe your task...\"\n                          value={card.searchQuery}\n                          onChange={(e) => updateActionCard(card.id, { searchQuery: e.target.value })}\n                          className=\"pl-12 h-12 border border-gray-300 rounded-lg focus:border-blue-500 focus:ring-1 focus:ring-blue-500\"\n                        />\n                      </div>\n\n                      {/* Action Apps Grid */}\n                      <div className=\"grid grid-cols-7 gap-4\">\n                        {actionApps.map((app) => (\n                          <div\n                            key={app.id}\n                            className=\"flex flex-col items-center p-4 border border-gray-200 rounded-lg hover:border-blue-300 hover:bg-blue-50 cursor-pointer transition-all\"\n                            onClick={() => updateActionCard(card.id, { selectedApp: app, isExpanded: true })}\n                          >\n                            <div className={`w-12 h-12 ${app.color} rounded-lg flex items-center justify-center mb-2`}>\n                              {typeof app.icon === 'string' ? (\n                                <span className=\"text-lg\">{app.icon}</span>\n                              ) : typeof app.icon === 'function' ? (\n                                app.icon()\n                              ) : (\n                                <div className=\"h-6 w-6 bg-gray-400 rounded\"></div>\n                              )}\n                            </div>\n                            <span className=\"text-sm font-medium text-center\">{app.name}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ) : (\n                    // App Configuration\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center gap-3 mb-4\">\n                        <div className={`w-8 h-8 ${card.selectedApp.color} rounded-lg flex items-center justify-center`}>\n                          {typeof card.selectedApp?.icon === 'string' ? (\n                            <span className=\"text-lg\">{card.selectedApp.icon}</span>\n                          ) : typeof card.selectedApp?.icon === 'function' ? (\n                            card.selectedApp.icon()\n                          ) : (\n                            <div className=\"h-5 w-5 bg-gray-400 rounded\"></div>\n                          )}\n                        </div>\n                        <div>\n                          <h4 className=\"text-lg font-semibold text-gray-900\">{index + 2}. {card.selectedApp.name} :</h4>\n                          <p className=\"text-sm text-gray-500\">Action : Do this ...</p>\n                        </div>\n                        <div className=\"ml-auto flex items-center gap-2\">\n                          <MoreHorizontal className=\"h-5 w-5 text-gray-400\" />\n                        </div>\n                      </div>\n\n                      <div className=\"space-y-4\">\n                        {/* <div>\n                          <label className=\"block text-sm font-medium text-gray-900 mb-2\">Choose App</label>\n                          <Select value={card.selectedApp.id}>\n                            <SelectTrigger className=\"w-full h-12 border border-gray-300 rounded-lg\">\n                              <div className=\"flex items-center gap-3\">\n                                <div className={`w-6 h-6 ${card.selectedApp.color} rounded flex items-center justify-center`}>\n                                  {typeof card.selectedApp?.icon === 'string' ? (\n                                    <span className=\"text-sm\">{card.selectedApp.icon}</span>\n                                  ) : typeof card.selectedApp?.icon === 'function' ? (\n                                    card.selectedApp.icon()\n                                  ) : (\n                                    <div className=\"h-4 w-4 bg-gray-400 rounded\"></div>\n                                  )}\n                                </div>\n                                <SelectValue placeholder={card.selectedApp.name} />\n                              </div>\n                            </SelectTrigger>\n                          </Select>\n                        </div> */}\n\n<div>\n  <label className=\"block text-sm font-semibold text-gray-800 mb-2\">Selected App</label>\n\n  <div className=\"w-full h-14 border border-gray-300 rounded-lg px-4 flex items-center gap-3 shadow-sm bg-white\">\n    {/* Icon */}\n    <div className={`w-9 h-9 ${card.selectedApp.color} rounded-md flex items-center justify-center text-white text-sm font-medium shadow`}>\n      {typeof card.selectedApp?.icon === 'string' ? (\n        <span>{card.selectedApp.icon}</span>\n      ) : typeof card.selectedApp?.icon === 'function' ? (\n        card.selectedApp.icon()\n      ) : (\n        <div className=\"h-4 w-4 bg-gray-400 rounded\"></div>\n      )}\n    </div>\n\n    {/* App Name */}\n    <span className=\"text-gray-900 font-medium truncate\">{card.selectedApp.name}</span>\n  </div>\n</div>\n\n\n                        <div>\n  <label className=\"block text-sm font-semibold text-gray-800 mb-2\">\n    Action Event\n  </label>\n  <Select\n    value={card.selectedEvent?.id}\n    onValueChange={(value) => {\n      const event = card.selectedApp?.events?.find((e) => e.id === value);\n      if (event) {\n        updateActionCard(card.id, { selectedEvent: event });\n      }\n    }}\n  >\n    {/* Trigger */}\n    <SelectTrigger className=\"w-full h-12 px-4 rounded-md border border-gray-300 bg-white text-sm text-gray-900 font-medium shadow-sm hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-blue-600 transition\">\n      <SelectValue placeholder=\"Select an action event\" />\n    </SelectTrigger>\n\n    {/* Dropdown */}\n    <SelectContent className=\"rounded-md border border-gray-200 bg-white shadow-lg max-h-72 overflow-y-auto\">\n      {card.selectedApp.events?.map((event) => (\n        <SelectItem\n          key={event.id}\n          value={event.id}\n          className=\"p-3 cursor-pointer hover:bg-blue-50 focus:bg-blue-50 rounded-sm transition\"\n        >\n          <div className=\"flex flex-col\">\n            <span className=\"text-sm font-medium text-gray-900\">{event.name}</span>\n            <span className=\"text-xs text-gray-500\">{event.description}</span>\n          </div>\n        </SelectItem>\n      ))}\n    </SelectContent>\n  </Select>\n</div>\n\n\n                        {/* <div>\n                          <label className=\"block text-sm font-medium text-gray-900 mb-2\">Action Event</label>\n                          <Select\n                            value={card.selectedEvent?.id}\n                            onValueChange={(value) => {\n                              const event = card.selectedApp?.events?.find(e => e.id === value);\n                              if (event) {\n                                updateActionCard(card.id, { selectedEvent: event });\n                              }\n                            }}\n                          >\n                            <SelectTrigger className=\"w-full h-12 border border-gray-300 rounded-lg\">\n                              <SelectValue placeholder=\"Search & select\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              {card.selectedApp.events?.map((event) => (\n                                <SelectItem key={event.id} value={event.id} className=\"p-3\">\n                                  <div>\n                                    <div className=\"font-medium\">{event.name}</div>\n                                    <div className=\"text-sm text-gray-500 mt-1\">{event.description}</div>\n                                  </div>\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                        </div> */}\n\n                        {card.selectedEvent && (\n                          <div className=\"pt-4\">\n                            {card.isConnected ? (\n                              <div className=\"space-y-3\">\n                                <div className=\"flex items-center gap-2 p-3 bg-green-50 border border-green-200 rounded-lg\">\n                                  <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                                  <span className=\"text-sm font-medium text-green-800\">Connected</span>\n                                </div>\n                                <Button\n                                  onClick={async () => {\n                                    // Load lists if Lists app is selected\n                                    if (card.selectedApp?.id === 'lists') {\n                                      await loadAvailableLists();\n                                    }\n                                    setSidebarOpen(true);\n                                    setSelectedCardForSidebar(card.id);\n                                  }}\n                                  variant=\"outline\"\n                                  className=\"w-full h-12 border border-gray-300 rounded-lg\"\n                                >\n                                  Reconfigure\n                                </Button>\n                              </div>\n                            ) : (\n                              <Button\n                                onClick={async () => {\n                                  // Load lists if Lists app is selected\n                                  if (card.selectedApp?.id === 'lists') {\n                                    await loadAvailableLists();\n                                  }\n                                  // Handle Gmail Service connection\n                                  if (card.selectedApp?.id === 'gmail-service') {\n                                    if (card.isConnected) {\n                                      toast.success('Gmail already connected for this action');\n                                      return;\n                                    }\n\n                                    try {\n                                      // Always initiate popup OAuth\n                                      const response = await axiosInstance.get('/api/gmail/auth/url', {\n                                        params: { redirectPath: 'popup' }\n                                      });\n\n                                      if (!response.data?.success || !response.data?.data?.authUrl) {\n                                        throw new Error(response.data?.message || 'Failed to generate Gmail OAuth URL');\n                                      }\n\n                                      const popup = window.open(\n                                        response.data.data.authUrl,\n                                        'gmail-oauth',\n                                        'width=600,height=700,scrollbars=yes,resizable=yes,status=yes,location=yes,toolbar=no,menubar=no'\n                                      );\n\n                                      if (!popup) {\n                                        toast.error('Popup blocked. Please allow popups and try again.');\n                                        return;\n                                      }\n\n                                      // Start short polling as a fallback\n                                      setGmailAuthStatus('connecting');\n                                      const pollInterval = setInterval(async () => {\n                                        try {\n                                          const statusRes = await axiosInstance.get('/api/gmail/auth/status');\n                                          if (statusRes.data?.success && statusRes.data?.data?.isConnected) {\n                                            clearInterval(pollInterval);\n                                            setGmailAuthStatus('connected');\n\n                                            // Get the connected Gmail email address\n                                            const connectedEmail = statusRes.data?.data?.profile?.email || statusRes.data?.data?.email || '';\n\n                                            // Update action card with connection and set fromEmail\n                                            updateActionCard(card.id, {\n                                              isConnected: true,\n                                              gmailConfig: {\n                                                fromEmail: connectedEmail,\n                                                to: card.gmailConfig?.to || '',\n                                                cc: card.gmailConfig?.cc || '',\n                                                bcc: card.gmailConfig?.bcc || '',\n                                                subject: card.gmailConfig?.subject || '',\n                                                body: card.gmailConfig?.body || '',\n                                                isHtml: card.gmailConfig?.isHtml || false,\n                                                attachments: card.gmailConfig?.attachments || [],\n                                                template: card.gmailConfig?.template || 'default'\n                                              }\n                                            });\n\n                                            toast.success(`Gmail connected successfully! From: ${connectedEmail}`);\n                                          }\n                                        } catch (e) {\n                                          // ignore\n                                        }\n                                      }, 2000);\n\n                                      // Auto-stop after 60 seconds\n                                      setTimeout(() => {\n                                        clearInterval(pollInterval);\n                                        setGmailAuthStatus('disconnected');\n                                      }, 60000);\n\n                                    } catch (error) {\n                                      console.error('Error starting Gmail OAuth:', error);\n                                      toast.error('Failed to initiate Gmail OAuth');\n                                    }\n                                    return;\n                                  }\n                                  setSidebarOpen(true);\n                                  setSelectedCardForSidebar(card.id);\n                                }}\n                                disabled={card.selectedApp?.id === 'gmail-service' && gmailAuthStatus === 'connecting'}\n                                className={`w-full h-12 text-white rounded-lg ${\n                                  card.selectedApp?.id === 'gmail-service' && card.isConnected\n                                    ? 'bg-green-600 hover:bg-green-700'\n                                    : card.selectedApp?.id === 'gmail-service' && gmailAuthStatus === 'connecting'\n                                    ? 'bg-blue-400'\n                                    : 'bg-blue-600 hover:bg-blue-700'\n                                }`}\n                              >\n                                {card.selectedApp?.id === 'gmail-service' ? (\n                                  <>\n                                    {gmailAuthStatus === 'connecting' ? (\n                                      <>\n                                        <Loader2 className=\"h-4 w-4 animate-spin mr-2\" />\n                                        Connecting...\n                                      </>\n                                    ) : (\n                                      <>\n                                        <Mail className=\"h-4 w-4 mr-2\" />\n                                        {card.isConnected ? 'Gmail Connected ‚úì' : 'Connect Gmail'}\n                                      </>\n                                    )}\n                                  </>\n                                ) : (\n                                  'Connect'\n                                )}\n                              </Button>\n                            )}\n\n                            {/* Gmail Configuration Form - Show when Gmail is connected */}\n                            {card.selectedApp?.id === 'gmail-service' && card.isConnected && (\n                              <div className=\"mt-6 space-y-4 p-4 bg-gray-50 rounded-lg border\">\n                                <div className=\"flex items-center gap-2 mb-4\">\n                                  <Mail className=\"h-5 w-5 text-red-600\" />\n                                  <h4 className=\"text-lg font-semibold text-gray-900\">Email Configuration</h4>\n                                </div>\n\n                                {/* Show dynamic data notice if webhook data is captured */}\n                                {capturedData && (\n                                  <div className=\"mb-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n                                    <p className=\"text-sm text-blue-800 font-medium\">‚úì Webhook Data Captured</p>\n                                    <p className=\"text-xs text-blue-600 mt-1\">\n                                      Available fields: {Object.keys(capturedData).map(key => `{{${key}}}`).join(', ')}\n                                    </p>\n                                    <p className=\"text-xs text-blue-600 mt-1\">\n                                      Click the [+] button next to any field to insert dynamic values.\n                                    </p>\n                                  </div>\n                                )}\n\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                  {/* From Field (Read-only) */}\n                                  <div>\n                                    <Label className=\"text-sm font-medium text-gray-900\">From (Connected Gmail)</Label>\n                                    <Input\n                                      value={card.gmailConfig?.fromEmail || 'Connect Gmail first'}\n                                      readOnly\n                                      className=\"w-full h-10 mt-1 bg-gray-50 text-gray-600\"\n                                      placeholder=\"Gmail will be set after connection\"\n                                    />\n                                  </div>\n\n                                  {/* To Field */}\n                                  <div>\n                                    <Label className=\"text-sm font-medium text-gray-900\">To</Label>\n                                    <div className=\"relative\">\n                                      <Input\n                                        value={card.gmailConfig?.to || ''}\n                                        onChange={(e) => updateGmailConfig(card.id, 'to', e.target.value)}\n                                        placeholder=\"recipient@example.com or {{email}}\"\n                                        className=\"w-full h-10 mt-1\"\n                                      />\n                                      {capturedData && (\n                                        <div className=\"absolute right-2 top-1/2 transform -translate-y-1/2\">\n                                          <Select onValueChange={(value) => updateGmailConfig(card.id, 'to', value)}>\n                                            <SelectTrigger className=\"w-8 h-8 p-0 border-0 bg-transparent\">\n                                              <div className=\"w-6 h-6 bg-blue-100 rounded flex items-center justify-center\">\n                                                <span className=\"text-xs text-blue-600\">+</span>\n                                              </div>\n                                            </SelectTrigger>\n                                            <SelectContent>\n                                              {Object.keys(capturedData).map((key) => (\n                                                <SelectItem key={key} value={`{{${key}}}`}>\n                                                  {key}: {String(capturedData[key]).substring(0, 30)}...\n                                                </SelectItem>\n                                              ))}\n                                            </SelectContent>\n                                          </Select>\n                                        </div>\n                                      )}\n                                    </div>\n                                  </div>\n\n                                  {/* CC Field */}\n                                  <div>\n                                    <Label className=\"text-sm font-medium text-gray-900\">CC (Optional)</Label>\n                                    <div className=\"relative\">\n                                      <Input\n                                        value={card.gmailConfig?.cc || ''}\n                                        onChange={(e) => updateGmailConfig(card.id, 'cc', e.target.value)}\n                                        placeholder=\"cc@example.com or {{email}}\"\n                                        className=\"w-full h-10 mt-1\"\n                                      />\n                                      {capturedData && (\n                                        <div className=\"absolute right-2 top-1/2 transform -translate-y-1/2\">\n                                          <Select onValueChange={(value) => updateGmailConfig(card.id, 'cc', value)}>\n                                            <SelectTrigger className=\"w-8 h-8 p-0 border-0 bg-transparent\">\n                                              <div className=\"w-6 h-6 bg-blue-100 rounded flex items-center justify-center\">\n                                                <span className=\"text-xs text-blue-600\">+</span>\n                                              </div>\n                                            </SelectTrigger>\n                                            <SelectContent>\n                                              {Object.keys(capturedData).map((key) => (\n                                                <SelectItem key={key} value={`{{${key}}}`}>\n                                                  {key}: {String(capturedData[key]).substring(0, 30)}...\n                                                </SelectItem>\n                                              ))}\n                                            </SelectContent>\n                                          </Select>\n                                        </div>\n                                      )}\n                                    </div>\n                                  </div>\n\n                                  {/* BCC Field */}\n                                  <div>\n                                    <Label className=\"text-sm font-medium text-gray-900\">BCC (Optional)</Label>\n                                    <div className=\"relative\">\n                                      <Input\n                                        value={card.gmailConfig?.bcc || ''}\n                                        onChange={(e) => updateGmailConfig(card.id, 'bcc', e.target.value)}\n                                        placeholder=\"bcc@example.com or {{email}}\"\n                                        className=\"w-full h-10 mt-1\"\n                                      />\n                                      {capturedData && (\n                                        <div className=\"absolute right-2 top-1/2 transform -translate-y-1/2\">\n                                          <Select onValueChange={(value) => updateGmailConfig(card.id, 'bcc', value)}>\n                                            <SelectTrigger className=\"w-8 h-8 p-0 border-0 bg-transparent\">\n                                              <div className=\"w-6 h-6 bg-blue-100 rounded flex items-center justify-center\">\n                                                <span className=\"text-xs text-blue-600\">+</span>\n                                              </div>\n                                            </SelectTrigger>\n                                            <SelectContent>\n                                              {Object.keys(capturedData).map((key) => (\n                                                <SelectItem key={key} value={`{{${key}}}`}>\n                                                  {key}: {String(capturedData[key]).substring(0, 30)}...\n                                                </SelectItem>\n                                              ))}\n                                            </SelectContent>\n                                          </Select>\n                                        </div>\n                                      )}\n                                    </div>\n                                  </div>\n\n                                  {/* Subject Field */}\n                                  <div>\n                                    <Label className=\"text-sm font-medium text-gray-900\">Subject</Label>\n                                    <div className=\"relative\">\n                                      <Input\n                                        value={card.gmailConfig?.subject || ''}\n                                        onChange={(e) => updateGmailConfig(card.id, 'subject', e.target.value)}\n                                        placeholder=\"Email subject or {{subject}}\"\n                                        className=\"w-full h-10 mt-1\"\n                                      />\n                                      {capturedData && (\n                                        <div className=\"absolute right-2 top-1/2 transform -translate-y-1/2\">\n                                          <Select onValueChange={(value) => updateGmailConfig(card.id, 'subject', value)}>\n                                            <SelectTrigger className=\"w-8 h-8 p-0 border-0 bg-transparent\">\n                                              <div className=\"w-6 h-6 bg-blue-100 rounded flex items-center justify-center\">\n                                                <span className=\"text-xs text-blue-600\">+</span>\n                                              </div>\n                                            </SelectTrigger>\n                                            <SelectContent>\n                                              {Object.keys(capturedData).map((key) => (\n                                                <SelectItem key={key} value={`{{${key}}}`}>\n                                                  {key}: {String(capturedData[key]).substring(0, 30)}...\n                                                </SelectItem>\n                                              ))}\n                                            </SelectContent>\n                                          </Select>\n                                        </div>\n                                      )}\n                                    </div>\n                                  </div>\n                                </div>\n\n                                {/* Body Field - Full Width */}\n                                <div>\n                                  <Label className=\"text-sm font-medium text-gray-900\">Body</Label>\n                                  <div className=\"relative\">\n                                    <textarea\n                                      value={card.gmailConfig?.body || ''}\n                                      onChange={(e) => updateGmailConfig(card.id, 'body', e.target.value)}\n                                      placeholder=\"Email body content or use dynamic fields like {{message}}\"\n                                      className=\"w-full h-24 mt-1 px-3 py-2 border border-gray-300 rounded-md resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                                    />\n                                    {capturedData && (\n                                      <div className=\"absolute right-2 top-2\">\n                                        <Select onValueChange={(value) => updateGmailConfig(card.id, 'body', (card.gmailConfig?.body || '') + value)}>\n                                          <SelectTrigger className=\"w-8 h-8 p-0 border-0 bg-transparent\">\n                                            <div className=\"w-6 h-6 bg-blue-100 rounded flex items-center justify-center\">\n                                              <span className=\"text-xs text-blue-600\">+</span>\n                                            </div>\n                                          </SelectTrigger>\n                                          <SelectContent>\n                                            {Object.keys(capturedData).map((key) => (\n                                              <SelectItem key={key} value={`{{${key}}}`}>\n                                                {key}: {String(capturedData[key]).substring(0, 30)}...\n                                              </SelectItem>\n                                            ))}\n                                          </SelectContent>\n                                        </Select>\n                                      </div>\n                                    )}\n                                  </div>\n                                </div>\n\n                                {/* Additional Options */}\n                                <div className=\"flex items-center justify-between\">\n                                  <div className=\"flex items-center space-x-2\">\n                                    <input\n                                      type=\"checkbox\"\n                                      id={`isHtml-${card.id}`}\n                                      checked={card.gmailConfig?.isHtml || false}\n                                      onChange={(e) => updateGmailConfig(card.id, 'isHtml', e.target.checked)}\n                                      className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500\"\n                                    />\n                                    <Label htmlFor={`isHtml-${card.id}`} className=\"text-sm font-medium text-gray-900\">\n                                      Send as HTML\n                                    </Label>\n                                  </div>\n\n                                  <Button\n                                    variant=\"outline\"\n                                    size=\"sm\"\n                                    onClick={async () => {\n                                      const config = card.gmailConfig;\n                                      if (!config?.to || !config?.subject || !config?.body) {\n                                        toast.error('Please fill in To, Subject, and Body fields');\n                                        return;\n                                      }\n\n                                      toast.promise(\n                                        async () => {\n                                          // Process placeholders with captured webhook data\n                                          const processPlaceholders = (text: string | undefined, data: any) => {\n                                            if (!text || typeof text !== 'string') return text;\n                                            let processedText = text;\n\n                                            if (data) {\n                                              Object.keys(data).forEach(key => {\n                                                const placeholder = `{{${key}}}`;\n                                                const value = data[key];\n                                                processedText = processedText.replace(new RegExp(placeholder.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'g'), String(value));\n                                              });\n                                            }\n\n                                            return processedText;\n                                          };\n\n                                          // Process email data with captured webhook data\n                                          const emailData = {\n                                            to: processPlaceholders(config.to, capturedData) || '',\n                                            cc: processPlaceholders(config.cc, capturedData) || '',\n                                            bcc: processPlaceholders(config.bcc, capturedData) || '',\n                                            subject: processPlaceholders(config.subject, capturedData) || '',\n                                            body: processPlaceholders(config.body, capturedData) || '',\n                                            isHtml: config.isHtml || false\n                                          };\n\n                                          // Validate that required fields don't still contain placeholders\n                                          if (!emailData.to || emailData.to.includes('{{') || emailData.to.includes('}}')) {\n                                            if (!capturedData) {\n                                              throw new Error('To field contains placeholders but no webhook data captured. Please capture webhook data first or use a static email address.');\n                                            } else {\n                                              throw new Error('To field contains unresolved placeholders. Check that the field names match your webhook data.');\n                                            }\n                                          }\n\n                                          // Ensure required fields are not undefined\n                                          if (!emailData.to || !emailData.subject || !emailData.body) {\n                                            throw new Error('To, Subject, and Body fields are required.');\n                                          }\n\n                                          // Use the Gmail service function\n                                          return await gmailService.sendGmailEmail(emailData);\n                                        },\n                                        {\n                                          loading: 'Sending test email...',\n                                          success: 'Test email sent successfully via Gmail!',\n                                          error: 'Failed to send test email'\n                                        }\n                                      );\n                                    }}\n                                  >\n                                    Send Test Email\n                                  </Button>\n                                </div>\n\n                                {/* Save Configuration Button */}\n                                <div className=\"pt-4 border-t\">\n                                  <Button\n                                    onClick={() => {\n                                      // Configuration is already saved via updateGmailConfig, just show confirmation\n                                      toast.success('Gmail configuration saved successfully!');\n                                      triggerAutoSave(); // Trigger auto-save to persist to backend\n                                    }}\n                                    className=\"w-full h-12 bg-green-600 hover:bg-green-700 text-white\"\n                                  >\n                                    Save Gmail Configuration\n                                  </Button>\n                                </div>\n                              </div>\n                            )}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n              </div>\n\n              {/* Plus Button after each card (except the last one) */}\n              {index < actionCards.length - 1 && (\n                <div className=\"flex justify-center py-6\">\n                  <div className=\"flex flex-col items-center\">\n                    <div className=\"w-px h-8 bg-gray-300\"></div>\n                    <div\n                      className=\"w-12 h-12 bg-blue-600 rounded-full flex items-center justify-center cursor-pointer hover:bg-blue-700 transition-colors shadow-lg\"\n                      onClick={addActionCard}\n                    >\n                      <Plus className=\"h-6 w-6 text-white\" />\n                    </div>\n                    <div className=\"w-px h-8 bg-gray-300\"></div>\n                  </div>\n                </div>\n              )}\n            </React.Fragment>\n          ))}\n\n          {/* Final Plus Button */}\n          {actionCards.length > 0 && (\n            <div className=\"flex justify-center py-6\">\n              <div className=\"flex flex-col items-center\">\n                <div className=\"w-px h-8 bg-gray-300\"></div>\n                <div\n                  className=\"w-12 h-12 bg-blue-600 rounded-full flex items-center justify-center cursor-pointer hover:bg-blue-700 transition-colors shadow-lg\"\n                  onClick={addActionCard}\n                >\n                  <Plus className=\"h-6 w-6 text-white\" />\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Sidebar for App Configuration */}\n        <Sheet open={sidebarOpen} onOpenChange={setSidebarOpen}>\n          <SheetContent\n            side=\"right\"\n            className=\"sheet-half-width max-w-none p-6\"\n            style={{\n              width: '50vw',\n              maxWidth: 'none',\n              minWidth: '50vw'\n            }}\n          >\n            <SheetHeader>\n              <SheetTitle>\n                {selectedCardForSidebar && actionCards.find(c => c.id === selectedCardForSidebar)?.selectedApp?.name\n                  ? `Configure ${actionCards.find(c => c.id === selectedCardForSidebar)?.selectedApp?.name}`\n                  : 'Configure Action'\n                }\n              </SheetTitle>\n            </SheetHeader>\n            <div className=\"mt-6 h-full overflow-y-auto\">\n              {selectedCardForSidebar && (() => {\n                const selectedCard = actionCards.find(c => c.id === selectedCardForSidebar);\n                const selectedApp = selectedCard?.selectedApp;\n                if (selectedApp?.id === 'facebook-lead-ads') {\n                  return null;\n                }\n\n                if (selectedApp?.id === 'lists') {\n                  return (\n                    <div className=\"space-y-6\">\n                      <div>\n                        <h3 className=\"text-lg font-semibold mb-4\">Lists Configuration</h3>\n                        <p className=\"text-gray-600 mb-4\">\n                          Configure how webhook data will be stored in your contact lists.\n                        </p>\n                      </div>\n\n                      <div className=\"space-y-4\">\n                        {!isCreatingList ? (\n                          <div>\n                            <label className=\"block text-sm font-medium text-gray-900 mb-2\">\n                              Select List\n                            </label>\n                            <Select value={selectedList} onValueChange={(value) => {\n                              if (value === 'create-new') {\n                                setIsCreatingList(true);\n                              } else {\n                                setSelectedList(value);\n                              }\n                            }}>\n                              <SelectTrigger className=\"w-full h-12 border border-gray-300 rounded-lg\">\n                                <SelectValue placeholder=\"Choose a list or create new...\" />\n                              </SelectTrigger>\n                              <SelectContent>\n                                {availableLists && availableLists.length > 0 ? (\n                                  availableLists.map((list) => (\n                                    <SelectItem key={list.id} value={list.id.toString()} className=\"p-3\">\n                                      <div>\n                                        <div className=\"font-medium\">{list.list_name}</div>\n                                        <div className=\"text-sm text-gray-500\">\n                                          {list.contactCount || 0} contacts\n                                        </div>\n                                      </div>\n                                    </SelectItem>\n                                  ))\n                                ) : (\n                                  <SelectItem value=\"no-lists\" disabled className=\"p-3\">\n                                    <div className=\"text-sm text-gray-500\">No lists available</div>\n                                  </SelectItem>\n                                )}\n                                <SelectItem value=\"create-new\" className=\"p-3 border-t\">\n                                  <div className=\"font-medium text-blue-600\">+ Create New List</div>\n                                </SelectItem>\n                              </SelectContent>\n                            </Select>\n                          </div>\n                        ) : (\n                          <div className=\"space-y-4 p-4 border border-gray-200 rounded-lg bg-gray-50\">\n                            <div className=\"flex items-center justify-between\">\n                              <h4 className=\"text-sm font-medium text-gray-900\">Create New List</h4>\n                              <Button\n                                variant=\"ghost\"\n                                size=\"sm\"\n                                onClick={() => {\n                                  setIsCreatingList(false);\n                                  setNewListData({\n                                    listName: '',\n                                    description: '',\n                                    type: 'General'\n                                  });\n                                }}\n                              >\n                                Cancel\n                              </Button>\n                            </div>\n\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                List Name *\n                              </label>\n                              <Input\n                                value={newListData.listName}\n                                onChange={(e) => setNewListData(prev => ({ ...prev, listName: e.target.value }))}\n                                placeholder=\"Enter list name\"\n                                className=\"w-full\"\n                              />\n                            </div>\n\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Description *\n                              </label>\n                              <Input\n                                value={newListData.description}\n                                onChange={(e) => setNewListData(prev => ({ ...prev, description: e.target.value }))}\n                                placeholder=\"Enter list description\"\n                                className=\"w-full\"\n                              />\n                            </div>\n\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Type\n                              </label>\n                              <Select value={newListData.type} onValueChange={(value) => setNewListData(prev => ({ ...prev, type: value }))}>\n                                <SelectTrigger className=\"w-full\">\n                                  <SelectValue />\n                                </SelectTrigger>\n                                <SelectContent>\n                                  <SelectItem value=\"General\">General</SelectItem>\n                                  <SelectItem value=\"Marketing\">Marketing</SelectItem>\n                                  <SelectItem value=\"Sales\">Sales</SelectItem>\n                                  <SelectItem value=\"Event\">Event</SelectItem>\n                                  <SelectItem value=\"Customer\">Customer</SelectItem>\n                                </SelectContent>\n                              </Select>\n                            </div>\n\n                            <Button\n                              onClick={handleCreateList}\n                              className=\"w-full bg-blue-600 hover:bg-blue-700 text-white\"\n                            >\n                              Create List\n                            </Button>\n                          </div>\n                        )}\n\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-900 mb-2\">\n                            Field Mapping\n                          </label>\n                          <div className=\"space-y-3\">\n                            <div className=\"flex items-center justify-between p-3 border border-gray-200 rounded-lg\">\n                              <span className=\"text-sm font-medium\">Email</span>\n                              <span className=\"text-sm text-gray-500\">‚Üí email</span>\n                            </div>\n                            <div className=\"flex items-center justify-between p-3 border border-gray-200 rounded-lg\">\n                              <span className=\"text-sm font-medium\">Phone</span>\n                              <span className=\"text-sm text-gray-500\">‚Üí phoneNumber</span>\n                            </div>\n                            <div className=\"flex items-center justify-between p-3 border border-gray-200 rounded-lg\">\n                              <span className=\"text-sm font-medium\">Name</span>\n                              <span className=\"text-sm text-gray-500\">‚Üí fullName</span>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div className=\"pt-4\">\n                          <Button\n                            onClick={async () => {\n                              if (!selectedList && !isCreatingList) {\n                                toast.error('Please select a list first');\n                                return;\n                              }\n\n                              try {\n                                // Ensure webhook is created and activated first\n                                if (!webhookCreated || !workflowEnabled) {\n                                  toast.error('Please activate the webhook first before configuring lists');\n                                  return;\n                                }\n\n                                // Save webhook configuration to backend\n                                if (webhookUrl) {\n                                  const webhookId = webhookUrl.split('/').pop();\n                                  if (!webhookId) {\n                                    throw new Error('Invalid webhook URL - cannot extract webhook ID');\n                                  }\n\n                                  console.log('üîß Saving webhook configuration:', { webhookId, listId: selectedList, appType: 'lists' });\n\n                                  try {\n                                    const response = await axiosInstance.put(`/api/webhooks/${webhookId}/config`, {\n                                      listId: selectedList,\n                                      appType: 'lists'\n                                    });\n\n                                    console.log('‚úÖ Configuration save response:', response.data);\n                                  } catch (configError: any) {\n                                    if (configError.response?.status === 404) {\n                                      toast.error('Webhook not found. Please toggle the webhook ON first to create it in the database.');\n                                      return;\n                                    }\n                                    throw configError;\n                                  }\n                                } else {\n                                  throw new Error('No webhook URL available');\n                                }\n\n                                if (selectedCardForSidebar) {\n                                  updateActionCard(selectedCardForSidebar, {\n                                    isConnected: true,\n                                    selectedListId: selectedList\n                                  });\n                                }\n\n                                toast.success('Lists configuration saved!');\n                                setSidebarOpen(false);\n                              } catch (error: any) {\n                                console.error('Error saving webhook configuration:', error);\n                                const errorMessage = error.response?.data?.message || error.message || 'Failed to save configuration';\n                                toast.error(errorMessage);\n                              }\n                            }}\n                            className=\"w-full h-12 bg-green-600 hover:bg-green-700 text-white rounded-lg\"\n                            disabled={!selectedList && !isCreatingList}\n                          >\n                            Save Configuration\n                          </Button>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                } else if (selectedApp?.id === 'facebook-lead-ads') {\n                  return null;\n                } else if (selectedApp?.id === 'text-webhook') {\n                  return (\n                    <TextWebhookConfig\n                      initialConfig={selectedCard?.textConfig}\n                      onCancel={() => setSidebarOpen(false)}\n                      onSave={async (config) => {\n                        if (!selectedCardForSidebar) return;\n                        updateActionCard(selectedCardForSidebar, { isConnected: true, textConfig: config });\n                        triggerAutoSave();\n                        toast.success('Text webhook configured');\n                        setSidebarOpen(false);\n                      }}\n                    />\n                  );\n                } else if (selectedApp?.id === 'gmail-service') {\n                  return (\n                    <div className=\"text-gray-600 text-center py-8\">\n                      <Mail className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                      <p className=\"text-lg font-medium text-gray-900 mb-2\">Gmail Configuration</p>\n                      <p className=\"text-sm text-gray-500\">\n                        Gmail configuration is now available directly in the action card below the Connect Gmail button.\n                      </p>\n                    </div>\n                  );\n                } else if (selectedApp?.id === 'outbound-campaign') {\n                  return (\n                    <CampaignActionConfig\n                      initialConfig={selectedCard?.campaignConfig}\n                      onCancel={() => setSidebarOpen(false)}\n                      onSave={async (config) => {\n                        if (!selectedCardForSidebar) return;\n                        console.log('üîß Saving campaign config:', config);\n                        console.log('üîß Selected card for sidebar:', selectedCardForSidebar);\n\n                        // Find the create-campaign event for the selected card\n                        const selectedCard = actionCards.find(card => card.id === selectedCardForSidebar);\n                        const createCampaignEvent = selectedCard?.selectedApp?.events?.find(event => event.id === 'create-campaign');\n\n                        updateActionCard(selectedCardForSidebar, {\n                          isConnected: true,\n                          campaignConfig: config,\n                          selectedEvent: createCampaignEvent || selectedCard?.selectedEvent\n                        });\n                        console.log('‚úÖ Campaign action card updated');\n                        triggerAutoSave();\n                        toast.success('Campaign action configured');\n                        setSidebarOpen(false);\n                      }}\n                    />\n                  );\n                } else {\n                  return (\n                    <div className=\"text-gray-600\">Select an app to configure.</div>\n                  );\n                }\n              })()}\n            </div>\n          </SheetContent>\n        </Sheet>\n\n        {/* Trigger Sidebar for Facebook Lead Ads */}\n        <Sheet open={triggerSidebarOpen} onOpenChange={setTriggerSidebarOpen}>\n          <SheetContent\n            side=\"right\"\n            className=\"sheet-half-width max-w-none p-6\"\n            style={{ width: '50vw', maxWidth: 'none', minWidth: '50vw' }}\n          >\n            <SheetHeader>\n              <SheetTitle>\n                {selectedApp?.name ? `Configure ${selectedApp.name}` : 'Configure Trigger'}\n              </SheetTitle>\n            </SheetHeader>\n            <div className=\"mt-6 h-full overflow-y-auto\">\n              {selectedApp?.id === 'facebook-lead-ads' && (\n                <FacebookLeadAdsTrigger\n                  webhookId={webhook?.webhook_id || webhook?.id || currentWebhookId}\n                  workflowEnabled={workflowEnabled}\n                  onConnectionChange={async (connected) => {\n                    console.log('üîß Facebook connection changed:', connected);\n                    console.log('üîß Current webhook IDs:', {\n                      'webhook?.webhook_id': webhook?.webhook_id,\n                      'webhook?.id': webhook?.id,\n                      'currentWebhookId': currentWebhookId,\n                      'final_webhookId': webhook?.webhook_id || webhook?.id || currentWebhookId\n                    });\n\n                    if (connected) {\n                      // Get the webhook ID for this connection\n                      const webhookId = webhook?.webhook_id || webhook?.id || currentWebhookId;\n                      console.log('üîß Loading Facebook connection status with webhookId:', webhookId);\n\n                      // Get connection status and user info from session storage (for new connections)\n                      const tempUserStr = sessionStorage.getItem('temp_facebook_user');\n                      if (tempUserStr) {\n                        try {\n                          const facebookUser = JSON.parse(tempUserStr);\n                          console.log('üì¶ Using temp Facebook user for main trigger area:', facebookUser);\n                          setFacebookConnectionStatus({ isConnected: true, facebookUser });\n                        } catch (e) {\n                          console.error('‚ùå Failed to parse temp Facebook user:', e);\n                          setFacebookConnectionStatus({ isConnected: true });\n                        }\n                      } else {\n                        setFacebookConnectionStatus({ isConnected: true });\n                      }\n\n                      // Load pages and forms for the main trigger area\n                      try {\n                        const pages = await facebookService.getStoredFacebookPages();\n                        console.log('üì¶ Loaded pages for main trigger area:', pages.length, 'pages');\n                        setFacebookPages(pages);\n                      } catch (error) {\n                        console.error('‚ùå Failed to load pages for main trigger area:', error);\n                        setFacebookPages([]);\n                      }\n                    } else {\n                      setFacebookConnectionStatus({ isConnected: false });\n                      setFacebookPages([]);\n                      setFacebookLeadForms([]);\n                      setSelectedFacebookPage('');\n                      setSelectedLeadForm('');\n                    }\n                  }}\n                />\n              )}\n            </div>\n          </SheetContent>\n        </Sheet>\n\n        {/* Gmail OAuth Modal */}\n        <GmailOAuthModal\n          isOpen={isGmailModalOpen}\n          onClose={() => setIsGmailModalOpen(false)}\n          onSuccess={handleGmailOAuthSuccess}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default WebhookCreator;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Page from '@/components/Page';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  Search,\n  Webhook,\n  Loader2,\n  Plus,\n  Trash2,\n  Eye,\n  Calendar,\n  Activity,\n  MoreHorizontal,\n  Filter,\n  Download,\n  Settings\n} from 'lucide-react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport { toast } from 'sonner';\nimport axiosInstance from '@/api/axios/axiosInstance';\nimport WebhookCreator from './WebhookCreator';\nimport * as facebookService from '@/api/services/facebook/facebookService';\n\ntype ViewType = 'list' | 'create' | 'view';\n\nconst Webhooks: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [currentView, setCurrentView] = useState<ViewType>('list');\n  const [selectedWebhook, setSelectedWebhook] = useState<any>(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [existingWebhooks, setExistingWebhooks] = useState<any[]>([]);\n\n  // Workflow naming modal states\n  const [showNameModal, setShowNameModal] = useState(false);\n  const [workflowName, setWorkflowName] = useState('');\n  const [isCreatingWorkflow, setIsCreatingWorkflow] = useState(false);\n\n  // Enhanced URL state management for webhook creator and Gmail OAuth redirect\n  useEffect(() => {\n    const view = searchParams.get('view');\n    const workflow = searchParams.get('workflow');\n    const tempId = searchParams.get('tempId');\n    const workflowId = searchParams.get('workflowId');\n    const gmailSuccess = searchParams.get('gmail_success');\n    const gmailError = searchParams.get('gmail_error');\n    const email = searchParams.get('email');\n    const cardId = searchParams.get('card_id');\n\n    console.log('üîç URL State Check:', { view, workflow, tempId, workflowId, gmailSuccess, gmailError, email, cardId });\n\n    // Check if we should show webhook creator\n    if (view === 'creator') {\n      if (workflow) {\n        setWorkflowName(decodeURIComponent(workflow));\n      }\n\n      // Restore workflow state from localStorage if available\n      const savedState = localStorage.getItem('current_workflow_state');\n      if (savedState && tempId) {\n        try {\n          const state = JSON.parse(savedState);\n          if (state.tempId === tempId) {\n            setWorkflowName(state.name);\n            \n            // If we have a webhookId, load the existing webhook\n            if (state.webhookId) {\n              // Set the id in the URL to load the existing webhook\n              const newParams = new URLSearchParams(searchParams);\n              newParams.set('id', state.webhookId.toString());\n              setSearchParams(newParams);\n            }\n            \n            console.log('üîÑ Restored workflow state:', state);\n          }\n        } catch (error) {\n          console.error('Error restoring workflow state:', error);\n        }\n      }\n\n      setCurrentView('create');\n\n      // Handle Gmail OAuth redirect\n      if (gmailSuccess || gmailError) {\n        // Keep the tempId and card_id parameters for workflow restoration\n        const newParams = new URLSearchParams(searchParams);\n        newParams.delete('gmail_success');\n        newParams.delete('gmail_error');\n        newParams.delete('email');\n        setSearchParams(newParams);\n      }\n    // Handle editing existing workflow\n    else if (workflowId) {\n      const existingWorkflow = existingWebhooks.find(w => w.id === parseInt(workflowId));\n      if (existingWorkflow) {\n        setSelectedWebhook(existingWorkflow);\n        setCurrentView('view');\n      }\n    }\n    }\n  }, [searchParams, setSearchParams, existingWebhooks]);\n\n  // Handle Facebook OAuth callback (redirect to frontend with code/state)\n  useEffect(() => {\n    const code = searchParams.get('code');\n    const state = searchParams.get('state');\n    if (code) {\n      (async () => {\n        try {\n          await facebookService.connectFacebookAccount(code, state || undefined);\n          // Clean OAuth params but preserve current workflow/search state\n          const newParams = new URLSearchParams(searchParams);\n          newParams.delete('code');\n          newParams.delete('state');\n          setSearchParams(newParams);\n          // Optionally refresh any Facebook-related data here if needed\n        } catch (e) {\n          // Error toast is handled inside the service\n          const newParams = new URLSearchParams(searchParams);\n          newParams.delete('code');\n          newParams.delete('state');\n          setSearchParams(newParams);\n        }\n      })();\n    }\n  }, [searchParams, setSearchParams]);\n\n  // Rehydrate creator state on initial load if URL lacks params but localStorage has state\n  useEffect(() => {\n    const hasView = !!searchParams.get('view');\n    if (hasView) return;\n\n    const tryRestoreFrom = (key: string) => {\n      const saved = localStorage.getItem(key);\n      if (!saved) return false;\n      try {\n        const state = JSON.parse(saved);\n        if (!state || !state.tempId) return false;\n        const newParams = new URLSearchParams(searchParams);\n        newParams.set('view', 'creator');\n        if (state.name) newParams.set('workflow', encodeURIComponent(state.name));\n        newParams.set('tempId', state.tempId);\n        setSearchParams(newParams);\n        return true;\n      } catch {\n        return false;\n      }\n    };\n\n    // Prefer the lightweight current_workflow_state, then fall back to detailed creator state\n    if (tryRestoreFrom('current_workflow_state')) return;\n    tryRestoreFrom('webhook_creator_state');\n  }, []);\n\n  // Load existing webhooks\n  const loadExistingWebhooks = async (showLoading = false) => {\n    try {\n      if (showLoading) {\n        setIsLoading(true);\n      }\n      const response = await axiosInstance.get('/api/webhooks');\n      if (response.data.success) {\n        console.log('Loaded webhooks:', response.data.data);\n        if (response.data.data.length > 0) {\n          console.log('Sample webhook structure:', response.data.data[0]);\n        }\n        setExistingWebhooks(response.data.data);\n      }\n    } catch (error) {\n      console.error('Error loading webhooks:', error);\n    } finally {\n      if (showLoading) {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  // Delete webhook\n  const deleteWebhook = async (webhookId: string) => {\n    try {\n      setIsLoading(true);\n      console.log('Attempting to delete webhook with ID:', webhookId);\n      const response = await axiosInstance.delete(`/api/webhooks/${webhookId}`);\n      if (response.data.success) {\n        toast.success('Webhook deleted successfully!');\n        loadExistingWebhooks(true); // Refresh the list with loading\n      } else {\n        throw new Error(response.data.message || 'Failed to delete webhook');\n      }\n    } catch (error: any) {\n      console.error('Error deleting webhook:', error);\n      console.error('Full error response:', error.response);\n      toast.error(error.response?.data?.message || 'Failed to delete webhook');\n      setIsLoading(false);\n    }\n  };\n\n  // View webhook details\n  const viewWebhook = (webhook: any) => {\n    console.log('Viewing webhook:', webhook);\n    setSelectedWebhook(webhook);\n    setCurrentView('view');\n    // Persist view state in URL for refresh resilience\n    const newParams = new URLSearchParams(searchParams);\n    newParams.set('workflowId', String(webhook.id));\n    newParams.set('view', 'view');\n    if (webhook.name) {\n      newParams.set('workflow', encodeURIComponent(webhook.name));\n    }\n    setSearchParams(newParams);\n  };\n\n  // Handle create workflow button click - show naming modal first\n  const handleCreateWorkflow = () => {\n    setWorkflowName('');\n    setShowNameModal(true);\n  };\n\n  // Handle workflow name save and navigate to creator\n  const handleSaveWorkflowName = async () => {\n    if (!workflowName.trim()) {\n      toast.error('Please enter a workflow name');\n      return;\n    }\n\n    setIsCreatingWorkflow(true);\n    try {\n      console.log('üöÄ Creating new workflow with name:', workflowName);\n\n      // Generate a temporary workflow ID for state management\n      const tempWorkflowId = `temp_${Date.now()}`;\n\n      // Close modal and navigate to creator with the workflow name\n      setShowNameModal(false);\n      setCurrentView('create');\n\n      // Set URL state to maintain creator view on refresh with workflow ID\n      setSearchParams({\n        view: 'creator',\n        workflow: encodeURIComponent(workflowName),\n        tempId: tempWorkflowId\n      });\n\n      // Store workflow state in localStorage for persistence\n      localStorage.setItem('current_workflow_state', JSON.stringify({\n        name: workflowName,\n        tempId: tempWorkflowId,\n        created: Date.now(),\n        status: 'creating'\n      }));\n\n      toast.success(`Workflow \"${workflowName}\" ready for configuration!`);\n    } catch (error) {\n      console.error('Error creating workflow:', error);\n      toast.error('Failed to create workflow');\n    } finally {\n      setIsCreatingWorkflow(false);\n    }\n  };\n\n  // Handle Gmail OAuth callback parameters\n  useEffect(() => {\n    const gmailSuccess = searchParams.get('gmail_success');\n    const gmailError = searchParams.get('gmail_error');\n    const email = searchParams.get('email');\n\n    if (gmailSuccess === 'true' && email) {\n      toast.success(`Gmail account connected successfully! (${decodeURIComponent(email)})`);\n      // Preserve current workflow/search state; clear only Gmail-related params\n      const newParams = new URLSearchParams(searchParams);\n      newParams.delete('gmail_success');\n      newParams.delete('gmail_error');\n      newParams.delete('email');\n      setSearchParams(newParams);\n    } else if (gmailError) {\n      const errorMessage = decodeURIComponent(gmailError);\n      toast.error(`Gmail connection failed: ${errorMessage}`);\n      // Preserve current workflow/search state; clear only Gmail-related params\n      const newParams = new URLSearchParams(searchParams);\n      newParams.delete('gmail_success');\n      newParams.delete('gmail_error');\n      newParams.delete('email');\n      setSearchParams(newParams);\n    }\n  }, [searchParams, setSearchParams]);\n\n  // Load webhooks on component mount\n  useEffect(() => {\n    loadExistingWebhooks(true); // Show loading on initial load\n  }, []);\n\n  // Filter webhooks based on search\n  const filteredWebhooks = existingWebhooks.filter(webhook =>\n    webhook.name?.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    webhook.trigger_type?.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  // Handle back navigation with loading\n  const handleBackToList = () => {\n    setCurrentView('list');\n    // Clear URL state and localStorage when going back to list\n    setSearchParams({});\n    localStorage.removeItem('current_workflow_state');\n    localStorage.removeItem('webhook_creator_state');\n    loadExistingWebhooks(true); // Show loading when navigating back\n  };\n\n  // Render different views based on current state\n  if (currentView === 'create') {\n    return (\n      <WebhookCreator\n        workflowName={workflowName}\n        onBack={handleBackToList}\n        onSave={() => {\n          setCurrentView('list');\n          loadExistingWebhooks(true); // Show loading after saving\n        }}\n      />\n    );\n  }\n\n  if (currentView === 'view' && selectedWebhook) {\n    return (\n      <WebhookCreator\n        webhook={selectedWebhook}\n        onBack={handleBackToList}\n        onSave={() => {\n          setCurrentView('list');\n          loadExistingWebhooks(true); // Show loading after saving\n        }}\n      />\n    );\n  }\n\n\n\n\n\n  return (\n    <Page>\n      <div className=\"min-h-screen bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-6 py-8\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between mb-8\">\n            <div>\n              <div className=\"flex items-center gap-4 mb-2\">\n                <div className=\"inline-flex items-center justify-center w-12 h-12 bg-blue-600 rounded-xl\">\n                  <Webhook className=\"h-6 w-6 text-white\" />\n                </div>\n                <h1 className=\"text-3xl font-bold text-gray-900\">\n                  Webhook Workflows\n                </h1>\n              </div>\n              <p className=\"text-gray-600 ml-16\">\n                Manage your webhook automations and integrations\n              </p>\n            </div>\n            <Button\n              onClick={handleCreateWorkflow}\n              className=\"h-12 px-6 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium\"\n            >\n              <Plus className=\"h-5 w-5 mr-2\" />\n              Create Workflow\n            </Button>\n          </div>\n\n          {/* Controls Bar */}\n          <div className=\"bg-white rounded-lg border border-gray-200 p-4 mb-6\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-4\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                  <Input\n                    placeholder=\"Search webhook workflows...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className=\"pl-10 h-10 w-80 border-gray-300 rounded-lg focus:border-blue-500 focus:ring-1 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Button variant=\"outline\" size=\"sm\" className=\"h-10 px-3 border-gray-300\">\n                  <Filter className=\"h-4 w-4 mr-2\" />\n                  Filter\n                </Button>\n                <Button variant=\"outline\" size=\"sm\" className=\"h-10 px-3 border-gray-300\">\n                  <Download className=\"h-4 w-4 mr-2\" />\n                  Export\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          {/* Webhook Table */}\n          <div className=\"bg-white rounded-lg border border-gray-200 shadow-sm\">\n            {isLoading ? (\n              <div className=\"flex items-center justify-center py-12\">\n                <Loader2 className=\"h-8 w-8 animate-spin text-blue-600\" />\n                <span className=\"ml-3 text-gray-600\">Loading webhooks...</span>\n              </div>\n            ) : filteredWebhooks.length === 0 ? (\n              <div className=\"p-12 text-center\">\n                <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gray-100 rounded-xl mb-4\">\n                  <Webhook className=\"h-8 w-8 text-gray-400\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">No Webhook Workflows</h3>\n                <p className=\"text-gray-600 mb-6\">\n                  {searchQuery ? 'No workflows match your search criteria.' : 'Get started by creating your first webhook workflow.'}\n                </p>\n                {!searchQuery && (\n                  <Button\n                    onClick={handleCreateWorkflow}\n                    className=\"h-12 px-6 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium\"\n                  >\n                    <Plus className=\"h-5 w-5 mr-2\" />\n                    Create Your First Workflow\n                  </Button>\n                )}\n              </div>\n            ) : (\n              <Table>\n                <TableHeader>\n                  <TableRow className=\"border-b border-gray-200\">\n                    <TableHead className=\"h-12 px-6 text-left text-sm font-semibold text-gray-900\">\n                      Workflow Name\n                    </TableHead>\n                    <TableHead className=\"h-12 px-6 text-left text-sm font-semibold text-gray-900\">\n                      Trigger\n                    </TableHead>\n                    <TableHead className=\"h-12 px-6 text-left text-sm font-semibold text-gray-900\">\n                      Status\n                    </TableHead>\n                    <TableHead className=\"h-12 px-6 text-left text-sm font-semibold text-gray-900\">\n                      Created\n                    </TableHead>\n                    <TableHead className=\"h-12 px-6 text-right text-sm font-semibold text-gray-900\">\n                      Actions\n                    </TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {filteredWebhooks.map((webhook) => (\n                    <TableRow key={webhook.id} className=\"border-b border-gray-100 hover:bg-gray-50 transition-colors\">\n                      <TableCell className=\"h-16 px-6\">\n                        <div className=\"flex items-center gap-3\">\n                          <div className=\"flex items-center justify-center w-10 h-10 bg-blue-100 rounded-lg\">\n                            <Webhook className=\"h-5 w-5 text-blue-600\" />\n                          </div>\n                          <div>\n                            <div className=\"font-semibold text-gray-900\">{webhook.name}</div>\n                            <div className=\"text-sm text-gray-500 mt-1\">\n                            {/* 67890321` 1q2W#4321 ZQWZsedrftgy ko0\n                            \"? */}\n                            </div>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"h-16 px-6\">\n                        <div className=\"flex items-center gap-2\">\n                          <Activity className=\"h-4 w-4 text-gray-400\" />\n                          <span className=\"text-sm text-gray-700\">\n                            {webhook.trigger_type || 'Unknown trigger'}\n                          </span>\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"h-16 px-6\">\n                        <Badge\n                          variant={webhook.is_active ? 'default' : 'secondary'}\n                          className=\"px-3 py-1 text-xs font-medium\"\n                        >\n                          {webhook.is_active ? 'active' : 'inactive'}\n                        </Badge>\n                      </TableCell>\n                      <TableCell className=\"h-16 px-6\">\n                        <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                          <Calendar className=\"h-4 w-4 text-gray-400\" />\n                          <span>{new Date(webhook.created_at).toLocaleDateString()}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"h-16 px-6\">\n                        <div className=\"flex items-center justify-end gap-2\">\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => viewWebhook(webhook)}\n                            className=\"h-8 px-3 text-blue-600 hover:text-blue-700 hover:bg-blue-50 rounded-md\"\n                          >\n                            <Eye className=\"h-4 w-4 mr-1\" />\n                            View\n                          </Button>\n                          <DropdownMenu>\n                            <DropdownMenuTrigger asChild>\n                              <Button\n                                variant=\"ghost\"\n                                size=\"sm\"\n                                className=\"h-8 w-8 p-0 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded-md\"\n                              >\n                                <MoreHorizontal className=\"h-4 w-4\" />\n                              </Button>\n                            </DropdownMenuTrigger>\n                            <DropdownMenuContent align=\"end\" className=\"w-48\">\n                              <DropdownMenuItem\n                                onClick={() => viewWebhook(webhook)}\n                                className=\"flex items-center gap-2 px-3 py-2 text-sm\"\n                              >\n                                <Eye className=\"h-4 w-4\" />\n                                View Details\n                              </DropdownMenuItem>\n                              <DropdownMenuItem\n                                onClick={() => {\n                                  if (webhook.url) {\n                                    navigator.clipboard.writeText(webhook.url);\n                                    toast.success('Webhook URL copied to clipboard!');\n                                  }\n                                }}\n                                className=\"flex items-center gap-2 px-3 py-2 text-sm\"\n                              >\n                                <Settings className=\"h-4 w-4\" />\n                                Copy URL\n                              </DropdownMenuItem>\n                              <DropdownMenuItem\n                                onClick={() => deleteWebhook(webhook.webhook_id || webhook.id)}\n                                disabled={isLoading}\n                                className=\"flex items-center gap-2 px-3 py-2 text-sm text-red-600 hover:text-red-700 hover:bg-red-50\"\n                              >\n                                {isLoading ? (\n                                  <Loader2 className=\"h-4 w-4 animate-spin\" />\n                                ) : (\n                                  <Trash2 className=\"h-4 w-4\" />\n                                )}\n                                Delete\n                              </DropdownMenuItem>\n                            </DropdownMenuContent>\n                          </DropdownMenu>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            )}\n\n            {/* Table Footer */}\n            {!isLoading && filteredWebhooks.length > 0 && (\n              <div className=\"flex items-center justify-between px-6 py-4 border-t border-gray-200 bg-gray-50\">\n                <div className=\"text-sm text-gray-600\">\n                  Showing {filteredWebhooks.length} of {existingWebhooks.length} webhook{existingWebhooks.length !== 1 ? 's' : ''}\n                </div>\n                <div className=\"text-sm text-gray-500\">\n                  {searchQuery && `Filtered by: \"${searchQuery}\"`}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Workflow Naming Modal */}\n      <Dialog open={showNameModal} onOpenChange={setShowNameModal}>\n        <DialogContent className=\"sm:max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"text-xl font-semibold text-gray-900\">\n              Create New Workflow\n            </DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4 py-4\">\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium text-gray-700\">\n                Workflow Name\n              </label>\n              <Input\n                value={workflowName}\n                onChange={(e) => setWorkflowName(e.target.value)}\n                placeholder=\"Enter workflow name...\"\n                className=\"w-full h-12 border border-gray-300 rounded-lg focus:border-blue-500 focus:ring-1 focus:ring-blue-500\"\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter') {\n                    handleSaveWorkflowName();\n                  }\n                }}\n              />\n            </div>\n          </div>\n          <DialogFooter className=\"flex gap-3\">\n            <Button\n              variant=\"outline\"\n              onClick={() => setShowNameModal(false)}\n              className=\"flex-1 h-12 border border-gray-300 rounded-lg\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={handleSaveWorkflowName}\n              disabled={isCreatingWorkflow || !workflowName.trim()}\n              className=\"flex-1 h-12 bg-blue-600 hover:bg-blue-700 text-white rounded-lg disabled:bg-gray-400\"\n            >\n              {isCreatingWorkflow ? (\n                <Loader2 className=\"h-4 w-4 animate-spin mr-2\" />\n              ) : null}\n              Save\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </Page>\n  );\n};\n\nexport default Webhooks;\n"],"names":["generateFacebookOAuthUrl","res","axiosInstance","_a","_b","_c","connectFacebookAccount","code","state","toast","error","message","getFacebookConnectionStatus","webhookIdOrTimeout","webhookId","timeout","isConnected","userStr","facebookUser","e","tempConnected","tempUserStr","response","backendError","getFacebookPages","getStoredFacebookPages","getPageLeadForms","pageId","sendGmailEmail","emailData","GmailOAuthModal","isOpen","onClose","onSuccess","userId","redirectPath","status","setStatus","useState","setMessage","iframeRef","useRef","handleConnect","popup","checkClosed","useEffect","handleMessage","event","handleClose","jsx","Dialog","jsxs","DialogContent","DialogHeader","DialogTitle","Mail","DialogDescription","Button","Loader2","CheckCircle","AlertCircle","CampaignActionConfig","initialConfig","onSave","onCancel","name","setName","phoneNumberId","setPhoneNumberId","assistantId","setAssistantId","workflowId","setWorkflowId","autoLaunch","setAutoLaunch","phoneNumbers","setPhoneNumbers","assistants","setAssistants","workflows","setWorkflows","loading","setLoading","mounted","phonesRes","assistantsRes","workflowsRes","getAllPhoneNumbers","fetchAllAgentsComplete","getAllWorkflows","phoneList","p","assistantList","a","workflowList","w","handleSave","config","Megaphone","Label","Input","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","v","Fragment","c","d","u","m","t","f","n","o","s","g","r","i","y","h","T","E","b","I","_","C","k","P","M","x","A","B","l","S","FacebookLeadAdsTrigger","workflowEnabled","onConnectionChange","connectionType","setConnectionType","connectionName","setConnectionName","pages","setPages","leadForms","setLeadForms","selectedPageId","setSelectedPageId","selectedFormId","setSelectedFormId","isConnecting","setIsConnecting","isLoadingForms","setIsLoadingForms","loadStatus","interval","localConnected","backendStatus","facebookService.getFacebookConnectionStatus","facebookService.getFacebookPages","handleWindowFocus","handleStorageChange","allowedOrigins","isLocalhost","fetchedPages","firstPageId","facebookService.getPageLeadForms","forms","formError","storedPages","facebookService.getStoredFacebookPages","performDemoLogin","result","secureLocalStorage","freshPages","backendAvailable","needsAuth","token","healthCheck","oauthUrl","facebookService.generateFacebookOAuthUrl","oauthError","width","height","left","top","testUser","popupError","lastUrl","urlMonitor","currentUrl","resolve","reject","isResolved","authenticationSuccessful","urlObj","redirectParam","decoded","backendOrigin","popupOrigin","popupMonitor","cancellationError","_d","formSection","fallbackError","_e","errMsg","denialError","timeoutError","originalResolve","originalReject","args","isUserCancellation","isTimeout","isPopupBlocked","Facebook","RadioGroup","RadioGroupItem","TextWebhookConfig","setConfig","isLoading","setIsLoading","isTesting","setIsTesting","handleTestSMS","availablePlaceholders","Smartphone","Card","CardHeader","CardTitle","MessageSquare","CardDescription","CardContent","Textarea","item","Badge","textarea","start","end","text","before","after","Phone","Info","WebhookCreator","webhook","workflowName","onBack","selectedTrigger","setSelectedTrigger","selectedApp","setSelectedApp","searchQuery","setSearchQuery","webhookUrl","setWebhookUrl","isTriggerExpanded","setIsTriggerExpanded","actionCards","setActionCards","sidebarOpen","setSidebarOpen","selectedCardForSidebar","setSelectedCardForSidebar","searchParams","setSearchParams","useSearchParams","isCapturing","setIsCapturing","capturedData","setCapturedData","gmailAuthStatus","setGmailAuthStatus","isGmailModalOpen","setIsGmailModalOpen","captureInterval","setCaptureInterval","workflowTitle","setWorkflowTitle","autoSaveInterval","setAutoSaveInterval","isSaving","setIsSaving","workflowState","savedState","setWorkflowEnabled","showTriggerEvents","setShowTriggerEvents","webhookCreated","setWebhookCreated","availableLists","setAvailableLists","capturedWebhookData","setCapturedWebhookData","isEditMode","setIsEditMode","autoSaveTimeout","setAutoSaveTimeout","lastSaved","setLastSaved","hasUnsavedChanges","setHasUnsavedChanges","triggerSidebarOpen","setTriggerSidebarOpen","facebookConnectionType","setFacebookConnectionType","facebookConnectionName","setFacebookConnectionName","facebookConnectionStatus","setFacebookConnectionStatus","facebookPages","setFacebookPages","facebookLeadForms","setFacebookLeadForms","selectedFacebookPage","setSelectedFacebookPage","selectedLeadForm","setSelectedLeadForm","isConnectingFacebook","setIsConnectingFacebook","selectedList","setSelectedList","isCreatingList","setIsCreatingList","newListData","setNewListData","availableApps","Webhook","webhookTriggerEvents","emailParserTriggerEvents","facebookLeadAdsTriggerEvents","getTriggerEvents","actionApps","loadFacebookConnectionStatus","loadAvailableLists","contactService.getAllContactLists","handleCreateList","contactService.createList","currentWebhookId","loadLeadFormsForPage","handleFacebookPageSelect","triggerAutoSave","handleWebhookAppSelect","app","addActionCard","newCard","updateActionCard","cardId","updates","cards","updatedCards","card","updateGmailConfig","field","value","currentConfig","removeActionCard","handleTriggerSelect","trigger","emailAddress","baseUrl","generatedUrl","ensureWebhookRecord","startAutoSave","captureWebhookResponse","latestData","dataTime","capturedWebhookData2","saveWebhookToggleState","enabled","updateData","handleToggleWorkflow","canActivateWithoutUrl","setCurrentWebhookId","errorMessage","autoSaveWebhook","triggerType","triggerTypeId","isEmailParserWebhook","isFacebookLeadAdsWebhook","metadata","handleGmailOAuthSuccess","gmailSuccess","gmailError","email","tempId","returnToWorkflow","cardIdNum","prevCards","newParams","hasActionCardsInMetadata","defaultCard","data","isFacebookLeadAds","payload","createdId","tempUser","ArrowLeft","MoreHorizontal","ChevronDown","Search","page","form","key","Plus","index","React","Database","DropdownMenu","DropdownMenuTrigger","DropdownMenuContent","DropdownMenuItem","Trash2","_f","pollInterval","statusRes","connectedEmail","_h","_g","_i","_j","_k","_l","_m","_n","_o","_p","_q","_r","_s","processPlaceholders","processedText","placeholder","gmailService.sendGmailEmail","Sheet","SheetContent","SheetHeader","SheetTitle","selectedCard","prev","list","configError","createCampaignEvent","connected","Webhooks","currentView","setCurrentView","selectedWebhook","setSelectedWebhook","existingWebhooks","setExistingWebhooks","showNameModal","setShowNameModal","setWorkflowName","isCreatingWorkflow","setIsCreatingWorkflow","view","workflow","existingWorkflow","facebookService.connectFacebookAccount","tryRestoreFrom","saved","loadExistingWebhooks","showLoading","deleteWebhook","viewWebhook","handleCreateWorkflow","handleSaveWorkflowName","tempWorkflowId","filteredWebhooks","handleBackToList","Page","Filter","Download","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","Activity","Calendar","Eye","Settings","DialogFooter"],"mappings":"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","x_google_ignoreList":[4]}