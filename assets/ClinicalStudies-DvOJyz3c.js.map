{"version":3,"file":"ClinicalStudies-DvOJyz3c.js","sources":["../../src/api/services/studyAssignment/studyAssignmentService.ts","../../src/pages/Clinical/ClinicalStudies.jsx"],"sourcesContent":["import axiosInstance from \"@/api/axios/axiosInstance\";\n\n// Get all study assignments\nexport const getAllStudyAssignments = async () => {\n  const response = await axiosInstance.get(\"/api/study-assignments\");\n  return response.data;\n};\n\n// Get study assignment by ID\nexport const getStudyAssignmentById = async (id: string) => {\n  const response = await axiosInstance.get(`/api/study-assignments/${id}`);\n  return response.data;\n};\n\n// Get study assignments by study ID\nexport const getStudyAssignmentsByStudyId = async (studyId: string) => {\n  const response = await axiosInstance.get(`/api/study-assignments/study/${studyId}`);\n  return response.data;\n};\n\n// Get study assignments by user ID\nexport const getStudyAssignmentsByUserId = async (userId: string) => {\n  const response = await axiosInstance.get(`/api/study-assignments/user/${userId}`);\n  return response.data;\n};\n\n// Create study assignment\nexport const createStudyAssignment = async (assignmentData: any) => {\n  const response = await axiosInstance.post(\"/api/study-assignments\", assignmentData);\n  return response.data;\n};\n\n// Update study assignment\nexport const updateStudyAssignment = async (id: string, assignmentData: any) => {\n  const response = await axiosInstance.put(`/api/study-assignments/${id}`, assignmentData);\n  return response.data;\n};\n\n// Remove study assignment\nexport const removeStudyAssignment = async (id: string) => {\n  const response = await axiosInstance.delete(`/api/study-assignments/${id}`);\n  return response.data;\n};\n\n// Get study assignment statistics\nexport const getStudyAssignmentStats = async () => {\n  const response = await axiosInstance.get(\"/api/study-assignments/stats\");\n  return response.data;\n};\n\n// Get available users for study assignment\nexport const getAvailableUsersForStudy = async (studyId: string) => {\n  const response = await axiosInstance.get(`/api/study-assignments/study/${studyId}/available-users`);\n  return response.data;\n};\n\n// Bulk assign users to study\nexport const bulkAssignUsersToStudy = async (studyId: string, assignments: any[]) => {\n  const response = await axiosInstance.post(`/api/study-assignments/study/${studyId}/bulk-assign`, {\n    assignments\n  });\n  return response.data;\n};\n","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Button } from '../../components/ui/button';\nimport { Badge } from '../../components/ui/badge';\nimport { Input } from '../../components/ui/input';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '../../components/ui/dialog';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';\nimport { Label } from '../../components/ui/label';\nimport { Textarea } from '../../components/ui/textarea';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { toast } from 'sonner';\nimport {\n  FileText,\n  Plus,\n  Building2,\n  Users,\n  Calendar,\n  AlertCircle,\n  TrendingUp,\n  Clock,\n  Search,\n  Filter,\n  Edit,\n  Trash2,\n  UserPlus,\n  Loader2,\n  Settings,\n  MapPin\n} from 'lucide-react';\nimport {\n  getAllClinicalStudies,\n  getClinicalStudyStats,\n  createClinicalStudy,\n  assignStudyToSite\n} from '../../api/services/clinicalStudy/clinicalStudyService';\nimport { getAllClinicalSites } from '../../api/services/clinicalSite/clinicalSiteService';\nimport { getAllClinicalUsers } from '../../api/services/clinicalUser/clinicalUserService';\nimport {\n  getStudyAssignmentsByStudyId,\n  createStudyAssignment,\n  removeStudyAssignment,\n  getAvailableUsersForStudy\n} from '../../api/services/studyAssignment/studyAssignmentService';\nimport { getAllClinicalRoles } from '../../api/services/clinicalRole/clinicalRoleService';\n\nconst ClinicalStudies = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const [isAssignDialogOpen, setIsAssignDialogOpen] = useState(false);\n  const [selectedStudyForAssignment, setSelectedStudyForAssignment] = useState(null);\n  const [selectedSiteForAssignment, setSelectedSiteForAssignment] = useState('');\n  const [assignmentNotes, setAssignmentNotes] = useState('');\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedStudy, setSelectedStudy] = useState(null);\n\n  // Form state for creating study\n  const [formData, setFormData] = useState({\n    name: '',\n    study_id: '',\n    description: '',\n    protocol_number: '',\n    principal_investigator_id: '',\n    study_type: 'interventional',\n    phase: 'not_applicable',\n    status: 'not_yet_recruiting',\n    target_enrollment: '',\n    start_date: '',\n    end_date: ''\n  });\n\n  const queryClient = useQueryClient();\n\n  // Fetch clinical studies\n  const { data: studiesData, isLoading: studiesLoading, error: studiesError } = useQuery({\n    queryKey: ['clinicalStudies'],\n    queryFn: getAllClinicalStudies,\n    retry: 1,\n  });\n\n  // Fetch study statistics\n  const { data: statsData, isLoading: statsLoading } = useQuery({\n    queryKey: ['clinicalStudyStats'],\n    queryFn: getClinicalStudyStats,\n    retry: 1,\n  });\n\n  // Fetch clinical sites for dropdown\n  const { data: sitesData } = useQuery({\n    queryKey: ['clinicalSites'],\n    queryFn: getAllClinicalSites,\n    retry: 1,\n  });\n\n  // Fetch clinical users for PI dropdown\n  const { data: usersData } = useQuery({\n    queryKey: ['clinicalUsers'],\n    queryFn: getAllClinicalUsers,\n    retry: 1,\n  });\n\n  // Fetch clinical roles for assignment\n  const { data: rolesData } = useQuery({\n    queryKey: ['clinicalRoles'],\n    queryFn: getAllClinicalRoles,\n    retry: 1,\n  });\n\n  const studies = studiesData?.data || [];\n  const studyStats = statsData?.data || {\n    total_studies: 0,\n    active_studies: 0,\n    recruiting_studies: 0,\n    completed_studies: 0\n  };\n  const clinicalSites = sitesData?.data || [];\n  const clinicalUsers = usersData?.data || [];\n  const clinicalRoles = rolesData?.data || [];\n\n  // Get all users who can be principal investigators (all clinical users)\n  const availableInvestigators = clinicalUsers.map(user => ({\n    id: user.id,\n    name: user.username || `${user.first_name} ${user.last_name}`.trim() || user.email,\n    email: user.email\n  })).filter(user => user.name);\n\n  // Dropdown data matching database schema\n  const studyPhases = [\n    { value: \"early_phase_1\", label: \"Early Phase 1\" },\n    { value: \"phase_1\", label: \"Phase 1\" },\n    { value: \"phase_2\", label: \"Phase 2\" },\n    { value: \"phase_3\", label: \"Phase 3\" },\n    { value: \"phase_4\", label: \"Phase 4\" },\n    { value: \"not_applicable\", label: \"Not Applicable\" }\n  ];\n\n  const studyTypes = [\n    { value: \"interventional\", label: \"Interventional\" },\n    { value: \"observational\", label: \"Observational\" },\n    { value: \"expanded_access\", label: \"Expanded Access\" }\n  ];\n\n  const studyStatuses = [\n    { value: \"not_yet_recruiting\", label: \"Not Yet Recruiting\" },\n    { value: \"recruiting\", label: \"Recruiting\" },\n    { value: \"enrolling_by_invitation\", label: \"Enrolling by Invitation\" },\n    { value: \"active_not_recruiting\", label: \"Active, Not Recruiting\" },\n    { value: \"suspended\", label: \"Suspended\" },\n    { value: \"terminated\", label: \"Terminated\" },\n    { value: \"completed\", label: \"Completed\" },\n    { value: \"withdrawn\", label: \"Withdrawn\" }\n  ];\n\n  // Create study mutation\n  const createStudyMutation = useMutation({\n    mutationFn: createClinicalStudy,\n    onSuccess: () => {\n      toast.success('Study created successfully');\n      queryClient.invalidateQueries({ queryKey: ['clinicalStudies'] });\n      queryClient.invalidateQueries({ queryKey: ['clinicalStudyStats'] });\n      setIsCreateDialogOpen(false);\n      // Reset form\n      setFormData({\n        name: '',\n        study_id: '',\n        description: '',\n        protocol_number: '',\n        principal_investigator_id: '',\n        study_type: 'interventional',\n        phase: 'not_applicable',\n        status: 'not_yet_recruiting',\n        target_enrollment: '',\n        start_date: '',\n        end_date: ''\n      });\n    },\n    onError: (error) => {\n      toast.error(error.response?.data?.message || 'Failed to create study');\n    },\n  });\n\n  // Study assignment mutation\n  const assignUserMutation = useMutation({\n    mutationFn: createStudyAssignment,\n    onSuccess: () => {\n      queryClient.invalidateQueries(['studyAssignments']);\n      toast.success('User assigned to study successfully!');\n      setIsAssignDialogOpen(false);\n      setSelectedUserForAssignment('');\n      setSelectedRoleForAssignment('');\n      setSelectedStudyForAssignment(null);\n    },\n    onError: (error) => {\n      toast.error('Failed to assign user: ' + error.message);\n    },\n  });\n\n  // Site assignment mutation\n  const assignSiteMutation = useMutation({\n    mutationFn: ({ studyId, siteId, notes }) => assignStudyToSite(studyId, siteId, notes),\n    onSuccess: () => {\n      queryClient.invalidateQueries(['clinicalStudies']);\n      queryClient.invalidateQueries(['clinicalSites']);\n      toast.success('Study assigned to site successfully!');\n      setIsAssignDialogOpen(false);\n      setSelectedSiteForAssignment('');\n      setAssignmentNotes('');\n      setSelectedStudyForAssignment(null);\n    },\n    onError: (error) => {\n      toast.error('Failed to assign study to site: ' + error.message);\n    },\n  });\n\n  const handleCreateStudy = () => {\n    // Validation\n    if (!formData.name || !formData.study_id || !formData.protocol_number) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n\n    // Prepare data for API\n    const studyData = {\n      ...formData,\n      principal_investigator_id: formData.principal_investigator_id ? parseInt(formData.principal_investigator_id) : null,\n      target_enrollment: formData.target_enrollment ? parseInt(formData.target_enrollment) : 0\n    };\n\n    createStudyMutation.mutate(studyData);\n  };\n\n  const handleFormChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleAssignSite = () => {\n    if (!selectedStudyForAssignment || !selectedSiteForAssignment) {\n      toast.error('Please select a clinical site');\n      return;\n    }\n\n    assignSiteMutation.mutate({\n      studyId: selectedStudyForAssignment.id.toString(),\n      siteId: selectedSiteForAssignment,\n      notes: assignmentNotes\n    });\n  };\n\n  const openAssignDialog = (study) => {\n    setSelectedStudyForAssignment(study);\n    setSelectedSiteForAssignment('');\n    setAssignmentNotes('');\n    setIsAssignDialogOpen(true);\n  };\n\n  // Handler functions for button functionality\n  const handleEditStudy = (study) => {\n    setSelectedStudy(study);\n    // Populate form with existing data\n    setFormData({\n      name: study.name || '',\n      study_id: study.study_id || '',\n      description: study.description || '',\n      protocol_number: study.protocol_number || '',\n      principal_investigator_id: study.principal_investigator_id?.toString() || '',\n      study_type: study.study_type || 'interventional',\n      phase: study.phase || 'not_applicable',\n      status: study.status || 'planning',\n      start_date: study.start_date || '',\n      end_date: study.end_date || '',\n      target_enrollment: study.target_enrollment || ''\n    });\n    setIsCreateDialogOpen(true);\n  };\n\n  const handleManageStudy = (study) => {\n    toast.info(`Opening management panel for \"${study.name}\"`);\n    // TODO: Implement study management functionality\n  };\n\n  const handleViewParticipants = (study) => {\n    toast.info(`Viewing participants for \"${study.name}\"`);\n    // TODO: Navigate to participants page or open participants modal\n  };\n\n  const handleViewTimeline = (study) => {\n    toast.info(`Viewing timeline for \"${study.name}\"`);\n    // TODO: Open timeline view or navigate to timeline page\n  };\n\n  const handleViewDocuments = (study) => {\n    toast.info(`Viewing documents for \"${study.name}\"`);\n    // TODO: Open documents panel or navigate to documents page\n  };\n\n  const toggleFilters = () => {\n    setShowFilters(!showFilters);\n  };\n\n  const getStatusBadge = (status) => {\n    const statusColors = {\n      'recruiting': 'bg-blue-100 text-blue-800',\n      'not_yet_recruiting': 'bg-yellow-100 text-yellow-800',\n      'active': 'bg-green-100 text-green-800',\n      'suspended': 'bg-yellow-100 text-yellow-800',\n      'completed': 'bg-gray-100 text-gray-800',\n      'terminated': 'bg-red-100 text-red-800'\n    };\n    return statusColors[status] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getPhaseBadge = (phase) => {\n    const phaseColors = {\n      'phase_1': 'bg-purple-100 text-purple-800',\n      'phase_2': 'bg-blue-100 text-blue-800',\n      'phase_3': 'bg-green-100 text-green-800',\n      'phase_4': 'bg-orange-100 text-orange-800',\n      'post_market': 'bg-gray-100 text-gray-800'\n    };\n    return phaseColors[phase] || 'bg-gray-100 text-gray-800';\n  };\n\n  const formatPhase = (phase) => {\n    const phaseLabels = {\n      'phase_1': 'Phase I',\n      'phase_2': 'Phase II',\n      'phase_3': 'Phase III',\n      'phase_4': 'Phase IV',\n      'post_market': 'Post Market'\n    };\n    return phaseLabels[phase] || phase;\n  };\n\n  const formatStatus = (status) => {\n    const statusLabels = {\n      'recruiting': 'Recruiting',\n      'not_yet_recruiting': 'Not Yet Recruiting',\n      'active': 'Active',\n      'suspended': 'Suspended',\n      'completed': 'Completed',\n      'terminated': 'Terminated'\n    };\n    return statusLabels[status] || status;\n  };\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Clinical Studies</h1>\n          <p className=\"text-gray-600 mt-1\">Manage clinical research studies and trials</p>\n        </div>\n        \n        <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n          <DialogTrigger asChild>\n            <Button>\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Create New Study\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\" aria-describedby=\"create-study-description\">\n            <DialogHeader>\n              <DialogTitle>{selectedStudy ? 'Edit Clinical Study' : 'Create New Clinical Study'}</DialogTitle>\n              <DialogDescription id=\"create-study-description\">\n                {selectedStudy ? 'Update the clinical research study information.' : 'Fill out the form below to create a new clinical research study. All required fields must be completed.'}\n              </DialogDescription>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"studyName\">Study Name *</Label>\n                  <Input\n                    id=\"studyName\"\n                    placeholder=\"Enter study name\"\n                    value={formData.name}\n                    onChange={(e) => handleFormChange('name', e.target.value)}\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"studyCode\">Study Code *</Label>\n                  <Input\n                    id=\"studyCode\"\n                    placeholder=\"e.g., STUDY2024\"\n                    value={formData.study_id}\n                    onChange={(e) => handleFormChange('study_id', e.target.value)}\n                  />\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"description\">Description</Label>\n                <Textarea\n                  id=\"description\"\n                  placeholder=\"Enter study description\"\n                  rows={3}\n                  value={formData.description}\n                  onChange={(e) => handleFormChange('description', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <Label htmlFor=\"pi\">Principal Investigator</Label>\n                <Select value={formData.principal_investigator_id} onValueChange={(value) => handleFormChange('principal_investigator_id', value)}>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select PI (optional)\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {availableInvestigators.map((pi) => (\n                      <SelectItem key={pi.id} value={pi.id.toString()}>\n                        {pi.name}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"grid grid-cols-3 gap-4\">\n                <div>\n                  <Label htmlFor=\"type\">Study Type</Label>\n                  <Select value={formData.study_type} onValueChange={(value) => handleFormChange('study_type', value)}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select type\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {studyTypes.map((type) => (\n                        <SelectItem key={type.value} value={type.value}>{type.label}</SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Label htmlFor=\"phase\">Phase</Label>\n                  <Select value={formData.phase} onValueChange={(value) => handleFormChange('phase', value)}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select phase\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {studyPhases.map((phase) => (\n                        <SelectItem key={phase.value} value={phase.value}>{phase.label}</SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Label htmlFor=\"targetEnrollment\">Target Enrollment</Label>\n                  <Input\n                    id=\"targetEnrollment\"\n                    type=\"number\"\n                    placeholder=\"100\"\n                    value={formData.target_enrollment}\n                    onChange={(e) => handleFormChange('target_enrollment', e.target.value)}\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"startDate\">Start Date</Label>\n                  <Input\n                    id=\"startDate\"\n                    type=\"date\"\n                    value={formData.start_date}\n                    onChange={(e) => handleFormChange('start_date', e.target.value)}\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"endDate\">Expected End Date</Label>\n                  <Input\n                    id=\"endDate\"\n                    type=\"date\"\n                    value={formData.end_date}\n                    onChange={(e) => handleFormChange('end_date', e.target.value)}\n                  />\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"protocolNumber\">Protocol Number *</Label>\n                <Input\n                  id=\"protocolNumber\"\n                  placeholder=\"Enter protocol number\"\n                  value={formData.protocol_number}\n                  onChange={(e) => handleFormChange('protocol_number', e.target.value)}\n                />\n              </div>\n\n              <div className=\"flex justify-end space-x-2 pt-4\">\n                <Button variant=\"outline\" onClick={() => {\n                  setIsCreateDialogOpen(false);\n                  setSelectedStudy(null);\n                  setFormData({\n                    name: '',\n                    study_id: '',\n                    description: '',\n                    protocol_number: '',\n                    principal_investigator_id: '',\n                    study_type: 'interventional',\n                    phase: 'not_applicable',\n                    status: 'planning',\n                    start_date: '',\n                    end_date: '',\n                    target_enrollment: ''\n                  });\n                }}>\n                  Cancel\n                </Button>\n                <Button\n                  onClick={handleCreateStudy}\n                  disabled={createStudyMutation.isPending}\n                >\n                  {createStudyMutation.isPending ? (\n                    <>\n                      <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                      {selectedStudy ? 'Updating...' : 'Creating...'}\n                    </>\n                  ) : (\n                    <>\n                      {selectedStudy ? <Edit className=\"h-4 w-4 mr-2\" /> : <Plus className=\"h-4 w-4 mr-2\" />}\n                      {selectedStudy ? 'Update Study' : 'Create Study'}\n                    </>\n                  )}\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n\n        {/* Study Site Assignment Dialog */}\n        <Dialog open={isAssignDialogOpen} onOpenChange={setIsAssignDialogOpen}>\n          <DialogContent className=\"max-w-md\" aria-describedby=\"assign-site-description\">\n            <DialogHeader>\n              <DialogTitle>Assign Study to Site</DialogTitle>\n              <DialogDescription id=\"assign-site-description\">\n                Assign {selectedStudyForAssignment?.name} to a clinical site for patient recruitment.\n              </DialogDescription>\n            </DialogHeader>\n\n            <div className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"site-select\">Select Clinical Site</Label>\n                <Select value={selectedSiteForAssignment} onValueChange={setSelectedSiteForAssignment}>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Choose a clinical site\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {clinicalSites.map((site) => (\n                      <SelectItem key={site.id} value={site.id.toString()}>\n                        {site.site_name} ({site.site_code})\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div>\n                <Label htmlFor=\"notes\">Assignment Notes (Optional)</Label>\n                <textarea\n                  id=\"notes\"\n                  className=\"w-full p-2 border border-gray-300 rounded-md\"\n                  rows=\"3\"\n                  placeholder=\"Add any notes about this site assignment...\"\n                  value={assignmentNotes}\n                  onChange={(e) => setAssignmentNotes(e.target.value)}\n                />\n              </div>\n\n              <div className=\"flex justify-end space-x-2 pt-4\">\n                <Button variant=\"outline\" onClick={() => setIsAssignDialogOpen(false)}>\n                  Cancel\n                </Button>\n                <Button\n                  onClick={handleAssignSite}\n                  disabled={!selectedSiteForAssignment || assignSiteMutation.isPending}\n                >\n                  {assignSiteMutation.isPending ? (\n                    <>\n                      <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                      Assigning...\n                    </>\n                  ) : (\n                    <>\n                      <MapPin className=\"h-4 w-4 mr-2\" />\n                      Assign to Site\n                    </>\n                  )}\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Statistics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Studies</CardTitle>\n            <FileText className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <div className=\"text-2xl font-bold\">--</div>\n            ) : (\n              <div className=\"text-2xl font-bold\">{studyStats.total_studies}</div>\n            )}\n            <p className=\"text-xs text-muted-foreground\">Across all sites</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Studies</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <div className=\"text-2xl font-bold\">--</div>\n            ) : (\n              <div className=\"text-2xl font-bold\">{studyStats.active_studies}</div>\n            )}\n            <p className=\"text-xs text-muted-foreground\">Currently active</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Recruiting</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <div className=\"text-2xl font-bold\">--</div>\n            ) : (\n              <div className=\"text-2xl font-bold\">{studyStats.recruiting_studies}</div>\n            )}\n            <p className=\"text-xs text-muted-foreground\">Open for enrollment</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Completed</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <div className=\"text-2xl font-bold\">--</div>\n            ) : (\n              <div className=\"text-2xl font-bold\">{studyStats.completed_studies}</div>\n            )}\n            <p className=\"text-xs text-muted-foreground\">Finished studies</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Studies List */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex justify-between items-center\">\n            <CardTitle>Clinical Studies Management</CardTitle>\n            <div className=\"flex space-x-2\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  placeholder=\"Search studies...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-8 w-64\"\n                />\n              </div>\n              <Button variant=\"outline\" size=\"sm\" onClick={toggleFilters}>\n                <Filter className=\"h-4 w-4 mr-2\" />\n                Filter\n              </Button>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          {studiesLoading ? (\n            <div className=\"flex items-center justify-center py-12\">\n              <Loader2 className=\"h-8 w-8 animate-spin text-gray-400\" />\n              <span className=\"ml-2 text-gray-600\">Loading clinical studies...</span>\n            </div>\n          ) : studiesError ? (\n            <div className=\"text-center py-12\">\n              <AlertCircle className=\"h-12 w-12 text-red-300 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Error Loading Studies</h3>\n              <p className=\"text-gray-600 mb-4\">Failed to load clinical studies. Please try again.</p>\n            </div>\n          ) : studies.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <FileText className=\"h-12 w-12 text-gray-300 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">No Studies Found</h3>\n              <p className=\"text-gray-600 mb-4\">No clinical studies have been created yet.</p>\n              <Button onClick={() => setIsCreateDialogOpen(true)}>\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Create First Study\n              </Button>\n            </div>\n          ) : (\n            <div className=\"space-y-6\">\n              {studies.map((study) => (\n              <div key={study.id} className=\"border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow\">\n                <div className=\"flex justify-between items-start mb-4\">\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900\">{study.name}</h3>\n                    <p className=\"text-sm text-gray-500\">Protocol: {study.protocol_number}</p>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Badge className={getStatusBadge(study.status)}>\n                      {formatStatus(study.status)}\n                    </Badge>\n                    <Badge className={getPhaseBadge(study.phase)}>\n                      {formatPhase(study.phase)}\n                    </Badge>\n                    <div className=\"flex space-x-1\">\n                      <Button variant=\"outline\" size=\"sm\" onClick={() => handleEditStudy(study)}>\n                        <Edit className=\"h-4 w-4 mr-1\" />\n                        Edit\n                      </Button>\n                      <Button variant=\"outline\" size=\"sm\" onClick={() => openAssignDialog(study)}>\n                        <MapPin className=\"h-4 w-4 mr-1\" />\n                        Assign to Site\n                      </Button>\n                      <Button variant=\"outline\" size=\"sm\" onClick={() => handleManageStudy(study)}>\n                        <Settings className=\"h-4 w-4 mr-1\" />\n                        Manage\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-4\">\n                  <div className=\"flex items-start space-x-2\">\n                    <Building2 className=\"h-4 w-4 text-gray-400 mt-0.5\" />\n                    <div>\n                      <p className=\"text-sm font-medium\">Site</p>\n                      <p className=\"text-sm text-gray-600\">{study.site}</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start space-x-2\">\n                    <FileText className=\"h-4 w-4 text-gray-400 mt-0.5\" />\n                    <div>\n                      <p className=\"text-sm font-medium\">Type</p>\n                      <p className=\"text-sm text-gray-600\">{study.type}</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start space-x-2\">\n                    <Calendar className=\"h-4 w-4 text-gray-400 mt-0.5\" />\n                    <div>\n                      <p className=\"text-sm font-medium\">Start Date</p>\n                      <p className=\"text-sm text-gray-600\">{study.startDate}</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start space-x-2\">\n                    <Users className=\"h-4 w-4 text-gray-400 mt-0.5\" />\n                    <div>\n                      <p className=\"text-sm font-medium\">Principal Investigator</p>\n                      <p className=\"text-sm text-gray-600\">{study.principalInvestigator}</p>\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Enrollment Progress */}\n                <div className=\"mb-4\">\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"text-sm font-medium\">Enrollment Progress</span>\n                    <span className=\"text-sm text-gray-600\">\n                      {study.currentEnrollment} / {study.targetEnrollment} participants\n                    </span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div \n                      className=\"bg-blue-600 h-2 rounded-full\" \n                      style={{ width: `${(study.currentEnrollment / study.targetEnrollment) * 100}%` }}\n                    ></div>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center justify-between pt-4 border-t border-gray-100\">\n                  <div className=\"flex items-center space-x-4\">\n                    <span className=\"text-sm text-gray-600\">\n                      <strong>0%</strong> Enrolled\n                    </span>\n                    <span className=\"text-sm text-gray-600\">\n                      Target: <strong>{study.targetEnrollment}</strong>\n                    </span>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <Button variant=\"outline\" size=\"sm\" onClick={() => handleViewParticipants(study)}>\n                      <Users className=\"h-4 w-4 mr-1\" />\n                      Participants\n                    </Button>\n                    <Button variant=\"outline\" size=\"sm\" onClick={() => handleViewTimeline(study)}>\n                      <Clock className=\"h-4 w-4 mr-1\" />\n                      Timeline\n                    </Button>\n                    <Button variant=\"outline\" size=\"sm\" onClick={() => handleViewDocuments(study)}>\n                      <FileText className=\"h-4 w-4 mr-1\" />\n                      Documents\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            ))}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Development Notice */}\n      <Card className=\"border-yellow-200 bg-yellow-50\">\n        <CardContent className=\"flex items-center space-x-3 pt-6\">\n          <AlertCircle className=\"h-5 w-5 text-yellow-600\" />\n          <div>\n            <h3 className=\"font-medium text-yellow-800\">Study Management System</h3>\n            <p className=\"text-sm text-yellow-700\">\n              This is a preview of the Clinical Studies management system. Full functionality including \n              study creation, participant enrollment, timeline management, and document handling will be \n              implemented in the next phase.\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default ClinicalStudies;\n"],"names":["createStudyAssignment","assignmentData","axiosInstance","ClinicalStudies","searchTerm","setSearchTerm","useState","isCreateDialogOpen","setIsCreateDialogOpen","isAssignDialogOpen","setIsAssignDialogOpen","selectedStudyForAssignment","setSelectedStudyForAssignment","selectedSiteForAssignment","setSelectedSiteForAssignment","assignmentNotes","setAssignmentNotes","showFilters","setShowFilters","selectedStudy","setSelectedStudy","formData","setFormData","queryClient","useQueryClient","studiesData","studiesLoading","studiesError","useQuery","getAllClinicalStudies","statsData","statsLoading","getClinicalStudyStats","sitesData","getAllClinicalSites","usersData","getAllClinicalUsers","rolesData","getAllClinicalRoles","studies","studyStats","clinicalSites","clinicalUsers","availableInvestigators","user","studyPhases","studyTypes","createStudyMutation","useMutation","createClinicalStudy","toast","error","_b","_a","assignSiteMutation","studyId","siteId","notes","assignStudyToSite","handleCreateStudy","studyData","handleFormChange","field","value","prev","handleAssignSite","openAssignDialog","study","handleEditStudy","handleManageStudy","handleViewParticipants","handleViewTimeline","handleViewDocuments","toggleFilters","getStatusBadge","status","getPhaseBadge","phase","formatPhase","formatStatus","jsxs","jsx","Dialog","DialogTrigger","Button","Plus","DialogContent","DialogHeader","DialogTitle","DialogDescription","Label","Input","e","Textarea","Select","SelectTrigger","SelectValue","SelectContent","pi","SelectItem","type","Fragment","Loader2","Edit","site","MapPin","Card","CardHeader","CardTitle","FileText","CardContent","TrendingUp","Users","Search","Filter","AlertCircle","Badge","Settings","Building2","Calendar","Clock"],"mappings":"8gCA2Ba,MAAAA,GAAwB,MAAOC,IACzB,MAAMC,GAAc,KAAK,yBAA0BD,CAAc,GAClE,KCgBZE,GAAkB,IAAM,CAC5B,KAAM,CAACC,EAAYC,CAAa,EAAIC,EAAAA,SAAS,EAAE,EACzC,CAACC,GAAoBC,CAAqB,EAAIF,EAAAA,SAAS,EAAK,EAC5D,CAACG,GAAoBC,CAAqB,EAAIJ,EAAAA,SAAS,EAAK,EAC5D,CAACK,EAA4BC,CAA6B,EAAIN,EAAAA,SAAS,IAAI,EAC3E,CAACO,EAA2BC,CAA4B,EAAIR,EAAAA,SAAS,EAAE,EACvE,CAACS,EAAiBC,CAAkB,EAAIV,EAAAA,SAAS,EAAE,EACnD,CAACW,GAAaC,EAAc,EAAIZ,EAAAA,SAAS,EAAK,EAC9C,CAACa,EAAeC,CAAgB,EAAId,EAAAA,SAAS,IAAI,EAGjD,CAACe,EAAUC,CAAW,EAAIhB,WAAS,CACvC,KAAM,GACN,SAAU,GACV,YAAa,GACb,gBAAiB,GACjB,0BAA2B,GAC3B,WAAY,iBACZ,MAAO,iBACP,OAAQ,qBACR,kBAAmB,GACnB,WAAY,GACZ,SAAU,EAAA,CACX,EAEKiB,EAAcC,GAAe,EAG7B,CAAE,KAAMC,EAAa,UAAWC,GAAgB,MAAOC,IAAiBC,EAAS,CACrF,SAAU,CAAC,iBAAiB,EAC5B,QAASC,GACT,MAAO,CAAA,CACR,EAGK,CAAE,KAAMC,EAAW,UAAWC,CAAA,EAAiBH,EAAS,CAC5D,SAAU,CAAC,oBAAoB,EAC/B,QAASI,GACT,MAAO,CAAA,CACR,EAGK,CAAE,KAAMC,CAAU,EAAIL,EAAS,CACnC,SAAU,CAAC,eAAe,EAC1B,QAASM,GACT,MAAO,CAAA,CACR,EAGK,CAAE,KAAMC,CAAU,EAAIP,EAAS,CACnC,SAAU,CAAC,eAAe,EAC1B,QAASQ,GACT,MAAO,CAAA,CACR,EAGK,CAAE,KAAMC,CAAU,EAAIT,EAAS,CACnC,SAAU,CAAC,eAAe,EAC1B,QAASU,GACT,MAAO,CAAA,CACR,EAEKC,GAAUd,GAAA,YAAAA,EAAa,OAAQ,CAAC,EAChCe,GAAaV,GAAA,YAAAA,EAAW,OAAQ,CACpC,cAAe,EACf,eAAgB,EAChB,mBAAoB,EACpB,kBAAmB,CACrB,EACMW,IAAgBR,GAAA,YAAAA,EAAW,OAAQ,CAAC,EACpCS,IAAgBP,GAAA,YAAAA,EAAW,OAAQ,CAAC,EACpBE,GAAA,MAAAA,EAAW,KAG3B,MAAAM,GAAyBD,GAAc,IAAaE,IAAA,CACxD,GAAIA,EAAK,GACT,KAAMA,EAAK,UAAY,GAAGA,EAAK,UAAU,IAAIA,EAAK,SAAS,GAAG,KAAK,GAAKA,EAAK,MAC7E,MAAOA,EAAK,KACZ,EAAA,EAAE,OAAOA,GAAQA,EAAK,IAAI,EAGtBC,GAAc,CAClB,CAAE,MAAO,gBAAiB,MAAO,eAAgB,EACjD,CAAE,MAAO,UAAW,MAAO,SAAU,EACrC,CAAE,MAAO,UAAW,MAAO,SAAU,EACrC,CAAE,MAAO,UAAW,MAAO,SAAU,EACrC,CAAE,MAAO,UAAW,MAAO,SAAU,EACrC,CAAE,MAAO,iBAAkB,MAAO,gBAAiB,CACrD,EAEMC,GAAa,CACjB,CAAE,MAAO,iBAAkB,MAAO,gBAAiB,EACnD,CAAE,MAAO,gBAAiB,MAAO,eAAgB,EACjD,CAAE,MAAO,kBAAmB,MAAO,iBAAkB,CACvD,EAcMC,EAAsBC,EAAY,CACtC,WAAYC,GACZ,UAAW,IAAM,CACfC,EAAM,QAAQ,4BAA4B,EAC1C3B,EAAY,kBAAkB,CAAE,SAAU,CAAC,iBAAiB,EAAG,EAC/DA,EAAY,kBAAkB,CAAE,SAAU,CAAC,oBAAoB,EAAG,EAClEf,EAAsB,EAAK,EAEfc,EAAA,CACV,KAAM,GACN,SAAU,GACV,YAAa,GACb,gBAAiB,GACjB,0BAA2B,GAC3B,WAAY,iBACZ,MAAO,iBACP,OAAQ,qBACR,kBAAmB,GACnB,WAAY,GACZ,SAAU,EAAA,CACX,CACH,EACA,QAAU6B,GAAU,SAClBD,EAAM,QAAME,GAAAC,EAAAF,EAAM,WAAN,YAAAE,EAAgB,OAAhB,YAAAD,EAAsB,UAAW,wBAAwB,CAAA,CACvE,CACD,EAG0BJ,EAAY,CACrC,WAAYhD,GACZ,UAAW,IAAM,CACHuB,EAAA,kBAAkB,CAAC,kBAAkB,CAAC,EAClD2B,EAAM,QAAQ,sCAAsC,EACpDxC,EAAsB,EAAK,EAC3B,6BAA6B,EAAE,EAC/B,6BAA6B,EAAE,EAC/BE,EAA8B,IAAI,CACpC,EACA,QAAUuC,GAAU,CACZD,EAAA,MAAM,0BAA4BC,EAAM,OAAO,CAAA,CAExD,CAAA,EAGD,MAAMG,EAAqBN,EAAY,CACrC,WAAY,CAAC,CAAE,QAAAO,EAAS,OAAAC,EAAQ,MAAAC,CAAY,IAAAC,GAAkBH,EAASC,EAAQC,CAAK,EACpF,UAAW,IAAM,CACHlC,EAAA,kBAAkB,CAAC,iBAAiB,CAAC,EACrCA,EAAA,kBAAkB,CAAC,eAAe,CAAC,EAC/C2B,EAAM,QAAQ,sCAAsC,EACpDxC,EAAsB,EAAK,EAC3BI,EAA6B,EAAE,EAC/BE,EAAmB,EAAE,EACrBJ,EAA8B,IAAI,CACpC,EACA,QAAUuC,GAAU,CACZD,EAAA,MAAM,mCAAqCC,EAAM,OAAO,CAAA,CAChE,CACD,EAEKQ,GAAoB,IAAM,CAE1B,GAAA,CAACtC,EAAS,MAAQ,CAACA,EAAS,UAAY,CAACA,EAAS,gBAAiB,CACrE6B,EAAM,MAAM,oCAAoC,EAChD,MAAA,CAIF,MAAMU,EAAY,CAChB,GAAGvC,EACH,0BAA2BA,EAAS,0BAA4B,SAASA,EAAS,yBAAyB,EAAI,KAC/G,kBAAmBA,EAAS,kBAAoB,SAASA,EAAS,iBAAiB,EAAI,CACzF,EAEA0B,EAAoB,OAAOa,CAAS,CACtC,EAEMC,EAAmB,CAACC,EAAOC,IAAU,CACzCzC,EAAqB0C,IAAA,CACnB,GAAGA,EACH,CAACF,CAAK,EAAGC,CAAA,EACT,CACJ,EAEME,GAAmB,IAAM,CACzB,GAAA,CAACtD,GAA8B,CAACE,EAA2B,CAC7DqC,EAAM,MAAM,+BAA+B,EAC3C,MAAA,CAGFI,EAAmB,OAAO,CACxB,QAAS3C,EAA2B,GAAG,SAAS,EAChD,OAAQE,EACR,MAAOE,CAAA,CACR,CACH,EAEMmD,GAAoBC,GAAU,CAClCvD,EAA8BuD,CAAK,EACnCrD,EAA6B,EAAE,EAC/BE,EAAmB,EAAE,EACrBN,EAAsB,EAAI,CAC5B,EAGM0D,GAAmBD,GAAU,OACjC/C,EAAiB+C,CAAK,EAEV7C,EAAA,CACV,KAAM6C,EAAM,MAAQ,GACpB,SAAUA,EAAM,UAAY,GAC5B,YAAaA,EAAM,aAAe,GAClC,gBAAiBA,EAAM,iBAAmB,GAC1C,4BAA2Bd,EAAAc,EAAM,4BAAN,YAAAd,EAAiC,aAAc,GAC1E,WAAYc,EAAM,YAAc,iBAChC,MAAOA,EAAM,OAAS,iBACtB,OAAQA,EAAM,QAAU,WACxB,WAAYA,EAAM,YAAc,GAChC,SAAUA,EAAM,UAAY,GAC5B,kBAAmBA,EAAM,mBAAqB,EAAA,CAC/C,EACD3D,EAAsB,EAAI,CAC5B,EAEM6D,GAAqBF,GAAU,CACnCjB,EAAM,KAAK,iCAAiCiB,EAAM,IAAI,GAAG,CAE3D,EAEMG,GAA0BH,GAAU,CACxCjB,EAAM,KAAK,6BAA6BiB,EAAM,IAAI,GAAG,CAEvD,EAEMI,GAAsBJ,GAAU,CACpCjB,EAAM,KAAK,yBAAyBiB,EAAM,IAAI,GAAG,CAEnD,EAEMK,GAAuBL,GAAU,CACrCjB,EAAM,KAAK,0BAA0BiB,EAAM,IAAI,GAAG,CAEpD,EAEMM,GAAgB,IAAM,CAC1BvD,GAAe,CAACD,EAAW,CAC7B,EAEMyD,GAAkBC,IACD,CACnB,WAAc,4BACd,mBAAsB,gCACtB,OAAU,8BACV,UAAa,gCACb,UAAa,4BACb,WAAc,yBAChB,GACoBA,CAAM,GAAK,4BAG3BC,GAAiBC,IACD,CAClB,QAAW,gCACX,QAAW,4BACX,QAAW,8BACX,QAAW,gCACX,YAAe,2BACjB,GACmBA,CAAK,GAAK,4BAGzBC,GAAeD,IACC,CAClB,QAAW,UACX,QAAW,WACX,QAAW,YACX,QAAW,WACX,YAAe,aACjB,GACmBA,CAAK,GAAKA,EAGzBE,GAAgBJ,IACC,CACnB,WAAc,aACd,mBAAsB,qBACtB,OAAU,SACV,UAAa,YACb,UAAa,YACb,WAAc,YAChB,GACoBA,CAAM,GAAKA,EAI/B,OAAAK,EAAA,KAAC,MAAI,CAAA,UAAU,gBAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAgB,mBAAA,EAChEA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAA2C,6CAAA,CAAA,CAAA,EAC/E,EAECD,EAAA,KAAAE,GAAA,CAAO,KAAM3E,GAAoB,aAAcC,EAC9C,SAAA,CAAAyE,MAACE,GAAc,CAAA,QAAO,GACpB,SAAAH,EAAA,KAACI,EACC,CAAA,SAAA,CAACH,EAAAA,IAAAI,EAAA,CAAK,UAAU,cAAe,CAAA,EAAE,kBAAA,CAAA,CAEnC,CACF,CAAA,EACCL,EAAA,KAAAM,GAAA,CAAc,UAAU,yCAAyC,mBAAiB,2BACjF,SAAA,CAAAN,OAACO,GACC,CAAA,SAAA,CAACN,EAAA,IAAAO,GAAA,CAAa,SAAgBrE,EAAA,sBAAwB,4BAA4B,QACjFsE,GAAkB,CAAA,GAAG,2BACnB,SAAAtE,EAAgB,kDAAoD,yGACvE,CAAA,CAAA,EACF,EACA6D,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACC,EAAA,IAAAS,EAAA,CAAM,QAAQ,YAAY,SAAY,eAAA,EACvCT,EAAA,IAACU,EAAA,CACC,GAAG,YACH,YAAY,mBACZ,MAAOtE,EAAS,KAChB,SAAWuE,GAAM/B,EAAiB,OAAQ+B,EAAE,OAAO,KAAK,CAAA,CAAA,CAC1D,EACF,SACC,MACC,CAAA,SAAA,CAACX,EAAA,IAAAS,EAAA,CAAM,QAAQ,YAAY,SAAY,eAAA,EACvCT,EAAA,IAACU,EAAA,CACC,GAAG,YACH,YAAY,kBACZ,MAAOtE,EAAS,SAChB,SAAWuE,GAAM/B,EAAiB,WAAY+B,EAAE,OAAO,KAAK,CAAA,CAAA,CAC9D,CACF,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACX,EAAA,IAAAS,EAAA,CAAM,QAAQ,cAAc,SAAW,cAAA,EACxCT,EAAA,IAACY,GAAA,CACC,GAAG,cACH,YAAY,0BACZ,KAAM,EACN,MAAOxE,EAAS,YAChB,SAAWuE,GAAM/B,EAAiB,cAAe+B,EAAE,OAAO,KAAK,CAAA,CAAA,CACjE,EACF,SAEC,MACC,CAAA,SAAA,CAACX,EAAA,IAAAS,EAAA,CAAM,QAAQ,KAAK,SAAsB,yBAAA,EAC1CV,EAAAA,KAACc,EAAO,CAAA,MAAOzE,EAAS,0BAA2B,cAAgB0C,GAAUF,EAAiB,4BAA6BE,CAAK,EAC9H,SAAA,CAAAkB,MAACc,EACC,CAAA,SAAAd,EAAA,IAACe,EAAY,CAAA,YAAY,sBAAuB,CAAA,EAClD,QACCC,EACE,CAAA,SAAAtD,GAAuB,IAAKuD,SAC1BC,EAAuB,CAAA,MAAOD,EAAG,GAAG,SAClC,EAAA,SAAAA,EAAG,MADWA,EAAG,EAEpB,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAlB,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACC,EAAA,IAAAS,EAAA,CAAM,QAAQ,OAAO,SAAU,aAAA,EAChCV,EAAAA,KAACc,EAAO,CAAA,MAAOzE,EAAS,WAAY,cAAgB0C,GAAUF,EAAiB,aAAcE,CAAK,EAChG,SAAA,CAAAkB,MAACc,EACC,CAAA,SAAAd,EAAA,IAACe,EAAY,CAAA,YAAY,aAAc,CAAA,EACzC,QACCC,EACE,CAAA,SAAAnD,GAAW,IAAKsD,GACdnB,EAAAA,IAAAkB,EAAA,CAA4B,MAAOC,EAAK,MAAQ,SAAKA,EAAA,OAArCA,EAAK,KAAsC,CAC7D,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACnB,EAAA,IAAAS,EAAA,CAAM,QAAQ,QAAQ,SAAK,QAAA,EAC5BV,EAAAA,KAACc,EAAO,CAAA,MAAOzE,EAAS,MAAO,cAAgB0C,GAAUF,EAAiB,QAASE,CAAK,EACtF,SAAA,CAAAkB,MAACc,EACC,CAAA,SAAAd,EAAA,IAACe,EAAY,CAAA,YAAY,cAAe,CAAA,EAC1C,QACCC,EACE,CAAA,SAAApD,GAAY,IAAKgC,GACfI,EAAAA,IAAAkB,EAAA,CAA6B,MAAOtB,EAAM,MAAQ,SAAMA,EAAA,OAAxCA,EAAM,KAAwC,CAChE,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACI,EAAA,IAAAS,EAAA,CAAM,QAAQ,mBAAmB,SAAiB,oBAAA,EACnDT,EAAA,IAACU,EAAA,CACC,GAAG,mBACH,KAAK,SACL,YAAY,MACZ,MAAOtE,EAAS,kBAChB,SAAWuE,GAAM/B,EAAiB,oBAAqB+B,EAAE,OAAO,KAAK,CAAA,CAAA,CACvE,CACF,CAAA,CAAA,EACF,EAEAZ,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACC,EAAA,IAAAS,EAAA,CAAM,QAAQ,YAAY,SAAU,aAAA,EACrCT,EAAA,IAACU,EAAA,CACC,GAAG,YACH,KAAK,OACL,MAAOtE,EAAS,WAChB,SAAWuE,GAAM/B,EAAiB,aAAc+B,EAAE,OAAO,KAAK,CAAA,CAAA,CAChE,EACF,SACC,MACC,CAAA,SAAA,CAACX,EAAA,IAAAS,EAAA,CAAM,QAAQ,UAAU,SAAiB,oBAAA,EAC1CT,EAAA,IAACU,EAAA,CACC,GAAG,UACH,KAAK,OACL,MAAOtE,EAAS,SAChB,SAAWuE,GAAM/B,EAAiB,WAAY+B,EAAE,OAAO,KAAK,CAAA,CAAA,CAC9D,CACF,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACX,EAAA,IAAAS,EAAA,CAAM,QAAQ,iBAAiB,SAAiB,oBAAA,EACjDT,EAAA,IAACU,EAAA,CACC,GAAG,iBACH,YAAY,wBACZ,MAAOtE,EAAS,gBAChB,SAAWuE,GAAM/B,EAAiB,kBAAmB+B,EAAE,OAAO,KAAK,CAAA,CAAA,CACrE,EACF,EAEAZ,EAAAA,KAAC,MAAI,CAAA,UAAU,kCACb,SAAA,CAAAC,EAAAA,IAACG,EAAO,CAAA,QAAQ,UAAU,QAAS,IAAM,CACvC5E,EAAsB,EAAK,EAC3BY,EAAiB,IAAI,EACTE,EAAA,CACV,KAAM,GACN,SAAU,GACV,YAAa,GACb,gBAAiB,GACjB,0BAA2B,GAC3B,WAAY,iBACZ,MAAO,iBACP,OAAQ,WACR,WAAY,GACZ,SAAU,GACV,kBAAmB,EAAA,CACpB,CAAA,EACA,SAEH,SAAA,EACA2D,EAAA,IAACG,EAAA,CACC,QAASzB,GACT,SAAUZ,EAAoB,UAE7B,SAAAA,EAAoB,UAEjBiC,EAAA,KAAAqB,EAAA,SAAA,CAAA,SAAA,CAACpB,EAAAA,IAAAqB,EAAA,CAAQ,UAAU,2BAA4B,CAAA,EAC9CnF,EAAgB,cAAgB,aAAA,CAAA,CACnC,EAGG6D,EAAAA,KAAAqB,EAAA,SAAA,CAAA,SAAA,CAAgBlF,EAAA8D,EAAA,IAACsB,GAAK,UAAU,cAAA,CAAe,EAAMtB,EAAAA,IAAAI,EAAA,CAAK,UAAU,cAAe,CAAA,EACnFlE,EAAgB,eAAiB,cAAA,CACpC,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGA8D,EAAA,IAACC,GAAO,CAAA,KAAMzE,GAAoB,aAAcC,EAC9C,SAAAsE,EAAAA,KAACM,GAAc,CAAA,UAAU,WAAW,mBAAiB,0BACnD,SAAA,CAAAN,OAACO,GACC,CAAA,SAAA,CAAAN,EAAAA,IAACO,IAAY,SAAoB,sBAAA,CAAA,EACjCR,EAAAA,KAACS,GAAkB,CAAA,GAAG,0BAA0B,SAAA,CAAA,UACtC9E,GAAA,YAAAA,EAA4B,KAAK,8CAAA,CAC3C,CAAA,CAAA,EACF,EAEAqE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACC,EAAA,IAAAS,EAAA,CAAM,QAAQ,cAAc,SAAoB,uBAAA,EAChDV,EAAA,KAAAc,EAAA,CAAO,MAAOjF,EAA2B,cAAeC,EACvD,SAAA,CAAAmE,MAACc,EACC,CAAA,SAAAd,EAAA,IAACe,EAAY,CAAA,YAAY,wBAAyB,CAAA,EACpD,EACCf,EAAA,IAAAgB,EAAA,CACE,SAAcxD,GAAA,IAAK+D,GACjBxB,EAAA,KAAAmB,EAAA,CAAyB,MAAOK,EAAK,GAAG,SACtC,EAAA,SAAA,CAAKA,EAAA,UAAU,KAAGA,EAAK,UAAU,GAAA,GADnBA,EAAK,EAEtB,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACvB,EAAA,IAAAS,EAAA,CAAM,QAAQ,QAAQ,SAA2B,8BAAA,EAClDT,EAAA,IAAC,WAAA,CACC,GAAG,QACH,UAAU,+CACV,KAAK,IACL,YAAY,8CACZ,MAAOlE,EACP,SAAW6E,GAAM5E,EAAmB4E,EAAE,OAAO,KAAK,CAAA,CAAA,CACpD,EACF,EAEAZ,EAAAA,KAAC,MAAI,CAAA,UAAU,kCACb,SAAA,CAACC,EAAAA,IAAAG,EAAA,CAAO,QAAQ,UAAU,QAAS,IAAM1E,EAAsB,EAAK,EAAG,SAEvE,QAAA,CAAA,EACAuE,EAAA,IAACG,EAAA,CACC,QAASnB,GACT,SAAU,CAACpD,GAA6ByC,EAAmB,UAE1D,SAAAA,EAAmB,UAEhB0B,EAAA,KAAAqB,EAAA,SAAA,CAAA,SAAA,CAACpB,EAAAA,IAAAqB,EAAA,CAAQ,UAAU,2BAA4B,CAAA,EAAE,cAAA,CAAA,CAEnD,EAGEtB,EAAAA,KAAAqB,EAAA,SAAA,CAAA,SAAA,CAACpB,EAAAA,IAAAwB,EAAA,CAAO,UAAU,cAAe,CAAA,EAAE,gBAAA,CAErC,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGAzB,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAA,OAAC0B,EACC,CAAA,SAAA,CAAC1B,EAAAA,KAAA2B,EAAA,CAAW,UAAU,4DACpB,SAAA,CAAC1B,EAAA,IAAA2B,EAAA,CAAU,UAAU,sBAAsB,SAAa,gBAAA,EACxD3B,EAAAA,IAAC4B,EAAS,CAAA,UAAU,+BAAgC,CAAA,CAAA,EACtD,SACCC,EACE,CAAA,SAAA,CACC/E,EAAAkD,EAAA,IAAC,MAAI,CAAA,UAAU,qBAAqB,SAAA,IAAE,CAAA,EAEtCA,EAAAA,IAAC,MAAI,CAAA,UAAU,qBAAsB,SAAAzC,EAAW,cAAc,EAE/DyC,EAAA,IAAA,IAAA,CAAE,UAAU,gCAAgC,SAAgB,kBAAA,CAAA,CAAA,CAC/D,CAAA,CAAA,EACF,SAECyB,EACC,CAAA,SAAA,CAAC1B,EAAAA,KAAA2B,EAAA,CAAW,UAAU,4DACpB,SAAA,CAAC1B,EAAA,IAAA2B,EAAA,CAAU,UAAU,sBAAsB,SAAc,iBAAA,EACzD3B,EAAAA,IAAC8B,GAAW,CAAA,UAAU,+BAAgC,CAAA,CAAA,EACxD,SACCD,EACE,CAAA,SAAA,CACC/E,EAAAkD,EAAA,IAAC,MAAI,CAAA,UAAU,qBAAqB,SAAA,IAAE,CAAA,EAEtCA,EAAAA,IAAC,MAAI,CAAA,UAAU,qBAAsB,SAAAzC,EAAW,eAAe,EAEhEyC,EAAA,IAAA,IAAA,CAAE,UAAU,gCAAgC,SAAgB,kBAAA,CAAA,CAAA,CAC/D,CAAA,CAAA,EACF,SAECyB,EACC,CAAA,SAAA,CAAC1B,EAAAA,KAAA2B,EAAA,CAAW,UAAU,4DACpB,SAAA,CAAC1B,EAAA,IAAA2B,EAAA,CAAU,UAAU,sBAAsB,SAAU,aAAA,EACrD3B,EAAAA,IAAC+B,EAAM,CAAA,UAAU,+BAAgC,CAAA,CAAA,EACnD,SACCF,EACE,CAAA,SAAA,CACC/E,EAAAkD,EAAA,IAAC,MAAI,CAAA,UAAU,qBAAqB,SAAA,IAAE,CAAA,EAEtCA,EAAAA,IAAC,MAAI,CAAA,UAAU,qBAAsB,SAAAzC,EAAW,mBAAmB,EAEpEyC,EAAA,IAAA,IAAA,CAAE,UAAU,gCAAgC,SAAmB,qBAAA,CAAA,CAAA,CAClE,CAAA,CAAA,EACF,SAECyB,EACC,CAAA,SAAA,CAAC1B,EAAAA,KAAA2B,EAAA,CAAW,UAAU,4DACpB,SAAA,CAAC1B,EAAA,IAAA2B,EAAA,CAAU,UAAU,sBAAsB,SAAS,YAAA,EACpD3B,EAAAA,IAAC+B,EAAM,CAAA,UAAU,+BAAgC,CAAA,CAAA,EACnD,SACCF,EACE,CAAA,SAAA,CACC/E,EAAAkD,EAAA,IAAC,MAAI,CAAA,UAAU,qBAAqB,SAAA,IAAE,CAAA,EAEtCA,EAAAA,IAAC,MAAI,CAAA,UAAU,qBAAsB,SAAAzC,EAAW,kBAAkB,EAEnEyC,EAAA,IAAA,IAAA,CAAE,UAAU,gCAAgC,SAAgB,kBAAA,CAAA,CAAA,CAC/D,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAGCyB,EACC,CAAA,SAAA,CAAAzB,MAAC0B,EACC,CAAA,SAAA3B,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAC,EAAAA,IAAC2B,GAAU,SAA2B,6BAAA,CAAA,EACtC5B,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAACC,EAAAA,IAAAgC,GAAA,CAAO,UAAU,uDAAwD,CAAA,EAC1EhC,EAAA,IAACU,EAAA,CACC,YAAY,oBACZ,MAAOvF,EACP,SAAWwF,GAAMvF,EAAcuF,EAAE,OAAO,KAAK,EAC7C,UAAU,WAAA,CAAA,CACZ,EACF,SACCR,EAAO,CAAA,QAAQ,UAAU,KAAK,KAAK,QAASX,GAC3C,SAAA,CAACQ,EAAAA,IAAAiC,GAAA,CAAO,UAAU,cAAe,CAAA,EAAE,QAAA,CAErC,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QACCJ,EACE,CAAA,SAAApF,GACEsD,OAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACC,EAAAA,IAAAqB,EAAA,CAAQ,UAAU,oCAAqC,CAAA,EACvDrB,EAAA,IAAA,OAAA,CAAK,UAAU,qBAAqB,SAA2B,6BAAA,CAAA,CAAA,CAClE,CAAA,EACEtD,GACDqD,EAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAACC,EAAAA,IAAAkC,EAAA,CAAY,UAAU,qCAAsC,CAAA,EAC5DlC,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAAqB,wBAAA,EAC7EA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAAkD,oDAAA,CAAA,CAAA,EACtF,EACE1C,EAAQ,SAAW,EACpByC,OAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAACC,EAAAA,IAAA4B,EAAA,CAAS,UAAU,sCAAuC,CAAA,EAC1D5B,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAAgB,mBAAA,EACxEA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAA0C,6CAAA,SAC3EG,EAAO,CAAA,QAAS,IAAM5E,EAAsB,EAAI,EAC/C,SAAA,CAACyE,EAAAA,IAAAI,EAAA,CAAK,UAAU,cAAe,CAAA,EAAE,oBAAA,CAEnC,CAAA,CAAA,CACF,CAAA,EAEAJ,EAAAA,IAAC,MAAI,CAAA,UAAU,YACZ,SAAA1C,EAAQ,IAAK4B,GACda,OAAC,MAAmB,CAAA,UAAU,0EAC5B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAC,EAAA,IAAC,KAAG,CAAA,UAAU,sCAAuC,SAAAd,EAAM,KAAK,EAChEa,EAAAA,KAAC,IAAE,CAAA,UAAU,wBAAwB,SAAA,CAAA,aAAWb,EAAM,eAAA,CAAgB,CAAA,CAAA,EACxE,EACAa,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACC,EAAAA,IAAAmC,EAAA,CAAM,UAAW1C,GAAeP,EAAM,MAAM,EAC1C,SAAAY,GAAaZ,EAAM,MAAM,CAC5B,CAAA,EACAc,EAAAA,IAACmC,EAAM,CAAA,UAAWxC,GAAcT,EAAM,KAAK,EACxC,SAAAW,GAAYX,EAAM,KAAK,CAC1B,CAAA,EACAa,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAAI,EAAA,CAAO,QAAQ,UAAU,KAAK,KAAK,QAAS,IAAMhB,GAAgBD,CAAK,EACtE,SAAA,CAACc,EAAAA,IAAAsB,EAAA,CAAK,UAAU,cAAe,CAAA,EAAE,MAAA,EAEnC,EACAvB,EAAAA,KAACI,EAAO,CAAA,QAAQ,UAAU,KAAK,KAAK,QAAS,IAAMlB,GAAiBC,CAAK,EACvE,SAAA,CAACc,EAAAA,IAAAwB,EAAA,CAAO,UAAU,cAAe,CAAA,EAAE,gBAAA,EAErC,EACAzB,EAAAA,KAACI,EAAO,CAAA,QAAQ,UAAU,KAAK,KAAK,QAAS,IAAMf,GAAkBF,CAAK,EACxE,SAAA,CAACc,EAAAA,IAAAoC,GAAA,CAAS,UAAU,cAAe,CAAA,EAAE,QAAA,CAEvC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEArC,EAAAA,KAAC,MAAI,CAAA,UAAU,4DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,6BACb,SAAA,CAACC,EAAAA,IAAAqC,GAAA,CAAU,UAAU,8BAA+B,CAAA,SACnD,MACC,CAAA,SAAA,CAACrC,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAAI,OAAA,EACtCA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAyB,WAAM,IAAK,CAAA,CAAA,CACnD,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAACC,EAAAA,IAAA4B,EAAA,CAAS,UAAU,8BAA+B,CAAA,SAClD,MACC,CAAA,SAAA,CAAC5B,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAAI,OAAA,EACtCA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAyB,WAAM,IAAK,CAAA,CAAA,CACnD,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAACC,EAAAA,IAAAsC,GAAA,CAAS,UAAU,8BAA+B,CAAA,SAClD,MACC,CAAA,SAAA,CAACtC,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAAU,aAAA,EAC5CA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAyB,WAAM,SAAU,CAAA,CAAA,CACxD,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAACC,EAAAA,IAAA+B,EAAA,CAAM,UAAU,8BAA+B,CAAA,SAC/C,MACC,CAAA,SAAA,CAAC/B,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAAsB,yBAAA,EACxDA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAyB,WAAM,qBAAsB,CAAA,CAAA,CACpE,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGAD,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACC,EAAA,IAAA,OAAA,CAAK,UAAU,sBAAsB,SAAmB,sBAAA,EACzDD,EAAAA,KAAC,OAAK,CAAA,UAAU,wBACb,SAAA,CAAMb,EAAA,kBAAkB,MAAIA,EAAM,iBAAiB,eAAA,CACtD,CAAA,CAAA,EACF,EACAc,EAAAA,IAAC,MAAI,CAAA,UAAU,sCACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAU,+BACV,MAAO,CAAE,MAAO,GAAId,EAAM,kBAAoBA,EAAM,iBAAoB,GAAG,GAAI,CAAA,CAAA,CAEnF,CAAA,CAAA,EACF,EAEAa,EAAAA,KAAC,MAAI,CAAA,UAAU,kEACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,wBACd,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAE,IAAA,CAAA,EAAS,WAAA,EACrB,EACAD,EAAAA,KAAC,OAAK,CAAA,UAAU,wBAAwB,SAAA,CAAA,WAC9BC,EAAAA,IAAC,SAAQ,CAAA,SAAAd,EAAM,gBAAiB,CAAA,CAAA,CAC1C,CAAA,CAAA,EACF,EACAa,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAAI,EAAA,CAAO,QAAQ,UAAU,KAAK,KAAK,QAAS,IAAMd,GAAuBH,CAAK,EAC7E,SAAA,CAACc,EAAAA,IAAA+B,EAAA,CAAM,UAAU,cAAe,CAAA,EAAE,cAAA,EAEpC,EACAhC,EAAAA,KAACI,EAAO,CAAA,QAAQ,UAAU,KAAK,KAAK,QAAS,IAAMb,GAAmBJ,CAAK,EACzE,SAAA,CAACc,EAAAA,IAAAuC,GAAA,CAAM,UAAU,cAAe,CAAA,EAAE,UAAA,EAEpC,EACAxC,EAAAA,KAACI,EAAO,CAAA,QAAQ,UAAU,KAAK,KAAK,QAAS,IAAMZ,GAAoBL,CAAK,EAC1E,SAAA,CAACc,EAAAA,IAAA4B,EAAA,CAAS,UAAU,cAAe,CAAA,EAAE,WAAA,CAEvC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,EAvGQ1C,EAAM,EAwGhB,CACD,CACD,CAAA,CAEJ,CAAA,CAAA,EACF,QAGCuC,EAAK,CAAA,UAAU,iCACd,SAAC1B,EAAA,KAAA8B,EAAA,CAAY,UAAU,mCACrB,SAAA,CAAC7B,EAAAA,IAAAkC,EAAA,CAAY,UAAU,yBAA0B,CAAA,SAChD,MACC,CAAA,SAAA,CAAClC,EAAA,IAAA,KAAA,CAAG,UAAU,8BAA8B,SAAuB,0BAAA,EAClEA,EAAA,IAAA,IAAA,CAAE,UAAU,0BAA0B,SAIvC,qNAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAEJ"}