{"version":3,"file":"Lists-BgUxD0QR.js","sources":["../../src/api/services/contactGmail/contactGmailService.ts","../../src/api/services/email/emailService.ts","../../src/pages/Lists/AddContactList.tsx","../../src/pages/Lists/Lists.tsx"],"sourcesContent":["import axiosInstance from \"@/api/axios/axiosInstance\";\nimport { toast } from \"sonner\";\n\nexport interface ContactGmailStatus {\n  isConnected: boolean;\n  email: string | null;\n  messagesTotal?: number;\n  threadsTotal?: number;\n}\n\nexport interface ContactEmailData {\n  to: string;\n  cc?: string;\n  bcc?: string;\n  subject: string;\n  body: string;\n  isHtml?: boolean;\n}\n\n// Get Contact Gmail connection status\nexport async function getContactGmailStatus(): Promise<ContactGmailStatus> {\n  try {\n    const res = await axiosInstance.get(\"/api/contact-gmail/auth/status\");\n    \n    if (res.data.success) {\n      return res.data.data;\n    }\n    \n    throw new Error(res.data.message || \"Failed to get Contact Gmail status\");\n  } catch (error: any) {\n    console.error(\"Error getting Contact Gmail status:\", error);\n    return {\n      isConnected: false,\n      email: null\n    };\n  }\n}\n\n// Connect Contact Gmail (opens in new tab)\nexport async function connectContactGmail(): Promise<void> {\n  try {\n    const response = await axiosInstance.get(\"/api/contact-gmail/auth/url\");\n\n    if (response.data.success) {\n      // Open Gmail OAuth in a new tab\n      const newTab = window.open(\n        response.data.data.authUrl,\n        'contact_gmail_oauth',\n        'width=500,height=600,scrollbars=yes,resizable=yes'\n      );\n\n      if (!newTab) {\n        toast.error('Popup blocked. Please allow popups and try again.');\n        return;\n      }\n\n      // Listen for messages from the OAuth callback\n      return new Promise((resolve, reject) => {\n        let resolved = false;\n\n        const messageHandler = (event: MessageEvent) => {\n          console.log('📨 Received postMessage:', event.data, 'from origin:', event.origin);\n\n          // Only process Contact Gmail messages\n          if (!event.data || !event.data.type || !event.data.type.startsWith('CONTACT_GMAIL_')) {\n            console.log('❌ Ignoring non-Contact Gmail message');\n            return;\n          }\n\n          if (resolved) return; // Prevent multiple resolutions\n\n          if (event.data.type === 'CONTACT_GMAIL_SUCCESS') {\n            console.log('✅ Contact Gmail success received');\n            resolved = true;\n            window.removeEventListener('message', messageHandler);\n            toast.success(`Contact Gmail connected successfully! (${event.data.email})`);\n            resolve();\n          } else if (event.data.type === 'CONTACT_GMAIL_ERROR') {\n            console.log('❌ Contact Gmail error received:', event.data.error);\n            resolved = true;\n            window.removeEventListener('message', messageHandler);\n            toast.error(`Failed to connect Contact Gmail: ${event.data.error}`);\n            reject(new Error(event.data.error));\n          }\n        };\n\n        window.addEventListener('message', messageHandler);\n\n        // Check if tab was closed without completing OAuth\n        const checkClosed = setInterval(() => {\n          if (newTab.closed) {\n            clearInterval(checkClosed);\n            console.log('🔒 OAuth tab was closed');\n\n            if (resolved) return; // Already handled by message\n\n            window.removeEventListener('message', messageHandler);\n\n            // Give more time for any pending messages, then check status\n            setTimeout(async () => {\n              if (resolved) return;\n\n              console.log('🔍 Checking Contact Gmail status after tab close...');\n              try {\n                const status = await getContactGmailStatus();\n                if (status.isConnected) {\n                  console.log('✅ Contact Gmail is connected despite no postMessage');\n                  resolved = true;\n                  toast.success(\"Contact Gmail connected successfully!\");\n                  resolve();\n                } else {\n                  console.log('❌ Contact Gmail is not connected');\n                  resolved = true;\n                  reject(new Error(\"Contact Gmail connection was cancelled\"));\n                }\n              } catch (error) {\n                console.log('❌ Error checking Contact Gmail status:', error);\n                resolved = true;\n                reject(new Error(\"Contact Gmail connection was cancelled\"));\n              }\n            }, 2000); // Increased delay to 2 seconds\n          }\n        }, 1000);\n\n        // Timeout after 5 minutes\n        setTimeout(() => {\n          if (resolved) return;\n\n          clearInterval(checkClosed);\n          window.removeEventListener('message', messageHandler);\n          if (!newTab.closed) {\n            newTab.close();\n          }\n          resolved = true;\n          reject(new Error(\"Contact Gmail connection timeout\"));\n        }, 300000);\n      });\n    } else {\n      throw new Error(response.data.message || \"Failed to generate Contact Gmail auth URL\");\n    }\n  } catch (error: any) {\n    console.error(\"Error connecting Contact Gmail:\", error);\n    const message = error.response?.data?.message || \"Failed to connect Contact Gmail\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Disconnect Contact Gmail\nexport async function disconnectContactGmail(): Promise<void> {\n  try {\n    const res = await axiosInstance.delete(\"/api/contact-gmail/auth/disconnect\");\n\n    if (res.data.success) {\n      toast.success(\"Contact Gmail disconnected successfully!\");\n      return;\n    }\n\n    throw new Error(res.data.message || \"Failed to disconnect Contact Gmail\");\n  } catch (error: any) {\n    console.error(\"Error disconnecting Contact Gmail:\", error);\n    const message = error.response?.data?.message || \"Failed to disconnect Contact Gmail\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Send email using Contact Gmail\nexport async function sendContactGmailEmail(emailData: ContactEmailData) {\n  try {\n    const res = await axiosInstance.post(\"/api/contact-gmail/send\", emailData);\n\n    if (res.data.success) {\n      toast.success(\"Email sent successfully via Contact Gmail!\");\n      return res.data.data;\n    }\n\n    throw new Error(res.data.message || \"Failed to send email via Contact Gmail\");\n  } catch (error: any) {\n    console.error(\"Error sending Contact Gmail email:\", error);\n    const message = error.response?.data?.message || \"Failed to send email via Contact Gmail\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Check if Contact Gmail service is available\nexport async function isContactGmailServiceAvailable(): Promise<boolean> {\n  try {\n    const status = await getContactGmailStatus();\n    return status.isConnected;\n  } catch (error) {\n    console.error(\"Error checking Contact Gmail service availability:\", error);\n    return false;\n  }\n}\n","import axiosInstance from \"@/api/axios/axiosInstance\";\nimport { toast } from \"sonner\";\n\n// Email service using SMTP (sends from logged-in user's email)\nexport interface EmailData {\n  to: string;\n  cc?: string;\n  bcc?: string;\n  subject: string;\n  body: string;\n  isHtml?: boolean;\n}\n\nexport interface EmailServiceStatus {\n  isConfigured: boolean;\n  transporters: number;\n  testMode: boolean;\n}\n\n// Send email via SMTP service\nexport async function sendEmail(emailData: EmailData) {\n  try {\n    const res = await axiosInstance.post(\"/api/email/send\", emailData);\n\n    if (res.data.success) {\n      const data = res.data.data;\n      if (data.testMode) {\n        toast.success(\"Email logged successfully (Test Mode)\");\n      } else {\n        toast.success(`Email sent successfully via ${data.provider}!`);\n      }\n      return res.data.data;\n    }\n\n    throw new Error(res.data.message || \"Failed to send email\");\n  } catch (error: any) {\n    console.error(\"Error sending email:\", error);\n    const message = error.response?.data?.message || \"Failed to send email\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Send bulk emails via SMTP service\nexport async function sendBulkEmails(emails: EmailData[]) {\n  try {\n    const res = await axiosInstance.post(\"/api/email/send-bulk\", { emails });\n\n    if (res.data.success) {\n      const results = res.data.data;\n      const successCount = results.filter((r: any) => r.success).length;\n      toast.success(`${successCount} emails sent successfully!`);\n      return res.data.data;\n    }\n\n    throw new Error(res.data.message || \"Failed to send bulk emails\");\n  } catch (error: any) {\n    console.error(\"Error sending bulk emails:\", error);\n    const message = error.response?.data?.message || \"Failed to send bulk emails\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Get email service status\nexport async function getEmailServiceStatus(): Promise<EmailServiceStatus> {\n  try {\n    const res = await axiosInstance.get(\"/api/email/status\");\n    \n    if (res.data.success) {\n      return res.data.data;\n    }\n    \n    throw new Error(res.data.message || \"Failed to get email service status\");\n  } catch (error: any) {\n    console.error(\"Error getting email service status:\", error);\n    const message = error.response?.data?.message || \"Failed to get email service status\";\n    toast.error(message);\n    throw error;\n  }\n}\n\n// Check if email service is available (either SMTP or Gmail)\nexport async function isEmailServiceAvailable(): Promise<boolean> {\n  try {\n    // Check SMTP service first\n    const smtpStatus = await getEmailServiceStatus();\n    if (smtpStatus.isConfigured) {\n      return true;\n    }\n\n    // If SMTP is not configured, check Gmail\n    const gmailResponse = await axiosInstance.get(\"/api/gmail/auth/status\");\n    return gmailResponse.data.success && gmailResponse.data.data.isConnected;\n  } catch (error) {\n    console.error(\"Error checking email service availability:\", error);\n    return false;\n  }\n}\n","// src/pages/Lists/AddContactList.tsx\r\n\r\nimport { useRef, useState } from \"react\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport {\r\n  SheetClose,\r\n  SheetTitle,\r\n  SheetDescription,\r\n} from \"@/components/ui/sheet\";\r\nimport {\r\n  UploadIcon,\r\n  Trash2,\r\n  PlusIcon,\r\n  ListFilter,\r\n  Users,\r\n  Mail,\r\n  Phone,\r\n  FileText,\r\n  Info,\r\n} from \"lucide-react\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\nimport Papa from \"papaparse\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { createContactService, createList, addContactToList } from \"@/api/services/contact/contactService\";\r\nimport secureLocalStorage from \"react-secure-storage\";\r\nimport { toast } from \"sonner\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport axiosInstance from \"@/api/axios/axiosInstance\";\r\nimport { useAuth } from \"@/context/AuthContext\";\r\nimport { usePermissions } from \"@/context/PermissionContext\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\r\n\r\n// Define the shape of a single contact\r\ninterface Contact {\r\n  fullName: string;\r\n  email: string;\r\n  phoneNumber: string;\r\n}\r\n\r\n// Define the shape of form data\r\ninterface FormData {\r\n  listName: string;\r\n  description: string;\r\n  type: string;\r\n  contacts: Contact[];\r\n}\r\n\r\n// Define the decoded token structure (adjust based on your actual token)\r\ninterface DecodedToken {\r\n  user: {\r\n    user_id?: number;\r\n    id?: number;\r\n  };\r\n}\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  listName: Yup.string()\r\n    .required(\"List Name is required\")\r\n    .min(2, \"List Name must be at least 2 characters\"),\r\n  description: Yup.string().required(\"Description is required\"),\r\n  type: Yup.string().required(\"Type is required\"),\r\n  contacts: Yup.array()\r\n    .of(\r\n      Yup.object().shape({\r\n        fullName: Yup.string()\r\n          .required(\"Full Name is required\")\r\n          .min(2, \"Full Name must be at least 2 characters\"),\r\n        email: Yup.string()\r\n          .required(\"Email is required\")\r\n          .email(\"Email is invalid\"),\r\n        phoneNumber: Yup.string()\r\n          .required(\"Phone Number is required\")\r\n          .matches(\r\n            /^\\+1[0-9]{10}$/,\r\n            \"Phone Number must start with +1 followed by 10 digits (e.g., +1234567890)\"\r\n          ),\r\n      })\r\n    )\r\n    .required(\"Contacts are required\") // Ensure contacts is required\r\n    .min(1, \"At least one contact is required\"),\r\n});\r\n\r\nexport function AddContactList() {\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n  const [showInsufficientCreditsModal, setShowInsufficientCreditsModal] = useState(false);\r\n  const [currentBalance, setCurrentBalance] = useState(0);\r\n\r\n  const { user } = useAuth();\r\n  const { isSuperAdmin } = usePermissions();\r\n\r\n  // Initialize React Hook Form\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting },\r\n    reset,\r\n    watch,\r\n    setValue,\r\n  } = useForm<FormData>({\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: {\r\n      listName: \"\",\r\n      description: \"\",\r\n      type: \"General\",\r\n      contacts: [{ fullName: \"\", email: \"\", phoneNumber: \"\" }],\r\n    },\r\n  });\r\n\r\n  // Initialize useFieldArray for dynamic contacts\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"contacts\",\r\n  });\r\n\r\n  // Retrieve and decode the token\r\n  const getUserId = (): number | null => {\r\n    const token = secureLocalStorage.getItem(\"token\");\r\n    if (!token) {\r\n      console.log(\"No token found in storage\");\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const decoded: any = jwtDecode(token as string);\r\n      console.log(\"Decoded token:\", decoded);\r\n\r\n      // Handle different token structures:\r\n      // 1. Regular login: decoded.user.id or decoded.user.user_id\r\n      // 2. Demo login: decoded.id\r\n      // 3. Legacy: decoded.user_id\r\n      let userId = null;\r\n\r\n      if (decoded.user?.id) {\r\n        userId = decoded.user.id;\r\n      } else if (decoded.user?.user_id) {\r\n        userId = decoded.user.user_id;\r\n      } else if (decoded.id) {\r\n        userId = decoded.id;\r\n      } else if (decoded.user_id) {\r\n        userId = decoded.user_id;\r\n      }\r\n\r\n      console.log(\"Extracted userId:\", userId);\r\n      return userId;\r\n    } catch (error) {\r\n      console.error(\"Error decoding token:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const onSubmit = async (data: FormData) => {\r\n    // Check credits first (unless super admin)\r\n    if (!isSuperAdmin) {\r\n      try {\r\n        const response = await axiosInstance.get('/api/credits/balance');\r\n        const balance = response.data.data;\r\n\r\n        if (!balance || parseFloat(balance.available_credits) < 1) {\r\n          setCurrentBalance(balance?.available_credits || 0);\r\n          setShowInsufficientCreditsModal(true);\r\n          return;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking credit balance:', error);\r\n        toast.error('Unable to verify credit balance. Please try again.');\r\n        return;\r\n      }\r\n    }\r\n\r\n    const userId = getUserId();\r\n    if (!userId) {\r\n      toast.error(\"User ID not found. Please log in again.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // First create the list using the new API\r\n      const listResponse = await createList({\r\n        listName: data.listName,\r\n        description: data.description,\r\n        type: data.type\r\n      });\r\n\r\n      // If list creation is successful, use the legacy API for contacts\r\n      // (until we fully migrate to the new structure)\r\n      const formattedContacts = data.contacts.map((contact) => ({\r\n        email: contact.email,\r\n        contact_number: contact.phoneNumber,\r\n        first_name: contact.fullName, // Map fullName to first_name for legacy compatibility\r\n      }));\r\n\r\n      const payload = {\r\n        user_id: userId,\r\n        list_name: data.listName,\r\n        list_description: data.description,\r\n        contacts: formattedContacts,\r\n      };\r\n\r\n      await createContactService(payload);\r\n\r\n      reset({\r\n        listName: \"\",\r\n        description: \"\",\r\n        type: \"General\",\r\n        contacts: [{ fullName: \"\", email: \"\", phoneNumber: \"\" }],\r\n      });\r\n\r\n      toast.success(\"Contact List created successfully!\");\r\n\r\n      // Optionally refresh the parent component\r\n      if (typeof window !== 'undefined') {\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting form:\", error);\r\n      toast.error(\"Failed to create contact list. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Handle file import click\r\n  const handleImportClick = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  // Handle file selection and parsing\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (evt) => {\r\n        const data = evt.target?.result;\r\n        if (data) {\r\n          const fileExtension = file.name.split(\".\").pop()?.toLowerCase();\r\n\r\n          if (fileExtension === \"csv\") {\r\n            // Existing CSV parsing code\r\n          } else if (fileExtension === \"xlsx\") {\r\n            const workbook = XLSX.read(data, { type: \"binary\" });\r\n            const sheetName = workbook.SheetNames[0];\r\n            const worksheet = workbook.Sheets[sheetName];\r\n            const jsonData = XLSX.utils.sheet_to_json<Contact>(worksheet, {\r\n              defval: \"\",\r\n            });\r\n\r\n            // Log the raw JSON data\r\n            console.log(\"Excel JSON Data:\", jsonData);\r\n\r\n            const validContacts = jsonData\r\n              .map((contact: any) => ({\r\n                fullName:\r\n                  contact.fullName ||\r\n                  contact[\"Full Name\"] ||\r\n                  contact[\"Name\"] ||\r\n                  contact.firstName ||\r\n                  contact[\"First Name\"] ||\r\n                  \"\",\r\n                email:\r\n                  contact.email ||\r\n                  contact[\"Email\"] ||\r\n                  contact[\"Email Address\"] ||\r\n                  \"\",\r\n                phoneNumber:\r\n                  contact.phoneNumber ||\r\n                  contact[\"Phone Number\"] ||\r\n                  contact[\"Contact Number\"] ||\r\n                  contact.contactNumber ||\r\n                  \"\",\r\n              }))\r\n              .filter((contact) => contact.email && contact.phoneNumber);\r\n\r\n            validContacts.forEach((contact) => {\r\n              append({\r\n                fullName: contact.fullName,\r\n                email: contact.email,\r\n                phoneNumber: contact.phoneNumber,\r\n              });\r\n            });\r\n\r\n            toast.success(\"Contacts imported successfully!\");\r\n            console.log(\"Parsed Contacts:\", validContacts);\r\n          } else {\r\n            toast.error(\r\n              \"Unsupported file format. Please upload a CSV or Excel file.\"\r\n            );\r\n          }\r\n        }\r\n      };\r\n\r\n      if (\r\n        file.type ===\r\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" ||\r\n        file.type === \"application/vnd.ms-excel\" ||\r\n        file.type === \"text/csv\"\r\n      ) {\r\n        reader.readAsBinaryString(file);\r\n      } else {\r\n        toast.error(\"Please upload a valid CSV or Excel file.\");\r\n      }\r\n\r\n      // Reset the input value to allow re-uploading the same file if needed\r\n      e.target.value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SheetTitle className=\"text-xl font-semibold jakarta bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent mb-1\">\r\n        Create Contact List\r\n      </SheetTitle>\r\n      <SheetDescription className=\"text-muted-foreground mb-6\">\r\n        Create a new contact list for your voice AI agents to use for campaigns.\r\n      </SheetDescription>\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center space-x-2 mb-2\">\r\n            <ListFilter className=\"h-5 w-5 text-primary\" />\r\n            <h3 className=\"text-sm font-medium\">List Information</h3>\r\n          </div>\r\n\r\n          {/* List Name Field */}\r\n          <div>\r\n            <Label\r\n              htmlFor=\"listName\"\r\n              className=\"text-sm font-medium text-foreground mb-1.5 block\"\r\n            >\r\n              List Name<span className=\"text-red-500\">*</span>\r\n            </Label>\r\n            <Input\r\n              id=\"listName\"\r\n              placeholder=\"Enter contact list name\"\r\n              className=\"w-full border-border/50 bg-card focus:border-primary/50 focus:ring-primary/20\"\r\n              {...register(\"listName\")}\r\n            />\r\n            {errors.listName && (\r\n              <p className=\"mt-1 text-xs text-red-600\">\r\n                {errors.listName.message}\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Description Field */}\r\n          <div>\r\n            <Label\r\n              htmlFor=\"description\"\r\n              className=\"text-sm font-medium text-foreground mb-1.5 block\"\r\n            >\r\n              Description<span className=\"text-red-500\">*</span>\r\n            </Label>\r\n            <Textarea\r\n              id=\"description\"\r\n              placeholder=\"Enter contact list description\"\r\n              className=\"w-full min-h-[80px] border-border/50 bg-card focus:border-primary/50 focus:ring-primary/20\"\r\n              {...register(\"description\")}\r\n            />\r\n            {errors.description && (\r\n              <p className=\"mt-1 text-xs text-red-600\">\r\n                {errors.description.message}\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Type Field */}\r\n          <div>\r\n            <Label\r\n              htmlFor=\"type\"\r\n              className=\"text-sm font-medium text-foreground mb-1.5 block\"\r\n            >\r\n              Type<span className=\"text-red-500\">*</span>\r\n            </Label>\r\n            <Select\r\n              value={watch(\"type\")}\r\n              onValueChange={(value) => setValue(\"type\", value)}\r\n            >\r\n              <SelectTrigger className=\"w-full border-border/50 bg-card focus:border-primary/50 focus:ring-primary/20\">\r\n                <SelectValue placeholder=\"Select list type\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"General\">General</SelectItem>\r\n                <SelectItem value=\"Marketing\">Marketing</SelectItem>\r\n                <SelectItem value=\"Sales\">Sales</SelectItem>\r\n                <SelectItem value=\"Event\">Event</SelectItem>\r\n                <SelectItem value=\"Customer\">Customer</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n            {errors.type && (\r\n              <p className=\"mt-1 text-xs text-red-600\">\r\n                {errors.type.message}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center space-x-2 mb-2\">\r\n            <Users className=\"h-5 w-5 text-primary\" />\r\n            <h3 className=\"text-sm font-medium\">Contacts</h3>\r\n            <span className=\"text-xs text-red-500\">*</span>\r\n          </div>\r\n\r\n          {/* Contacts Section */}\r\n          <div className=\"space-y-4\">\r\n            {fields.map((field, index) => (\r\n              <div\r\n                key={field.id}\r\n                className=\"border border-border/50 rounded-lg p-4 mb-4 relative bg-card/50\"\r\n              >\r\n                {/* Remove Contact Button */}\r\n                {fields.length > 1 && (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => remove(index)}\r\n                    className=\"absolute top-3 right-3 text-muted-foreground hover:text-red-500 transition-colors\"\r\n                    title=\"Remove Contact\"\r\n                  >\r\n                    <Trash2 className=\"w-4 h-4\" />\r\n                  </button>\r\n                )}\r\n\r\n                <div className=\"flex items-center space-x-2 mb-3\">\r\n                  <div className=\"h-6 w-6 bg-primary/10 rounded-full flex items-center justify-center\">\r\n                    <span className=\"text-xs font-medium text-primary\">\r\n                      {index + 1}\r\n                    </span>\r\n                  </div>\r\n                  <h4 className=\"text-sm font-medium\">Contact {index + 1}</h4>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                  {/* Full Name Field */}\r\n                  <div>\r\n                    <Label\r\n                      htmlFor={`contacts.${index}.fullName`}\r\n                      className=\"text-sm font-medium text-foreground mb-1.5 block\"\r\n                    >\r\n                      Full Name<span className=\"text-red-500\">*</span>\r\n                    </Label>\r\n                    <div className=\"relative\">\r\n                      <Input\r\n                        id={`contacts.${index}.fullName`}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter full name\"\r\n                        className=\"w-full border-border/50 bg-card focus:border-primary/50 focus:ring-primary/20\"\r\n                        {...register(`contacts.${index}.fullName` as const)}\r\n                      />\r\n                    </div>\r\n                    {errors.contacts?.[index]?.fullName && (\r\n                      <p className=\"mt-1 text-xs text-red-600\">\r\n                        {errors.contacts[index].fullName?.message}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Email Field */}\r\n                  <div>\r\n                    <Label\r\n                      htmlFor={`contacts.${index}.email`}\r\n                      className=\"text-sm font-medium text-foreground mb-1.5 block\"\r\n                    >\r\n                      Email<span className=\"text-red-500\">*</span>\r\n                    </Label>\r\n                    <div className=\"relative\">\r\n                      <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n                      <Input\r\n                        id={`contacts.${index}.email`}\r\n                        type=\"email\"\r\n                        placeholder=\"Enter contact email\"\r\n                        className=\"w-full pl-10 border-border/50 bg-card focus:border-primary/50 focus:ring-primary/20\"\r\n                        {...register(`contacts.${index}.email` as const)}\r\n                      />\r\n                    </div>\r\n                    {errors.contacts?.[index]?.email && (\r\n                      <p className=\"mt-1 text-xs text-red-600\">\r\n                        {errors.contacts[index].email?.message}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Phone Number Field */}\r\n                  <div>\r\n                    <Label\r\n                      htmlFor={`contacts.${index}.phoneNumber`}\r\n                      className=\"text-sm font-medium text-foreground mb-1.5 block\"\r\n                    >\r\n                      Phone Number<span className=\"text-red-500\">*</span>\r\n                    </Label>\r\n                    <div className=\"relative\">\r\n                      <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n                      <Input\r\n                        id={`contacts.${index}.phoneNumber`}\r\n                        type=\"tel\"\r\n                        placeholder=\"Enter phone number with +1 (e.g., +1234567890)\"\r\n                        className=\"w-full pl-10 border-border/50 bg-card focus:border-primary/50 focus:ring-primary/20\"\r\n                        {...register(\r\n                          `contacts.${index}.phoneNumber` as const\r\n                        )}\r\n                      />\r\n                    </div>\r\n                    {errors.contacts?.[index]?.phoneNumber && (\r\n                      <p className=\"mt-1 text-xs text-red-600\">\r\n                        {errors.contacts[index].phoneNumber?.message}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n            {/* Add Contact Button */}\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outline\"\r\n              className=\"w-full border-dashed border-border/50 hover:bg-muted/20 flex items-center justify-center gap-2 py-6\"\r\n              onClick={() => append({ fullName: \"\", email: \"\", phoneNumber: \"\" })}\r\n            >\r\n              <PlusIcon className=\"w-4 h-4\" />\r\n              Add Another Contact\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div className=\"space-y-4\">\r\n          <div className=\"flex items-center space-x-2 mb-2\">\r\n            <UploadIcon className=\"h-5 w-5 text-primary\" />\r\n            <h3 className=\"text-sm font-medium\">Bulk Import</h3>\r\n          </div>\r\n\r\n          \r\n          <div className=\"border-2 border-dashed border-border/50 rounded-lg p-6 text-center\">\r\n            <div className=\"flex flex-col items-center justify-center\">\r\n              <UploadIcon className=\"h-8 w-8 text-muted-foreground mb-2\" />\r\n              <h3 className=\"text-sm font-medium mb-1\">Import Contacts</h3>\r\n              <p className=\"text-xs text-muted-foreground mb-3\">\r\n                Drag and drop a CSV or Excel file here or click to browse\r\n              </p>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outline\"\r\n                className=\"text-xs border-border/50 hover:bg-muted/20\"\r\n                onClick={handleImportClick}\r\n              >\r\n                Browse Files\r\n              </Button>\r\n              <input\r\n                type=\"file\"\r\n                id=\"import\"\r\n                accept=\".xlsx, .csv\"\r\n                ref={fileInputRef}\r\n                onChange={handleFileChange}\r\n                className=\"hidden\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center p-3 bg-muted/20 rounded-lg border border-border/50\">\r\n            <Info className=\"h-4 w-4 text-muted-foreground mr-2 flex-shrink-0\" />\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              Your CSV or Excel file should have columns for 'Full Name', 'Email' and\r\n              'Phone Number' (with country code)\r\n            </p>\r\n          </div>\r\n        </div> */}\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"mt-8 flex justify-end space-x-3\">\r\n          <SheetClose asChild>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outline\"\r\n              className=\"border-border/50 text-foreground hover:bg-muted/20\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </SheetClose>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"btn-gradient text-white\"\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? \"Creating...\" : \"Create List\"}\r\n          </Button>\r\n        </div>\r\n        </form>\r\n\r\n        {/* Insufficient Credits Modal */}\r\n        <Dialog open={showInsufficientCreditsModal} onOpenChange={setShowInsufficientCreditsModal}>\r\n          <DialogContent className=\"sm:max-w-md\">\r\n            <DialogHeader>\r\n              <DialogTitle className=\"flex items-center gap-2\">\r\n                <div className=\"w-8 h-8 rounded-full bg-red-100 flex items-center justify-center\">\r\n                  <svg className=\"w-4 h-4 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n                  </svg>\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"text-lg font-semibold\">Insufficient Credits</h3>\r\n                  <p className=\"text-sm text-gray-500 font-normal\">You need credits to create contact lists</p>\r\n                </div>\r\n              </DialogTitle>\r\n            </DialogHeader>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm text-gray-600\">Current Balance:</span>\r\n                  <span className=\"font-semibold\">{currentBalance} credits</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center mt-2\">\r\n                  <span className=\"text-sm text-gray-600\">Required:</span>\r\n                  <span className=\"font-semibold text-red-600\">1 credit minimum</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex gap-3\">\r\n                <Button\r\n                  variant=\"outline\"\r\n                  onClick={() => setShowInsufficientCreditsModal(false)}\r\n                  className=\"flex-1\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    setShowInsufficientCreditsModal(false);\r\n                    window.location.href = '/credits';\r\n                  }}\r\n                  className=\"flex-1 bg-primary hover:bg-primary/90\"\r\n                >\r\n                  Buy Credits\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { ModernTable } from \"@/components/ModernTable\";\r\nimport Header from \"@/components/Header\";\r\nimport Page from \"@/components/Page\";\r\nimport { getAllContactLists, getContactsForList, deleteContactList, restoreContactList, updateContact, removeContactFromList, addContactToList } from \"@/api/services/contact/contactService\";\r\nimport { createOutboundCall, endCallViaControl, muteCall, unmuteCall } from \"@/api/services/outbound/outboundService\";\r\nimport { fetchAllAgentsComplete } from \"@/api/services/agents/agentService\";\r\nimport { getAllPhoneNumbers } from \"@/api/services/phoneNumbers/phoneNumberService\";\r\nimport {\r\n  connectContactGmail,\r\n  disconnectContactGmail,\r\n  getContactGmailStatus,\r\n  sendContactGmailEmail\r\n} from \"@/api/services/contactGmail/contactGmailService\";\r\nimport { sendEmail as sendSMTPEmail, getEmailServiceStatus } from \"@/api/services/email/emailService\";\r\nimport {\r\n  getContactCallHistory,\r\n  getCallRecording,\r\n  getCallTranscript,\r\n  formatDuration,\r\n  formatCallStatus,\r\n  formatCallCost,\r\n  formatCallDate,\r\n  hasRecording,\r\n  type CallHistoryItem,\r\n  type CallHistoryResponse\r\n} from \"@/api/services/callHistory/callHistoryService\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Edit,\r\n  Eye,\r\n  Trash,\r\n  Plus,\r\n  Users,\r\n  Calendar,\r\n  ListFilter,\r\n  Mail,\r\n  UserPlus,\r\n  ListChecks,\r\n  Share2,\r\n  MoreHorizontal,\r\n  RotateCcw,\r\n  AlertCircle,\r\n  Search,\r\n  Phone,\r\n  Building,\r\n  Tag,\r\n  MessageSquare,\r\n  History,\r\n  FileText,\r\n  X,\r\n  User,\r\n  Loader2,\r\n  Mic,\r\n  MicOff,\r\n  Pause,\r\n  Play,\r\n  PhoneOff,\r\n  Clock,\r\n  Send,\r\n  Paperclip,\r\n} from \"lucide-react\";\r\nimport { AddContactList } from \"./AddContactList\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport ListGrid from \"@/components/ListGrid\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport ListFilterPopover from \"@/components/ListFilterPopover\";\r\nimport CustomPagination from \"@/components/CustomPagination\";\r\nimport { usePermissions } from \"@/hooks/usePermissions\";\r\nimport { toast } from \"sonner\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n} from \"@/components/ui/alert-dialog\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter } from \"@/components/ui/dialog\";\r\nimport { Sheet, SheetContent } from \"@/components/ui/sheet\";\r\nimport axiosInstance from \"@/api/axios/axiosInstance\";\r\nimport { useAuth } from \"@/context/AuthContext\";\r\nimport { CallRecordingPlayer } from \"@/components/CallRecordingPlayer\";\r\nimport ChatSidebar from \"@/components/ContactMessaging/ChatSidebar\";\r\n\r\ninterface Contact {\r\n  id: number;\r\n  email: string;\r\n  phoneNumber: string;\r\n  fullName: string;\r\n  createdAt: string;\r\n  listId?: number;\r\n  listName?: string;\r\n  description?: string;\r\n  list_type?: string;\r\n}\r\n\r\ninterface ContactList {\r\n  id: number;\r\n  list_name: string;\r\n  description: string;\r\n  type: string;\r\n  contactCount: number;\r\n  createdAt: string;\r\n  is_deleted?: boolean;\r\n  deleted_at?: string;\r\n}\r\n\r\nconst Lists = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  const { isSuperAdmin } = usePermissions();\r\n  const { user } = useAuth();\r\n\r\n  // Main state\r\n  const [lists, setLists] = useState<ContactList[]>([]);\r\n  const [selectedList, setSelectedList] = useState<ContactList | null>(null);\r\n  const [contacts, setContacts] = useState<Contact[]>([]);\r\n  const [selectedContact, setSelectedContact] = useState<Contact | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [contactsLoading, setContactsLoading] = useState(false);\r\n\r\n  // Search states\r\n  const [listSearch, setListSearch] = useState(\"\");\r\n  const [contactSearch, setContactSearch] = useState(\"\");\r\n\r\n  // View modes\r\n  const [contactsView, setContactsView] = useState<\"list\" | \"grid\">(\"list\");\r\n  const [groupsView, setGroupsView] = useState<\"list\" | \"grid\">(\"list\");\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  // Modal states\r\n  const [showAddListSheet, setShowAddListSheet] = useState(false);\r\n  const [showInsufficientCreditsModal, setShowInsufficientCreditsModal] = useState(false);\r\n  const [currentBalance, setCurrentBalance] = useState(0);\r\n\r\n  // Contact editing states\r\n  const [isEditingContact, setIsEditingContact] = useState(false);\r\n  const [editingContactData, setEditingContactData] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\"\r\n  });\r\n\r\n  // Contact adding states\r\n  const [isAddingContact, setIsAddingContact] = useState(false);\r\n  const [addingContactData, setAddingContactData] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\"\r\n  });\r\n\r\n  // Dialer states\r\n  const [showDialer, setShowDialer] = useState(false);\r\n  const [dialerContact, setDialerContact] = useState<Contact | null>(null);\r\n  const [agents, setAgents] = useState<any[]>([]);\r\n  const [phoneNumbers, setPhoneNumbers] = useState<any[]>([]);\r\n  const [selectedAgent, setSelectedAgent] = useState(\"\");\r\n  const [selectedFromNumber, setSelectedFromNumber] = useState(\"\");\r\n  const [isLoadingCall, setIsLoadingCall] = useState(false);\r\n  const [contactToDelete, setContactToDelete] = useState<Contact | null>(null);\r\n\r\n  // Call control states\r\n  const [isCallActive, setIsCallActive] = useState(false);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isOnHold, setIsOnHold] = useState(false);\r\n  const [currentCallId, setCurrentCallId] = useState<string | null>(null);\r\n  const [callDuration, setCallDuration] = useState(0);\r\n  const [callTimer, setCallTimer] = useState<NodeJS.Timeout | null>(null);\r\n  const [callControlUrl, setCallControlUrl] = useState<string | null>(null);\r\n  const [callData, setCallData] = useState<any>(null);\r\n\r\n  // Call history states\r\n  const [callHistory, setCallHistory] = useState<CallHistoryItem[]>([]);\r\n  const [callHistoryLoading, setCallHistoryLoading] = useState(false);\r\n  const [callHistoryPage, setCallHistoryPage] = useState(1);\r\n  const [callHistoryTotal, setCallHistoryTotal] = useState(0);\r\n  const [selectedCallForRecording, setSelectedCallForRecording] = useState<CallHistoryItem | null>(null);\r\n  const [showRecordingPlayer, setShowRecordingPlayer] = useState(false);\r\n\r\n  // Chat sidebar states\r\n  const [showChatSidebar, setShowChatSidebar] = useState(false);\r\n  const [chatContact, setChatContact] = useState<Contact | null>(null);\r\n\r\n  // Email modal states\r\n  const [showEmailModal, setShowEmailModal] = useState(false);\r\n  const [emailContact, setEmailContact] = useState<Contact | null>(null);\r\n  const [emailData, setEmailData] = useState({\r\n    to: \"\",\r\n    cc: \"\",\r\n    bcc: \"\",\r\n    subject: \"\",\r\n    body: \"\",\r\n    attachments: [] as string[]\r\n  });\r\n  const [isSendingEmail, setIsSendingEmail] = useState(false);\r\n  const [gmailConnected, setGmailConnected] = useState(false);\r\n  const [checkingGmailStatus, setCheckingGmailStatus] = useState(false);\r\n  const [smtpAvailable, setSmtpAvailable] = useState(false);\r\n  const [checkingEmailServices, setCheckingEmailServices] = useState(false);\r\n  const [connectedGmailEmail, setConnectedGmailEmail] = useState<string>(\"\");\r\n  const [isConnectingGmail, setIsConnectingGmail] = useState(false);\r\n  const [isUnlinkingGmail, setIsUnlinkingGmail] = useState(false);\r\n\r\n  // Check email services availability\r\n  const checkEmailServices = async () => {\r\n    setCheckingEmailServices(true);\r\n    try {\r\n      // Check Contact Gmail status (for contact email functionality)\r\n      setCheckingGmailStatus(true);\r\n      try {\r\n        const contactGmailStatus = await getContactGmailStatus();\r\n        setGmailConnected(contactGmailStatus.isConnected);\r\n\r\n        // Set connected Gmail email if available\r\n        if (contactGmailStatus.isConnected && contactGmailStatus.email) {\r\n          setConnectedGmailEmail(contactGmailStatus.email);\r\n        } else {\r\n          setConnectedGmailEmail(\"\");\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking Contact Gmail status:', error);\r\n        setGmailConnected(false);\r\n        setConnectedGmailEmail(\"\");\r\n      } finally {\r\n        setCheckingGmailStatus(false);\r\n      }\r\n\r\n      // Check SMTP service status\r\n      try {\r\n        const smtpStatus = await getEmailServiceStatus();\r\n        setSmtpAvailable(smtpStatus.isConfigured);\r\n      } catch (error) {\r\n        console.error('Error checking SMTP status:', error);\r\n        setSmtpAvailable(false);\r\n      }\r\n\r\n      return { gmailConnected: gmailConnected, smtpAvailable: smtpAvailable };\r\n    } finally {\r\n      setCheckingEmailServices(false);\r\n    }\r\n  };\r\n\r\n  // Legacy function for backward compatibility\r\n  const checkGmailStatus = async () => {\r\n    const result = await checkEmailServices();\r\n    return result.gmailConnected;\r\n  };\r\n\r\n  // Handle Contact Gmail connection\r\n  const handleConnectGmailForContacts = async () => {\r\n    setIsConnectingGmail(true);\r\n    try {\r\n      await connectContactGmail();\r\n      // Refresh email services status after connection\r\n      await checkEmailServices();\r\n    } catch (error) {\r\n      console.error(\"Error connecting Contact Gmail:\", error);\r\n    } finally {\r\n      setIsConnectingGmail(false);\r\n    }\r\n  };\r\n\r\n  // Handle Contact Gmail unlink\r\n  const handleUnlinkGmailForContacts = async () => {\r\n    setIsUnlinkingGmail(true);\r\n    try {\r\n      await disconnectContactGmail();\r\n      // Refresh email services status after disconnection\r\n      await checkEmailServices();\r\n    } catch (error) {\r\n      console.error(\"Error unlinking Contact Gmail:\", error);\r\n    } finally {\r\n      setIsUnlinkingGmail(false);\r\n    }\r\n  };\r\n\r\n  // Handle Add List button click with credit checking\r\n  const handleAddListClick = async () => {\r\n    if (isSuperAdmin) {\r\n      setShowAddListSheet(true);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axiosInstance.get('/api/credits/balance');\r\n      const balance = response.data.data;\r\n\r\n      if (!balance || parseFloat(balance.available_credits) < 1) {\r\n        setCurrentBalance(balance?.available_credits || 0);\r\n        setShowInsufficientCreditsModal(true);\r\n        return;\r\n      }\r\n\r\n      setShowAddListSheet(true);\r\n    } catch (error) {\r\n      console.error('Error checking credit balance:', error);\r\n      toast.error('Unable to verify credit balance. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Fetch contact lists\r\n  const fetchLists = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await getAllContactLists(1, listSearch, isSuperAdmin);\r\n      if (response.success) {\r\n        // Ensure response.data is an array\r\n        const listsData = Array.isArray(response.data) ? response.data : [];\r\n        setLists(listsData);\r\n      } else {\r\n        setLists([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching lists:\", error);\r\n      setLists([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Check email services on component mount\r\n  useEffect(() => {\r\n    checkEmailServices();\r\n  }, []);\r\n\r\n  // Listen for Gmail connection success (when user returns from OAuth)\r\n  useEffect(() => {\r\n    const handleFocus = () => {\r\n      // Re-check email services when window regains focus (user returns from OAuth)\r\n      checkEmailServices();\r\n    };\r\n\r\n    window.addEventListener('focus', handleFocus);\r\n    return () => window.removeEventListener('focus', handleFocus);\r\n  }, []);\r\n\r\n  // Fetch contacts for selected list\r\n  const fetchContacts = async (listId: number) => {\r\n    try {\r\n      setContactsLoading(true);\r\n      const response = await getContactsForList(listId.toString(), currentPage, contactSearch);\r\n      console.log(\"Full API response:\", response);\r\n\r\n      if (response.success) {\r\n        // The contacts are nested under response.data.contacts\r\n        const contactsData = Array.isArray(response.data?.contacts) ? response.data.contacts : [];\r\n        console.log(\"Extracted contacts:\", contactsData);\r\n        setContacts(contactsData);\r\n        setTotalPages(response.data?.pagination?.totalPages || 1);\r\n      } else {\r\n        console.log(\"Response not successful:\", response);\r\n        setContacts([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching contacts:\", error);\r\n\r\n      // Type guard for axios error\r\n      const isAxiosError = (err: unknown): err is { response?: { status?: number; data?: any }; message?: string } => {\r\n        return typeof err === 'object' && err !== null;\r\n      };\r\n\r\n      // Type guard for error with message\r\n      const hasMessage = (err: unknown): err is { message: string } => {\r\n        return typeof err === 'object' && err !== null && 'message' in err && typeof (err as any).message === 'string';\r\n      };\r\n\r\n      // Check if it's a \"no contacts found\" scenario\r\n      const isNoContactsFound = isAxiosError(error) && (\r\n        error.response?.status === 404 ||\r\n        error.response?.data?.message?.toLowerCase().includes('not found') ||\r\n        error.response?.data?.error?.toLowerCase().includes('not found')\r\n      );\r\n\r\n      // Only show toast for actual errors, not when no contacts are found\r\n      if (!isNoContactsFound) {\r\n        if (isAxiosError(error)) {\r\n          console.error(\"Error details:\", error.response?.data || error.message);\r\n          const errorMessage = error.response?.data?.error || error.message || 'Unknown error occurred';\r\n          toast.error(`Failed to fetch contacts: ${errorMessage}`);\r\n        } else if (hasMessage(error)) {\r\n          console.error(\"Error details:\", error.message);\r\n          toast.error(`Failed to fetch contacts: ${error.message}`);\r\n        } else {\r\n          console.error(\"Error details:\", String(error));\r\n          toast.error(\"Failed to fetch contacts: Unknown error occurred\");\r\n        }\r\n      } else {\r\n        console.error(\"Error details:\", error.response?.data || error.message);\r\n      }\r\n\r\n      setContacts([]);\r\n    } finally {\r\n      setContactsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    fetchLists();\r\n  }, [listSearch, isSuperAdmin]);\r\n\r\n  useEffect(() => {\r\n    if (selectedList) {\r\n      fetchContacts(selectedList.id);\r\n    }\r\n  }, [selectedList, currentPage, contactSearch]);\r\n\r\n  // Fetch call history when contact changes or call history page changes\r\n  useEffect(() => {\r\n    if (selectedContact && selectedContact.phoneNumber) {\r\n      fetchCallHistory(selectedContact);\r\n    }\r\n  }, [selectedContact, callHistoryPage]);\r\n\r\n  // Handlers\r\n  const handleListSelect = (list: ContactList) => {\r\n    if (list.is_deleted && !isSuperAdmin) {\r\n      toast.error(\"This list has been disabled and is not accessible.\");\r\n      return;\r\n    }\r\n    console.log(\"Selected list:\", list);\r\n    setSelectedList(list);\r\n    setSelectedContact(null);\r\n    setIsEditingContact(false);\r\n    setIsAddingContact(false); // Close add contact form when switching lists\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleContactSelect = (contact: Contact) => {\r\n    setSelectedContact(contact);\r\n    // Reset call history when selecting a new contact\r\n    setCallHistory([]);\r\n    setCallHistoryPage(1);\r\n    setCallHistoryTotal(0);\r\n  };\r\n\r\n  const handlePageChange = (page: number) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  // Fetch call history for selected contact\r\n  const fetchCallHistory = async (contact: Contact) => {\r\n    if (!contact.phoneNumber) return;\r\n\r\n    try {\r\n      setCallHistoryLoading(true);\r\n      const response = await getContactCallHistory(contact.phoneNumber, callHistoryPage, 10);\r\n      setCallHistory(response.calls);\r\n      setCallHistoryTotal(response.totalCalls);\r\n    } catch (error) {\r\n      console.error(\"Error fetching call history:\", error);\r\n      setCallHistory([]);\r\n      setCallHistoryTotal(0);\r\n    } finally {\r\n      setCallHistoryLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle recording playback\r\n  const handlePlayRecording = async (call: CallHistoryItem) => {\r\n    if (!hasRecording(call)) return;\r\n\r\n    try {\r\n      setSelectedCallForRecording(call);\r\n      setShowRecordingPlayer(true);\r\n    } catch (error) {\r\n      console.error(\"Error playing recording:\", error);\r\n      toast.error(\"Failed to play recording\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // Handle edit contact\r\n  const handleEditContact = (contact: Contact) => {\r\n    setEditingContactData({\r\n      fullName: contact.fullName || \"\",\r\n      email: contact.email || \"\",\r\n      phoneNumber: contact.phoneNumber || \"\"\r\n    });\r\n    setIsEditingContact(true);\r\n  };\r\n\r\n  // Handle save contact edit\r\n  const handleSaveContactEdit = async () => {\r\n    if (!selectedContact) return;\r\n\r\n    // Validate phone number format (+1 followed by 10 digits)\r\n    const phoneRegex = /^\\+1[0-9]{10}$/;\r\n    if (editingContactData.phoneNumber && !phoneRegex.test(editingContactData.phoneNumber)) {\r\n      toast.error(\"Phone Number must start with +1 followed by 10 digits (e.g., +1234567890)\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await updateContact(selectedContact.id.toString(), editingContactData);\r\n      toast.success(\"Contact updated successfully\");\r\n      setIsEditingContact(false);\r\n\r\n      // Refresh contacts list\r\n      if (selectedList) {\r\n        fetchContacts(selectedList.id);\r\n      }\r\n\r\n      // Update selected contact\r\n      setSelectedContact({\r\n        ...selectedContact,\r\n        ...editingContactData\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error updating contact:\", error);\r\n      // Error toast is handled in the service\r\n    }\r\n  };\r\n\r\n  // Handle cancel edit\r\n  const handleCancelEdit = () => {\r\n    setIsEditingContact(false);\r\n    setEditingContactData({\r\n      fullName: \"\",\r\n      email: \"\",\r\n      phoneNumber: \"\"\r\n    });\r\n  };\r\n\r\n  // Handle save new contact\r\n  const handleSaveNewContact = async () => {\r\n    if (!selectedList || !addingContactData.fullName || !addingContactData.email || !addingContactData.phoneNumber) {\r\n      toast.error(\"Please fill in all required fields\");\r\n      return;\r\n    }\r\n\r\n    // Validate phone number format (+1 followed by 10 digits)\r\n    const phoneRegex = /^\\+1[0-9]{10}$/;\r\n    if (!phoneRegex.test(addingContactData.phoneNumber)) {\r\n      toast.error(\"Phone Number must start with +1 followed by 10 digits (e.g., +1234567890)\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await addContactToList(selectedList.id.toString(), {\r\n        fullName: addingContactData.fullName,\r\n        email: addingContactData.email,\r\n        contact_number: addingContactData.phoneNumber,\r\n        phoneNumber: addingContactData.phoneNumber\r\n      });\r\n\r\n      toast.success(\"Contact added successfully\");\r\n\r\n      // Refresh contacts list\r\n      fetchContacts(selectedList.id);\r\n\r\n      // Update the contact count for the selected list\r\n      setLists(prevLists =>\r\n        prevLists.map(list =>\r\n          list.id === selectedList.id\r\n            ? { ...list, contactCount: list.contactCount + 1 }\r\n            : list\r\n        )\r\n      );\r\n\r\n      // Close add contact form\r\n      setIsAddingContact(false);\r\n      setAddingContactData({\r\n        fullName: \"\",\r\n        email: \"\",\r\n        phoneNumber: \"\"\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error adding contact:\", error);\r\n      // Error toast is handled in the service\r\n    }\r\n  };\r\n\r\n  // Handle cancel add contact\r\n  const handleCancelAddContact = () => {\r\n    setIsAddingContact(false);\r\n    setAddingContactData({\r\n      fullName: \"\",\r\n      email: \"\",\r\n      phoneNumber: \"\"\r\n    });\r\n  };\r\n\r\n  // Load agents and phone numbers for dialer\r\n  const loadDialerData = async () => {\r\n    try {\r\n      const [agentsResponse, phoneNumbersResponse] = await Promise.all([\r\n        fetchAllAgentsComplete(\"\"),\r\n        getAllPhoneNumbers()\r\n      ]);\r\n\r\n      console.log(\"🔍 Debug - Loaded dialer data:\", {\r\n        agentsCount: agentsResponse?.data?.length || 0,\r\n        phoneNumbersCount: phoneNumbersResponse?.data?.length || 0,\r\n        sampleAgent: agentsResponse?.data?.[0] ? {\r\n          id: agentsResponse.data[0].id,\r\n          assistant_id: agentsResponse.data[0].assistant_id,\r\n          name: agentsResponse.data[0].name\r\n        } : null\r\n      });\r\n\r\n      // Handle agents response - it returns { data: Assistant[], total: number }\r\n      setAgents(agentsResponse?.data || []);\r\n      setPhoneNumbers(phoneNumbersResponse?.data || []);\r\n    } catch (error) {\r\n      console.error(\"Error loading dialer data:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle phone button click\r\n  const handlePhoneClick = async (contact: Contact) => {\r\n    if (!contact.phoneNumber) {\r\n      toast.error(\"Contact has no phone number\");\r\n      return;\r\n    }\r\n\r\n    setDialerContact(contact);\r\n    setShowDialer(true);\r\n\r\n    // Load agents and phone numbers if not already loaded\r\n    if (agents.length === 0 || phoneNumbers.length === 0) {\r\n      await loadDialerData();\r\n    }\r\n  };\r\n\r\n  // Handle chat button click\r\n  const handleChatClick = (contact: Contact) => {\r\n    if (!contact.phoneNumber) {\r\n      toast.error(\"Contact has no phone number for messaging\");\r\n      return;\r\n    }\r\n\r\n    setChatContact(contact);\r\n    setShowChatSidebar(true);\r\n  };\r\n\r\n  // Handle email button click\r\n  const handleEmailClick = (contact: Contact) => {\r\n    if (!contact.email) {\r\n      toast.error(\"Contact has no email address\");\r\n      return;\r\n    }\r\n\r\n    setEmailContact(contact);\r\n    setEmailData({\r\n      to: contact.email,\r\n      cc: \"\",\r\n      bcc: \"\",\r\n      subject: \"\",\r\n      body: \"\",\r\n      attachments: []\r\n    });\r\n    setShowEmailModal(true);\r\n  };\r\n\r\n  // Handle send email\r\n  const handleSendEmail = async () => {\r\n    if (!emailData.to || !emailData.subject || !emailData.body) {\r\n      toast.error(\"Please fill in To, Subject, and Body fields\");\r\n      return;\r\n    }\r\n\r\n    // Check email services availability\r\n    const services = await checkEmailServices();\r\n\r\n    if (!services.gmailConnected && !services.smtpAvailable) {\r\n      toast.error(\"No email service available. Please connect Gmail or configure SMTP.\");\r\n      return;\r\n    }\r\n\r\n    setIsSendingEmail(true);\r\n    try {\r\n      // Try Contact Gmail first if connected, otherwise use SMTP\r\n      if (services.gmailConnected) {\r\n        await sendContactGmailEmail({\r\n          to: emailData.to,\r\n          cc: emailData.cc || undefined,\r\n          bcc: emailData.bcc || undefined,\r\n          subject: emailData.subject,\r\n          body: emailData.body,\r\n          isHtml: false\r\n        });\r\n      } else if (services.smtpAvailable) {\r\n        await sendSMTPEmail({\r\n          to: emailData.to,\r\n          cc: emailData.cc || undefined,\r\n          bcc: emailData.bcc || undefined,\r\n          subject: emailData.subject,\r\n          body: emailData.body,\r\n          isHtml: false\r\n        });\r\n      }\r\n\r\n      setShowEmailModal(false);\r\n      setEmailData({\r\n        to: \"\",\r\n        cc: \"\",\r\n        bcc: \"\",\r\n        subject: \"\",\r\n        body: \"\",\r\n        attachments: []\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error sending email:\", error);\r\n      // Error toast is handled in the service\r\n    } finally {\r\n      setIsSendingEmail(false);\r\n    }\r\n  };\r\n\r\n  // Format phone number to E.164 format\r\n  const formatPhoneToE164 = (phoneNumber: string): string => {\r\n    // Remove all non-digit characters\r\n    let cleaned = phoneNumber.replace(/\\D/g, '');\r\n\r\n    // Handle different cases\r\n    if (cleaned.length === 10) {\r\n      // US number without country code (e.g., 5551234567)\r\n      cleaned = '1' + cleaned;\r\n    } else if (cleaned.length === 11 && cleaned.startsWith('1')) {\r\n      // US number with country code (e.g., 15551234567)\r\n      // Keep as is\r\n    } else if (cleaned.length < 10) {\r\n      // Invalid number - too short\r\n      throw new Error('Phone number is too short');\r\n    }\r\n    // For other lengths, assume it already has the correct country code\r\n\r\n    // Add the + prefix\r\n    return '+' + cleaned;\r\n  };\r\n\r\n  // Handle make call\r\n  const handleMakeCall = async () => {\r\n    if (!dialerContact || !selectedAgent || !selectedFromNumber) {\r\n      toast.error(\"Please select an agent and from number\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"🔍 Debug - Making call with:\", {\r\n      selectedAgent,\r\n      availableAgents: agents.map(a => ({ id: a.id, assistant_id: a.assistant_id, name: a.name })),\r\n      dialerContact: dialerContact.fullName,\r\n      selectedFromNumber\r\n    });\r\n\r\n    // Find the selected agent - try both id and assistant_id\r\n    let selectedAgentData = agents.find(agent => agent.id === selectedAgent);\r\n    if (!selectedAgentData) {\r\n      selectedAgentData = agents.find(agent => agent.assistant_id === selectedAgent);\r\n    }\r\n\r\n    if (!selectedAgentData) {\r\n      console.error(\"❌ Selected agent not found in agents array:\", {\r\n        selectedAgent,\r\n        availableAgentIds: agents.map(a => a.id),\r\n        availableAssistantIds: agents.map(a => a.assistant_id)\r\n      });\r\n      toast.error(\"Selected agent not found\");\r\n      return;\r\n    }\r\n\r\n    // Use assistant_id (VAPI UUID) if available, otherwise use id\r\n    const assistantUUID = selectedAgentData.assistant_id || selectedAgentData.id;\r\n\r\n    console.log(\"Making call with:\", {\r\n      selectedAgentData,\r\n      assistantUUID,\r\n      originalPhoneNumber: dialerContact.phoneNumber,\r\n      selectedFromNumber\r\n    });\r\n\r\n    setIsLoadingCall(true);\r\n    try {\r\n      // Format phone number to E.164\r\n      const formattedPhoneNumber = formatPhoneToE164(dialerContact.phoneNumber);\r\n\r\n      console.log(\"Formatted phone number:\", formattedPhoneNumber);\r\n      const callResponse = await createOutboundCall({\r\n        assistantId: assistantUUID, // Use the VAPI UUID\r\n        phoneNumber: formattedPhoneNumber, // Use E.164 formatted number\r\n        phoneNumberId: selectedFromNumber, // Use the selected phone number ID\r\n        metadata: {\r\n          contactId: dialerContact.id,\r\n          contactName: dialerContact.fullName,\r\n          listId: selectedList?.id,\r\n          listName: selectedList?.list_name\r\n        }\r\n      });\r\n\r\n      console.log(\"📞 Call response:\", callResponse);\r\n      console.log(\"📞 Call response structure:\", {\r\n        id: callResponse.id,\r\n        callId: callResponse.callId,\r\n        data: callResponse.data,\r\n        monitor: callResponse.monitor,\r\n        dataMonitor: callResponse.data?.monitor,\r\n        controlUrl: callResponse.monitor?.controlUrl || callResponse.data?.monitor?.controlUrl\r\n      });\r\n\r\n      toast.success(`Call initiated to ${dialerContact.fullName}`);\r\n\r\n      // Store call data for control operations\r\n      setCallData(callResponse);\r\n      const callId = callResponse.id || callResponse.callId || callResponse.data?.id;\r\n      const controlUrl = callResponse.monitor?.controlUrl || callResponse.data?.monitor?.controlUrl;\r\n\r\n      console.log(\"📞 Extracted call control data:\", { callId, controlUrl });\r\n\r\n      setCurrentCallId(callId);\r\n      setCallControlUrl(controlUrl);\r\n\r\n      // Set call as active and start timer\r\n      setIsCallActive(true);\r\n      setCallDuration(0);\r\n\r\n      // Start call timer\r\n      const timer = setInterval(() => {\r\n        setCallDuration(prev => prev + 1);\r\n      }, 1000);\r\n      setCallTimer(timer);\r\n\r\n      // Don't close the modal - keep it open for call controls\r\n      // setShowDialer(false);\r\n      // setSelectedAgent(\"\");\r\n      // setSelectedFromNumber(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error making call:\", error);\r\n      // Error toast is handled in the service\r\n    } finally {\r\n      setIsLoadingCall(false);\r\n    }\r\n  };\r\n\r\n  // Call control functions\r\n  const handleMuteToggle = async () => {\r\n    console.log(\"🔇 Mute toggle - Call control data:\", {\r\n      currentCallId,\r\n      callControlUrl,\r\n      isMuted,\r\n      callData\r\n    });\r\n\r\n    if (!currentCallId || !callControlUrl) {\r\n      console.error(\"❌ Call control not available:\", { currentCallId, callControlUrl });\r\n      toast.error(\"Call control not available - missing call ID or control URL\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (isMuted) {\r\n        await unmuteCall(currentCallId, callControlUrl);\r\n        setIsMuted(false);\r\n      } else {\r\n        await muteCall(currentCallId, callControlUrl);\r\n        setIsMuted(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error toggling mute:\", error);\r\n      // Toast error is handled in the service functions\r\n    }\r\n  };\r\n\r\n  const handleHoldToggle = () => {\r\n    // Note: VAPI doesn't have a direct hold/resume API\r\n    // This is a UI-only feature for now\r\n    setIsOnHold(!isOnHold);\r\n    toast.success(isOnHold ? \"Call resumed\" : \"Call on hold\");\r\n    // TODO: Implement actual hold/resume when VAPI supports it\r\n  };\r\n\r\n  const handleEndCall = async () => {\r\n    console.log(\"📞 End call - Call control data:\", {\r\n      currentCallId,\r\n      callControlUrl,\r\n      callData\r\n    });\r\n\r\n    if (!currentCallId || !callControlUrl) {\r\n      console.error(\"❌ Call control not available:\", { currentCallId, callControlUrl });\r\n\r\n      // Clear call timer and close modal even if call control is not available\r\n      if (callTimer) {\r\n        clearInterval(callTimer);\r\n        setCallTimer(null);\r\n      }\r\n\r\n      setIsCallActive(false);\r\n      setIsMuted(false);\r\n      setIsOnHold(false);\r\n      setCurrentCallId(null);\r\n      setCallControlUrl(null);\r\n      setCallData(null);\r\n      setCallDuration(0);\r\n\r\n      setShowDialer(false);\r\n      setSelectedAgent(\"\");\r\n      setSelectedFromNumber(\"\");\r\n      return;\r\n    }\r\n\r\n    // Close modal and clean up state immediately for better UX\r\n    if (callTimer) {\r\n      clearInterval(callTimer);\r\n      setCallTimer(null);\r\n    }\r\n\r\n    setIsCallActive(false);\r\n    setIsMuted(false);\r\n    setIsOnHold(false);\r\n    setCurrentCallId(null);\r\n    setCallControlUrl(null);\r\n    setCallData(null);\r\n    setCallDuration(0);\r\n\r\n    setShowDialer(false);\r\n    setSelectedAgent(\"\");\r\n    setSelectedFromNumber(\"\");\r\n\r\n    // Attempt to end call in background without blocking UI\r\n    try {\r\n      endCallViaControl(currentCallId, callControlUrl).catch(error => {\r\n        console.error(\"Background call ending failed:\", error);\r\n        // Silently handle the error - UI is already updated\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error initiating call end:\", error);\r\n      // Silently handle the error - UI is already updated\r\n    }\r\n  };\r\n\r\n  // Format call duration\r\n  const formatCallDuration = (seconds: number) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  // Handle add contact to list\r\n  const handleAddContactToList = () => {\r\n    if (selectedList) {\r\n      // Clear any selected contact and open add contact form in sidebar\r\n      setSelectedContact(null);\r\n      setIsEditingContact(false);\r\n      setIsAddingContact(true);\r\n      setAddingContactData({\r\n        fullName: \"\",\r\n        email: \"\",\r\n        phoneNumber: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  // Handle delete contact confirmation\r\n  const handleDeleteContactConfirm = (contact: Contact) => {\r\n    setContactToDelete(contact);\r\n  };\r\n\r\n  // Handle delete contact\r\n  const handleDeleteContact = async () => {\r\n    if (!selectedList || !contactToDelete) return;\r\n\r\n    try {\r\n      await removeContactFromList(selectedList.id.toString(), contactToDelete.id.toString());\r\n      toast.success(\"Contact removed from list successfully\");\r\n\r\n      // Refresh contacts list\r\n      fetchContacts(selectedList.id);\r\n\r\n      // Update the contact count for the selected list\r\n      setLists(prevLists =>\r\n        prevLists.map(list =>\r\n          list.id === selectedList.id\r\n            ? { ...list, contactCount: Math.max(0, list.contactCount - 1) }\r\n            : list\r\n        )\r\n      );\r\n\r\n      // Close contact panel if deleted contact was selected\r\n      if (selectedContact?.id === contactToDelete.id) {\r\n        setSelectedContact(null);\r\n      }\r\n\r\n      // Close confirmation dialog\r\n      setContactToDelete(null);\r\n    } catch (error) {\r\n      console.error(\"Error removing contact:\", error);\r\n      // Error toast is handled in the service\r\n    }\r\n  };\r\n\r\n  // Utility functions\r\n\r\n  const getInitials = (email: string) => {\r\n    return email.substring(0, 2).toUpperCase();\r\n  };\r\n\r\n  const formatPhoneNumber = (phone: string) => {\r\n    if (!phone) return \"N/A\";\r\n    return phone.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"($1) $2-$3\");\r\n  };\r\n\r\n  // Filter lists based on search\r\n  const filteredLists = Array.isArray(lists) ? lists.filter(list =>\r\n    list.list_name.toLowerCase().includes(listSearch.toLowerCase())\r\n  ) : [];\r\n\r\n  // Filter contacts based on search\r\n  const filteredContacts = Array.isArray(contacts) ? contacts.filter(contact =>\r\n    contact.email.toLowerCase().includes(contactSearch.toLowerCase()) ||\r\n    contact.fullName?.toLowerCase().includes(contactSearch.toLowerCase())\r\n  ) : [];\r\n\r\n  return (\r\n    <Page>\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Contacts</h1>\r\n          <Badge variant=\"secondary\" className=\"px-3 py-1 bg-red-100 text-red-600\">\r\n            <span>{filteredLists.length}</span>\r\n          </Badge>\r\n          <span className=\"text-sm text-gray-500\">Total Contact groups: {filteredLists.length}</span>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          \r\n          <Button onClick={handleAddListClick} className=\"bg-red-500 hover:bg-red-600\">\r\n            <Plus className=\"h-4 w-8 mr-2\" />\r\n            Add\r\n          </Button>\r\n          {/* Debug button - remove after testing */}\r\n          \r\n        \r\n         \r\n        </div>\r\n      </div>\r\n\r\n      {/* Three Panel Layout */}\r\n      <div className=\"flex h-[calc(100vh-200px)] gap-4\">\r\n        {/* Left Panel - Contact Groups */}\r\n        <div className=\"w-80 bg-white border border-gray-300 rounded-lg flex flex-col\">\r\n          <div className=\"p-4 border-b border-gray-200\">\r\n            <h2 className=\"text-lg font-semibold mb-3\">Contact Groups</h2>\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n              <Input\r\n                placeholder=\"Search\"\r\n                value={listSearch}\r\n                onChange={(e) => setListSearch(e.target.value)}\r\n                className=\"pl-10\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex-1 overflow-y-auto\">\r\n            {loading ? (\r\n              <div className=\"p-4 text-center text-gray-500\">Loading...</div>\r\n            ) : filteredLists.length === 0 ? (\r\n              <div className=\"p-4 text-center text-gray-500\">No groups found</div>\r\n            ) : (\r\n              <div className=\"p-2\">\r\n                {filteredLists.map((list) => (\r\n                  <div\r\n                    key={list.id}\r\n                    onClick={() => handleListSelect(list)}\r\n                    className={`flex items-center p-3 rounded-lg cursor-pointer mb-1 transition-colors ${\r\n                      selectedList?.id === list.id\r\n                        ? 'bg-gray-900 text-white'\r\n                        : 'hover:bg-gray-100'\r\n                    } ${list.is_deleted ? 'opacity-50' : ''}`}\r\n                  >\r\n                    <div className=\"flex items-center space-x-3 flex-1\">\r\n                      <Avatar className=\"h-8 w-8\">\r\n                        <AvatarFallback className={selectedList?.id === list.id ? 'bg-gray-700' : 'bg-gray-200'}>\r\n                          {list.list_name.substring(0, 2).toUpperCase()}\r\n                        </AvatarFallback>\r\n                      </Avatar>\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <div className=\"font-medium truncate\">\r\n                          {list.list_name}\r\n                          {/* {list.is_deleted && (\r\n                            <span className=\"ml-2 text-xs bg-red-100 text-red-600 px-2 py-1 rounded-full\">\r\n                              Disabled\r\n                            </span>\r\n                          )} */}\r\n                        </div>\r\n                        <div className={`text-xs ${selectedList?.id === list.id ? 'text-gray-300' : 'text-gray-500'}`}>\r\n                          {list.contactCount} contacts\r\n                        </div>\r\n                      </div>\r\n                      <Badge variant=\"secondary\" className=\"text-xs\">\r\n                        {list.contactCount}\r\n                      </Badge>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Middle Panel - Contacts List */}\r\n        <div className=\"flex-1 bg-white border border-gray-300 rounded-lg flex flex-col\">\r\n          <div className=\"p-4 border-b border-gray-200\">\r\n            <div className=\"flex items-center justify-between mb-3\">\r\n              <div>\r\n                <h2 className=\"text-lg font-semibold\">\r\n                  {selectedList ? selectedList.list_name : \"Default\"}\r\n                </h2>\r\n                {selectedList && (\r\n                  <p className=\"text-sm text-gray-500\">\r\n                    {filteredContacts.length} contacts\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <DropdownMenu modal={false}>\r\n                      <DropdownMenuTrigger asChild>\r\n                        <Button variant=\"ghost\" size=\"sm\" aria-label=\"Contact options\">\r\n                          <MoreHorizontal className=\"h-4 w-4\" />\r\n                        </Button>\r\n                      </DropdownMenuTrigger>\r\n                      <DropdownMenuContent align=\"end\" side=\"bottom\" sideOffset={5}>\r\n                        <DropdownMenuItem onClick={() => handleAddContactToList()}>\r\n                          <UserPlus className=\"h-4 w-4 mr-2\" />\r\n                          Add Contacts\r\n                        </DropdownMenuItem>\r\n                        <DropdownMenuSeparator />\r\n                        <DropdownMenuItem\r\n                          onClick={() => selectedContact && handleEditContact(selectedContact)}\r\n                          disabled={!selectedContact}\r\n                        >\r\n                          <Edit className=\"h-4 w-4 mr-2\" />\r\n                          Edit Contact\r\n                        </DropdownMenuItem>\r\n                        <DropdownMenuSeparator />\r\n                        <DropdownMenuItem\r\n                          onClick={() => selectedContact && handleDeleteContactConfirm(selectedContact)}\r\n                          className=\"text-red-600 focus:text-red-600\"\r\n                          disabled={!selectedContact}\r\n                        >\r\n                          <Trash className=\"h-4 w-4 mr-2\" />\r\n                          Remove from List\r\n                        </DropdownMenuItem>\r\n                      </DropdownMenuContent>\r\n                    </DropdownMenu>\r\n              \r\n            </div>\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n              <Input\r\n                placeholder=\"Search\"\r\n                value={contactSearch}\r\n                onChange={(e) => setContactSearch(e.target.value)}\r\n                className=\"pl-10\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex-1 overflow-y-auto\">\r\n            {!selectedList ? (\r\n              <div className=\"flex items-center justify-center h-full text-gray-500\">\r\n                <div className=\"text-center\">\r\n                  <Users className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\r\n                  <p>Select a contact group to view contacts</p>\r\n                </div>\r\n              </div>\r\n            ) : contactsLoading ? (\r\n              <div className=\"p-4 text-center text-gray-500\">Loading contacts...</div>\r\n            ) : filteredContacts.length === 0 ? (\r\n              <div className=\"flex items-center justify-center h-full text-gray-500\">\r\n                <div className=\"text-center\">\r\n                  <Mail className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\r\n                  <p>No contacts found in this group</p>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"p-2\">\r\n                {filteredContacts.map((contact) => (\r\n                  <div\r\n                    key={contact.id}\r\n                    onClick={() => handleContactSelect(contact)}\r\n                    className={`flex items-center p-3 rounded-lg cursor-pointer mb-1 transition-colors ${\r\n                      selectedContact?.id === contact.id\r\n                        ? 'bg-blue-50 border border-blue-200'\r\n                        : 'hover:bg-gray-50'\r\n                    }`}\r\n                  >\r\n                    <div className=\"flex items-center space-x-3 flex-1\">\r\n                      <Avatar className=\"h-10 w-10\">\r\n                        <AvatarFallback className=\"bg-green-100 text-green-600\">\r\n                          {getInitials(contact.email)}\r\n                        </AvatarFallback>\r\n                      </Avatar>\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <div className=\"font-medium text-gray-900\">\r\n                          {contact.fullName || \"No Name\"}\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-500 truncate\">\r\n                          {contact.email}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-2\">\r\n                      <Button\r\n                        size=\"sm\"\r\n                        className=\"rounded-full bg-green-600 hover:bg-green-700 text-white shadow-md p-2\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handlePhoneClick(contact);\r\n                        }}\r\n                      >\r\n                        <Phone className=\"h-4 w-4\" />\r\n                      </Button>\r\n\r\n                      <Button\r\n                        size=\"sm\"\r\n                        className=\"rounded-full bg-orange-600 hover:bg-orange-700 text-white shadow-md p-2\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleEmailClick(contact);\r\n                        }}\r\n                      >\r\n                        <Mail className=\"h-4 w-4\" />\r\n                      </Button>\r\n\r\n                      <Button\r\n                        size=\"sm\"\r\n                        className=\"rounded-full bg-blue-600 hover:bg-blue-700 text-white shadow-md p-2\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleChatClick(contact);\r\n                        }}\r\n                      >\r\n                        <MessageSquare className=\"h-4 w-4\" />\r\n                      </Button>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n        </div>\r\n\r\n        {/* Right Panel - Contact Details */}\r\n        <div className=\"w-96 bg-white border border-gray-300 rounded-lg flex flex-col\">\r\n          {isAddingContact ? (\r\n            <>\r\n              {/* Add Contact Header */}\r\n              <div className=\"p-6 border-b border-gray-200\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <div className=\"h-16 w-16 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                      <UserPlus className=\"h-8 w-8 text-blue-600\" />\r\n                    </div>\r\n                    <div>\r\n                      <h3 className=\"text-xl font-semibold text-gray-900\">Add New Contact</h3>\r\n                      <p className=\"text-sm text-gray-500\">Add contact to {selectedList?.list_name}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex space-x-2\">\r\n                    <Button variant=\"outline\" size=\"sm\" onClick={handleCancelAddContact}>\r\n                      Cancel\r\n                    </Button>\r\n                    <Button size=\"sm\" onClick={handleSaveNewContact}>\r\n                      Save\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Add Contact Form */}\r\n              <div className=\"flex-1 overflow-y-auto p-6\">\r\n                <div className=\"space-y-6\">\r\n                  <div>\r\n                    <h4 className=\"text-sm font-medium text-gray-900 mb-3\">Contact Information</h4>\r\n                    <div className=\"space-y-4\">\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                          Full Name *\r\n                        </label>\r\n                        <Input\r\n                          value={addingContactData.fullName}\r\n                          onChange={(e) => setAddingContactData(prev => ({ ...prev, fullName: e.target.value }))}\r\n                          placeholder=\"Enter full name\"\r\n                          className=\"w-full\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                          Email Address *\r\n                        </label>\r\n                        <Input\r\n                          type=\"email\"\r\n                          value={addingContactData.email}\r\n                          onChange={(e) => setAddingContactData(prev => ({ ...prev, email: e.target.value }))}\r\n                          placeholder=\"Enter email address\"\r\n                          className=\"w-full\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                          Phone Number *\r\n                        </label>\r\n                        <Input\r\n                          type=\"tel\"\r\n                          value={addingContactData.phoneNumber}\r\n                          onChange={(e) => setAddingContactData(prev => ({ ...prev, phoneNumber: e.target.value }))}\r\n                          placeholder=\"Enter phone number with +1 (e.g., +1234567890)\"\r\n                          className=\"w-full\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : !selectedContact ? (\r\n            <div className=\"flex items-center justify-center h-full text-gray-500\">\r\n              <div className=\"text-center\">\r\n                <Users className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\r\n                <p>Select a contact to view details</p>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* Contact Header */}\r\n              <div className=\"p-6 border-b border-gray-200\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <Avatar className=\"h-16 w-16\">\r\n                    <AvatarFallback className=\"bg-green-100 text-green-600 text-xl\">\r\n                      {getInitials(selectedContact.email)}\r\n                    </AvatarFallback>\r\n                  </Avatar>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                  <Button\r\n                    size=\"sm\"\r\n                    className=\"rounded-full bg-green-600 hover:bg-green-700 text-white shadow-md p-2\"\r\n                    onClick={() => selectedContact && handlePhoneClick(selectedContact)}\r\n                  >\r\n                    <Phone className=\"h-4 w-4\" />\r\n                  </Button>\r\n\r\n                    \r\n                    \r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"text-xl font-semibold text-gray-900 mb-1\">\r\n                    {isEditingContact ? editingContactData.fullName || \"No Name\" : selectedContact.fullName || \"No Name\"}\r\n                  </h3>\r\n                  <p className=\"text-sm text-gray-500\">\r\n                    {isEditingContact ? formatPhoneNumber(editingContactData.phoneNumber) : formatPhoneNumber(selectedContact.phoneNumber)}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Contact Details */}\r\n              <div className=\"flex-1 overflow-y-auto p-6\">\r\n                <div className=\"space-y-6\">\r\n                  {/* General Info */}\r\n                  <div>\r\n                    <div className=\"flex items-center justify-between mb-3\">\r\n                      <h4 className=\"text-sm font-medium text-gray-900\">General Info</h4>\r\n                      {isEditingContact && (\r\n                        <div className=\"flex space-x-2\">\r\n                          <Button variant=\"outline\" size=\"sm\" onClick={handleCancelEdit}>\r\n                            Cancel\r\n                          </Button>\r\n                          <Button size=\"sm\" onClick={handleSaveContactEdit}>\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n\r\n                    {isEditingContact ? (\r\n                      <div className=\"space-y-4\">\r\n                        <div>\r\n                          <label className=\"text-sm font-medium text-gray-900 block mb-1\">Full Name</label>\r\n                          <Input\r\n                            value={editingContactData.fullName}\r\n                            onChange={(e) => setEditingContactData({\r\n                              ...editingContactData,\r\n                              fullName: e.target.value\r\n                            })}\r\n                            placeholder=\"Enter full name\"\r\n                          />\r\n                        </div>\r\n                        <div>\r\n                          <label className=\"text-sm font-medium text-gray-900 block mb-1\">Phone Number</label>\r\n                          <Input\r\n                            value={editingContactData.phoneNumber}\r\n                            onChange={(e) => setEditingContactData({\r\n                              ...editingContactData,\r\n                              phoneNumber: e.target.value\r\n                            })}\r\n                            placeholder=\"Enter phone number with +1 (e.g., +1234567890)\"\r\n                          />\r\n                        </div>\r\n                        <div>\r\n                          <label className=\"text-sm font-medium text-gray-900 block mb-1\">Email Address</label>\r\n                          <Input\r\n                            value={editingContactData.email}\r\n                            onChange={(e) => setEditingContactData({\r\n                              ...editingContactData,\r\n                              email: e.target.value\r\n                            })}\r\n                            placeholder=\"Enter email address\"\r\n                            type=\"email\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"space-y-3\">\r\n                        <div className=\"flex items-center space-x-3\">\r\n                          <Phone className=\"h-4 w-4 text-gray-400\" />\r\n                          <div className=\"flex-1\">\r\n                            <p className=\"text-sm font-medium text-gray-900\">Phone Number</p>\r\n                            <p className=\"text-sm text-gray-500\">\r\n                              {formatPhoneNumber(selectedContact.phoneNumber)}\r\n                            </p>\r\n                          </div>\r\n                          \r\n                        </div>\r\n                        <div className=\"flex items-center space-x-3\">\r\n                          <Mail className=\"h-4 w-4 text-gray-400\" />\r\n                          <div>\r\n                            <p className=\"text-sm font-medium text-gray-900\">Email Address</p>\r\n                            <p className=\"text-sm text-gray-500\">{selectedContact.email}</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Labels */}\r\n                  <div>\r\n                    <div className=\"flex items-center justify-between mb-3\">\r\n                      <h4 className=\"text-sm font-medium text-gray-900\">Labels</h4>\r\n                      <Button variant=\"ghost\" size=\"sm\">\r\n                        <Plus className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Tabs for Notes, Call History, Chat History */}\r\n                  <div>\r\n                    <Tabs defaultValue=\"notes\" className=\"w-full\">\r\n                      <TabsList className=\"grid w-full grid-cols-3\">\r\n                        <TabsTrigger value=\"notes\" className=\"text-xs\">Notes</TabsTrigger>\r\n                        <TabsTrigger value=\"calls\" className=\"text-xs\">Call History</TabsTrigger>\r\n                        <TabsTrigger value=\"chats\" className=\"text-xs\">Chat History</TabsTrigger>\r\n                      </TabsList>\r\n                      <TabsContent value=\"notes\" className=\"mt-4\">\r\n                        <div className=\"text-center py-8\">\r\n                          <FileText className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\r\n                          <p className=\"text-sm text-gray-500 mb-4\">No notes yet</p>\r\n                          <p className=\"text-xs text-gray-400\">Add your first note using the text area above</p>\r\n                        </div>\r\n                      </TabsContent>\r\n                      <TabsContent value=\"calls\" className=\"mt-4\">\r\n                        {callHistoryLoading ? (\r\n                          <div className=\"text-center py-8\">\r\n                            <Loader2 className=\"h-8 w-8 mx-auto mb-4 text-gray-400 animate-spin\" />\r\n                            <p className=\"text-sm text-gray-500\">Loading call history...</p>\r\n                          </div>\r\n                        ) : callHistory.length === 0 ? (\r\n                          <div className=\"text-center py-8\">\r\n                            <Phone className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\r\n                            <p className=\"text-sm text-gray-500\">No call history</p>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"space-y-3\">\r\n                            {callHistory.map((call) => {\r\n                              const status = formatCallStatus(call.status);\r\n                              const hasRec = hasRecording(call);\r\n\r\n                              return (\r\n                                <div key={call.call_id} className=\"border border-gray-200 rounded-lg p-4 hover:bg-gray-50\">\r\n                                  <div className=\"flex items-center justify-between mb-2\">\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                      <Phone className=\"h-4 w-4 text-gray-400\" />\r\n                                      <span className=\"text-sm font-medium text-gray-900\">\r\n                                        {formatCallDate(call.created_at)}\r\n                                      </span>\r\n                                      <Badge variant=\"secondary\" className={`text-xs ${status.color}`}>\r\n                                        {status.text}\r\n                                      </Badge>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                      {hasRec && (\r\n                                        <Button\r\n                                          size=\"sm\"\r\n                                          variant=\"ghost\"\r\n                                          onClick={() => handlePlayRecording(call)}\r\n                                          className=\"h-6 w-6 p-0\"\r\n                                        >\r\n                                          <History className=\"h-3 w-3\" />\r\n                                        </Button>\r\n                                      )}\r\n                                      <span className=\"text-xs text-gray-500\">\r\n                                        {formatDuration(call.duration)}\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  <div className=\"flex items-center justify-between text-xs text-gray-500\">\r\n                                    <span>\r\n                                      {call.assistant_name || 'Unknown Assistant'}\r\n                                    </span>\r\n                                    <span>\r\n                                      {formatCallCost(call.cost)}\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })}\r\n\r\n                            {callHistoryTotal > 10 && (\r\n                              <div className=\"text-center pt-4\">\r\n                                <Button\r\n                                  variant=\"outline\"\r\n                                  size=\"sm\"\r\n                                  onClick={() => setCallHistoryPage(prev => prev + 1)}\r\n                                  disabled={callHistory.length >= callHistoryTotal}\r\n                                >\r\n                                  Load More\r\n                                </Button>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      </TabsContent>\r\n                      <TabsContent value=\"chats\" className=\"mt-4\">\r\n                        <div className=\"text-center py-8\">\r\n                          <MessageSquare className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\r\n                          <p className=\"text-sm text-gray-500\">No chat history</p>\r\n                        </div>\r\n                      </TabsContent>\r\n                    </Tabs>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Insufficient Credits Modal */}\r\n      <Dialog open={showInsufficientCreditsModal} onOpenChange={setShowInsufficientCreditsModal}>\r\n        <DialogContent className=\"sm:max-w-md\">\r\n          <DialogHeader>\r\n            <DialogTitle className=\"flex items-center gap-2\">\r\n              <div className=\"w-8 h-8 rounded-full bg-red-100 flex items-center justify-center\">\r\n                <AlertCircle className=\"w-4 h-4 text-red-600\" />\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold\">Insufficient Credits</h3>\r\n                <p className=\"text-sm text-gray-500 font-normal\">You need credits to create contact lists</p>\r\n              </div>\r\n            </DialogTitle>\r\n          </DialogHeader>\r\n          <div className=\"space-y-4\">\r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-sm text-gray-600\">Current Balance:</span>\r\n                <span className=\"font-semibold\">{currentBalance} credits</span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center mt-2\">\r\n                <span className=\"text-sm text-gray-600\">Required:</span>\r\n                <span className=\"font-semibold text-red-600\">1 credit minimum</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex gap-3\">\r\n              <Button\r\n                variant=\"outline\"\r\n                onClick={() => setShowInsufficientCreditsModal(false)}\r\n                className=\"flex-1\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  setShowInsufficientCreditsModal(false);\r\n                  window.location.href = '/credits';\r\n                }}\r\n                className=\"flex-1 bg-primary hover:bg-primary/90\"\r\n              >\r\n                Buy Credits\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Add Contact List Sheet */}\r\n      <Sheet open={showAddListSheet} onOpenChange={(open) => {\r\n        setShowAddListSheet(open);\r\n        // Refresh lists when sheet is closed (in case a new list was created)\r\n        if (!open) {\r\n          fetchLists();\r\n        }\r\n      }}>\r\n        <SheetContent size=\"half\">\r\n          <AddContactList />\r\n        </SheetContent>\r\n      </Sheet>\r\n\r\n      {/* Delete Contact Confirmation Dialog */}\r\n      <AlertDialog open={!!contactToDelete} onOpenChange={() => setContactToDelete(null)}>\r\n        <AlertDialogContent>\r\n          <AlertDialogHeader>\r\n            <AlertDialogTitle>Remove Contact from List</AlertDialogTitle>\r\n            <AlertDialogDescription>\r\n              Are you sure you want to remove \"{contactToDelete?.fullName || contactToDelete?.email}\" from this list?\r\n              This action cannot be undone.\r\n            </AlertDialogDescription>\r\n          </AlertDialogHeader>\r\n          <AlertDialogFooter>\r\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\r\n            <AlertDialogAction\r\n              onClick={handleDeleteContact}\r\n              className=\"bg-red-600 hover:bg-red-700\"\r\n            >\r\n              Remove Contact\r\n            </AlertDialogAction>\r\n          </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialog>\r\n\r\n      {/* Mobile-Style Dialer Modal */}\r\n      {showDialer && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-white rounded-3xl shadow-2xl w-full max-w-sm mx-auto overflow-hidden\">\r\n            {/* Header */}\r\n            <div className={`px-6 py-4 text-white ${isCallActive ? 'bg-green-600' : 'bg-primary'}`}>\r\n              <div className=\"flex items-center justify-between\">\r\n                <h2 className=\"text-lg font-semibold flex items-center gap-2\">\r\n                  <Phone className=\"h-5 w-5\" />\r\n                  {isCallActive ? 'Active Call' : 'Make Call'}\r\n                </h2>\r\n                {!isCallActive && (\r\n                  <button\r\n                    onClick={() => setShowDialer(false)}\r\n                    className=\"text-white hover:text-gray-200 transition-colors text-2xl leading-none\"\r\n                  >\r\n                    ×\r\n                  </button>\r\n                )}\r\n                {isCallActive && (\r\n                  <div className=\"flex items-center gap-2 text-sm\">\r\n                    <Clock className=\"h-4 w-4\" />\r\n                    {formatCallDuration(callDuration)}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Contact Display */}\r\n            <div className=\"px-6 py-6 bg-white\">\r\n              <div className=\"flex items-center space-x-4\">\r\n                <div className={`w-16 h-16 border-2 border-gray-300 rounded-full flex items-center justify-center shadow-sm ${\r\n                  isCallActive ? 'bg-green-500 animate-pulse' : 'bg-green-500'\r\n                }`}>\r\n                  <User className=\"h-8 w-8 text-white\" />\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                  <div className=\"rounded px-3 mb-2 bg-gray-50 flex items-center justify-between\">\r\n                    <p className=\"text-sm text-gray-600 mb-1\">Name</p>\r\n                    <p className=\"font-medium text-gray-900\">{dialerContact?.fullName}</p>\r\n                  </div>\r\n                  <div className=\"rounded px-3 bg-gray-50 flex items-center justify-between\">\r\n                    <p className=\"text-sm text-gray-600 mb-1\">Number</p>\r\n                    <p className=\"font-medium text-gray-900\">{dialerContact?.phoneNumber}</p>\r\n                  </div>\r\n                  {isCallActive && (\r\n                    <div className=\"mt-2 text-center\">\r\n                      <div className={`inline-flex items-center gap-2 px-3 py-1 rounded-full text-sm font-medium ${\r\n                        isOnHold ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'\r\n                      }`}>\r\n                        {isOnHold ? 'On Hold' : 'Connected'}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Agent & From Number Selection - Only show when call is not active */}\r\n            {!isCallActive && (\r\n              <div className=\"px-6 py-4 space-y-4 bg-white border-t border-gray-200\">\r\n                <div className=\"border border-gray-300 rounded-lg bg-gray-50\">\r\n                  <select\r\n                    value={selectedAgent}\r\n                    onChange={(e) => setSelectedAgent(e.target.value)}\r\n                    className=\"w-full bg-transparent text-gray-900 px-4 py-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent appearance-none\"\r\n                  >\r\n                    <option value=\"\">Agent</option>\r\n                    {agents.map((agent) => (\r\n                      <option key={agent.id} value={agent.assistant_id || agent.id}>\r\n                        {agent.name || agent.id}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"border border-gray-300 rounded-lg bg-gray-50\">\r\n                  <select\r\n                    value={selectedFromNumber}\r\n                    onChange={(e) => setSelectedFromNumber(e.target.value)}\r\n                    className=\"w-full bg-transparent text-gray-900 px-4 py-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent appearance-none\"\r\n                  >\r\n                    <option value=\"\">From Number</option>\r\n                    {phoneNumbers.map((phoneNumber) => (\r\n                      <option key={phoneNumber.id} value={phoneNumber.id}>\r\n                        {phoneNumber.number || phoneNumber.friendlyName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Action Buttons */}\r\n            <div className=\"px-6 py-6 bg-white border-t border-gray-200\">\r\n              {!isCallActive ? (\r\n                /* Call Setup Buttons */\r\n                <div className=\"flex items-center justify-center space-x-4\">\r\n                  {/* Cancel Button */}\r\n                  <button\r\n                    onClick={() => setShowDialer(false)}\r\n                    className=\"flex-1 py-3 px-6 bg-red-700 text-white hover:bg-red-800 rounded-full font-medium transition-colors\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n\r\n                  {/* Call Button */}\r\n                  <button\r\n                    onClick={handleMakeCall}\r\n                    disabled={!selectedAgent || !selectedFromNumber || isLoadingCall}\r\n                    className=\"flex-1 py-3 bg-green-700 hover:bg-green-800 text-white px-6 rounded-full font-medium disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n                  >\r\n                    {isLoadingCall ? (\r\n                      <div className=\"flex items-center justify-center\">\r\n                        <div className=\"w-4 h-4 border-2 border-gray-400 border-t-transparent rounded-full animate-spin mr-2\" />\r\n                        Calling...\r\n                      </div>\r\n                    ) : (\r\n                      \"Call\"\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                /* Call Control Buttons */\r\n                <div className=\"space-y-4\">\r\n                  {/* Primary Controls Row */}\r\n                  <div className=\"flex items-center justify-center space-x-6\">\r\n                    {/* Mute Button */}\r\n                    <button\r\n                      onClick={handleMuteToggle}\r\n                      className={`w-16 h-16 rounded-full flex items-center justify-center transition-all ${\r\n                        isMuted\r\n                          ? 'bg-red-500 hover:bg-red-600 text-white'\r\n                          : 'bg-gray-200 hover:bg-gray-300 text-gray-700'\r\n                      }`}\r\n                    >\r\n                      {isMuted ? <MicOff className=\"h-6 w-6\" /> : <Mic className=\"h-6 w-6\" />}\r\n                    </button>\r\n\r\n                    {/* End Call Button */}\r\n                    <button\r\n                      onClick={handleEndCall}\r\n                      className=\"w-20 h-20 bg-red-500 hover:bg-red-600 text-white rounded-full flex items-center justify-center transition-colors shadow-lg\"\r\n                    >\r\n                      <PhoneOff className=\"h-8 w-8\" />\r\n                    </button>\r\n\r\n                    {/* Hold Button */}\r\n                    <button\r\n                      onClick={handleHoldToggle}\r\n                      className={`w-16 h-16 rounded-full flex items-center justify-center transition-all ${\r\n                        isOnHold\r\n                          ? 'bg-yellow-500 hover:bg-yellow-600 text-white'\r\n                          : 'bg-gray-200 hover:bg-gray-300 text-gray-700'\r\n                      }`}\r\n                    >\r\n                      {isOnHold ? <Play className=\"h-6 w-6\" /> : <Pause className=\"h-6 w-6\" />}\r\n                    </button>\r\n                  </div>\r\n\r\n                  {/* Control Labels */}\r\n                  <div className=\"flex items-center justify-center space-x-6 text-xs text-gray-500\">\r\n                    <span className=\"w-16 text-center\">{isMuted ? 'Unmute' : 'Mute'}</span>\r\n                    <span className=\"w-20 text-center\">End Call</span>\r\n                    <span className=\"w-16 text-center\">{isOnHold ? 'Resume' : 'Hold'}</span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Call Recording Player */}\r\n      <CallRecordingPlayer\r\n        call={selectedCallForRecording}\r\n        isOpen={showRecordingPlayer}\r\n        onClose={() => {\r\n          setShowRecordingPlayer(false);\r\n          setSelectedCallForRecording(null);\r\n        }}\r\n      />\r\n\r\n      {/* Chat Sidebar */}\r\n      {chatContact && (\r\n        <ChatSidebar\r\n          isOpen={showChatSidebar}\r\n          contact={{\r\n            id: chatContact.id.toString(),\r\n            email: chatContact.email,\r\n            contact_number: chatContact.phoneNumber,\r\n            list_name: selectedList?.list_name\r\n          }}\r\n          onClose={() => {\r\n            setShowChatSidebar(false);\r\n            setChatContact(null);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* Email Modal */}\r\n      <Dialog open={showEmailModal} onOpenChange={setShowEmailModal}>\r\n        <DialogContent className=\"max-w-7xl max-h-[80vh] flex flex-col\">\r\n          <DialogHeader>\r\n            <DialogTitle className=\"flex items-center gap-2\">\r\n              <Mail className=\"h-5 w-5 text-orange-600\" />\r\n              Compose Email\r\n            </DialogTitle>\r\n            <DialogDescription>\r\n              Send an email to {emailContact?.fullName || emailContact?.email}\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n\r\n          <div className=\"flex-1 overflow-y-auto space-y-4\">\r\n            {/* From Field with Gmail Connection */}\r\n            <div>\r\n              <Label htmlFor=\"from\" className=\"text-sm font-medium text-gray-700 mb-1 block\">\r\n                From\r\n              </Label>\r\n              <div className=\"space-y-2\">\r\n                <Input\r\n                  id=\"from\"\r\n                  value={connectedGmailEmail || \"\"}\r\n                  disabled\r\n                  className=\"bg-gray-50\"\r\n                  placeholder=\"Connect Gmail to send emails\"\r\n                />\r\n\r\n                {/* Gmail Connection Links */}\r\n                <div className=\"flex items-center gap-3\">\r\n                  {gmailConnected ? (\r\n                    <>\r\n                      <div className=\"flex items-center gap-2 text-sm text-green-600\">\r\n                        <div className=\"h-2 w-2 bg-green-500 rounded-full\"></div>\r\n                        Gmail Connected\r\n                      </div>\r\n                      <Button\r\n                        variant=\"outline\"\r\n                        size=\"sm\"\r\n                        onClick={handleUnlinkGmailForContacts}\r\n                        disabled={isUnlinkingGmail}\r\n                        className=\"text-red-600 border-red-600 hover:bg-red-50\"\r\n                      >\r\n                        {isUnlinkingGmail ? (\r\n                          <>\r\n                            <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                            Unlinking...\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <X className=\"h-4 w-4 mr-2\" />\r\n                            Unlink Gmail\r\n                          </>\r\n                        )}\r\n                      </Button>\r\n                    </>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"outline\"\r\n                      size=\"sm\"\r\n                      onClick={handleConnectGmailForContacts}\r\n                      disabled={isConnectingGmail}\r\n                      className=\"text-blue-600 border-blue-600 hover:bg-blue-50\"\r\n                    >\r\n                      {isConnectingGmail ? (\r\n                        <>\r\n                          <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                          Connecting...\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <Mail className=\"h-4 w-4 mr-2\" />\r\n                          Link Gmail\r\n                        </>\r\n                      )}\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* To Field */}\r\n            <div>\r\n              <Label htmlFor=\"to\" className=\"text-sm font-medium text-gray-700 mb-1 block\">\r\n                To *\r\n              </Label>\r\n              <Input\r\n                id=\"to\"\r\n                value={emailData.to}\r\n                onChange={(e) => setEmailData(prev => ({ ...prev, to: e.target.value }))}\r\n                placeholder=\"Enter recipient email\"\r\n              />\r\n            </div>\r\n\r\n            {/* CC Field */}\r\n            <div>\r\n              <Label htmlFor=\"cc\" className=\"text-sm font-medium text-gray-700 mb-1 block\">\r\n                CC\r\n              </Label>\r\n              <Input\r\n                id=\"cc\"\r\n                value={emailData.cc}\r\n                onChange={(e) => setEmailData(prev => ({ ...prev, cc: e.target.value }))}\r\n                placeholder=\"Enter CC emails (comma separated)\"\r\n              />\r\n            </div>\r\n\r\n            {/* BCC Field */}\r\n            <div>\r\n              <Label htmlFor=\"bcc\" className=\"text-sm font-medium text-gray-700 mb-1 block\">\r\n                BCC\r\n              </Label>\r\n              <Input\r\n                id=\"bcc\"\r\n                value={emailData.bcc}\r\n                onChange={(e) => setEmailData(prev => ({ ...prev, bcc: e.target.value }))}\r\n                placeholder=\"Enter BCC emails (comma separated)\"\r\n              />\r\n            </div>\r\n\r\n            {/* Subject Field */}\r\n            <div>\r\n              <Label htmlFor=\"subject\" className=\"text-sm font-medium text-gray-700 mb-1 block\">\r\n                Subject *\r\n              </Label>\r\n              <Input\r\n                id=\"subject\"\r\n                value={emailData.subject}\r\n                onChange={(e) => setEmailData(prev => ({ ...prev, subject: e.target.value }))}\r\n                placeholder=\"Enter email subject\"\r\n              />\r\n            </div>\r\n\r\n            {/* Body Field */}\r\n            <div>\r\n              <Label htmlFor=\"body\" className=\"text-sm font-medium text-gray-700 mb-1 block\">\r\n                Message *\r\n              </Label>\r\n              <textarea\r\n                id=\"body\"\r\n                value={emailData.body}\r\n                onChange={(e) => setEmailData(prev => ({ ...prev, body: e.target.value }))}\r\n                placeholder=\"Enter your message...\"\r\n                className=\"w-full min-h-[200px] p-3 border border-gray-300 rounded-md resize-y focus:ring-2 focus:ring-orange-500 focus:border-orange-500\"\r\n              />\r\n            </div>\r\n\r\n            {/* Attachments Field (Future Enhancement) */}\r\n            <div>\r\n              <Label className=\"text-sm font-medium text-gray-700 mb-1 block\">\r\n                Attachments\r\n              </Label>\r\n              <div className=\"flex items-center gap-2 p-3 border border-gray-300 rounded-md bg-gray-50\">\r\n                <Paperclip className=\"h-4 w-4 text-gray-400\" />\r\n                <span className=\"text-sm text-gray-500\">Attachment support coming soon</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <DialogFooter className=\"flex justify-between items-center pt-4 border-t\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <Button\r\n                variant=\"outline\"\r\n                onClick={() => setShowEmailModal(false)}\r\n                disabled={isSendingEmail}\r\n              >\r\n                Cancel\r\n              </Button>\r\n\r\n              {/* Email Service Status */}\r\n              <div className=\"flex items-center gap-2\">\r\n                {checkingEmailServices ? (\r\n                  <div className=\"flex items-center gap-2 text-sm text-gray-500\">\r\n                    <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n                    Checking email services...\r\n                  </div>\r\n                ) : gmailConnected ? (\r\n                  <div className=\"flex items-center gap-2 text-sm text-green-600\">\r\n                    <div className=\"h-2 w-2 bg-green-500 rounded-full\"></div>\r\n                    Ready to send via Gmail\r\n                  </div>\r\n                ) : smtpAvailable ? (\r\n                  <div className=\"flex items-center gap-2 text-sm text-blue-600\">\r\n                    <div className=\"h-2 w-2 bg-blue-500 rounded-full\"></div>\r\n                    Ready to send via SMTP\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"flex items-center gap-2 text-sm text-gray-500\">\r\n                    <AlertCircle className=\"h-4 w-4\" />\r\n                    No email service available\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <Button\r\n              onClick={handleSendEmail}\r\n              disabled={isSendingEmail || !emailData.to || !emailData.subject || !emailData.body || (!gmailConnected && !smtpAvailable)}\r\n              className=\"bg-orange-600 hover:bg-orange-700\"\r\n            >\r\n              {isSendingEmail ? (\r\n                <>\r\n                  <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                  Sending...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Send className=\"h-4 w-4 mr-2\" />\r\n                  Send Email\r\n                </>\r\n              )}\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n"],"names":["getContactGmailStatus","res","axiosInstance","error","connectContactGmail","response","newTab","toast","resolve","reject","resolved","messageHandler","event","checkClosed","message","_b","_a","disconnectContactGmail","sendContactGmailEmail","emailData","sendEmail","data","getEmailServiceStatus","validationSchema","Yup.object","Yup.string","Yup.array","AddContactList","useRef","showInsufficientCreditsModal","setShowInsufficientCreditsModal","useState","currentBalance","setCurrentBalance","user","useAuth","isSuperAdmin","usePermissions","register","control","handleSubmit","errors","isSubmitting","reset","watch","setValue","useForm","yupResolver","fields","append","remove","useFieldArray","getUserId","token","secureLocalStorage","decoded","jwtDecode","userId","onSubmit","balance","listResponse","createList","formattedContacts","contact","payload","createContactService","jsxs","Fragment","jsx","SheetTitle","SheetDescription","ListFilter","Label","Input","Textarea","Select","value","SelectTrigger","SelectValue","SelectContent","SelectItem","Users","field","index","Trash2","_c","Mail","_e","_d","_f","Phone","_h","_g","_i","Button","PlusIcon","SheetClose","Dialog","DialogContent","DialogHeader","DialogTitle","Lists","useSearchParams","useNavigate","lists","setLists","selectedList","setSelectedList","contacts","setContacts","selectedContact","setSelectedContact","loading","setLoading","contactsLoading","setContactsLoading","listSearch","setListSearch","contactSearch","setContactSearch","contactsView","setContactsView","groupsView","setGroupsView","currentPage","setCurrentPage","totalPages","setTotalPages","showAddListSheet","setShowAddListSheet","isEditingContact","setIsEditingContact","editingContactData","setEditingContactData","isAddingContact","setIsAddingContact","addingContactData","setAddingContactData","showDialer","setShowDialer","dialerContact","setDialerContact","agents","setAgents","phoneNumbers","setPhoneNumbers","selectedAgent","setSelectedAgent","selectedFromNumber","setSelectedFromNumber","isLoadingCall","setIsLoadingCall","contactToDelete","setContactToDelete","isCallActive","setIsCallActive","isMuted","setIsMuted","isOnHold","setIsOnHold","currentCallId","setCurrentCallId","callDuration","setCallDuration","callTimer","setCallTimer","callControlUrl","setCallControlUrl","callData","setCallData","callHistory","setCallHistory","callHistoryLoading","setCallHistoryLoading","callHistoryPage","setCallHistoryPage","callHistoryTotal","setCallHistoryTotal","selectedCallForRecording","setSelectedCallForRecording","showRecordingPlayer","setShowRecordingPlayer","showChatSidebar","setShowChatSidebar","chatContact","setChatContact","showEmailModal","setShowEmailModal","emailContact","setEmailContact","setEmailData","isSendingEmail","setIsSendingEmail","gmailConnected","setGmailConnected","checkingGmailStatus","setCheckingGmailStatus","smtpAvailable","setSmtpAvailable","checkingEmailServices","setCheckingEmailServices","connectedGmailEmail","setConnectedGmailEmail","isConnectingGmail","setIsConnectingGmail","isUnlinkingGmail","setIsUnlinkingGmail","checkEmailServices","contactGmailStatus","smtpStatus","handleConnectGmailForContacts","handleUnlinkGmailForContacts","handleAddListClick","fetchLists","getAllContactLists","listsData","useEffect","handleFocus","fetchContacts","listId","getContactsForList","contactsData","isAxiosError","err","hasMessage","_j","_n","_k","errorMessage","_m","_l","fetchCallHistory","handleListSelect","list","handleContactSelect","getContactCallHistory","handlePlayRecording","call","hasRecording","handleEditContact","handleSaveContactEdit","phoneRegex","updateContact","handleCancelEdit","handleSaveNewContact","addContactToList","prevLists","handleCancelAddContact","loadDialerData","agentsResponse","phoneNumbersResponse","fetchAllAgentsComplete","getAllPhoneNumbers","handlePhoneClick","handleChatClick","handleEmailClick","handleSendEmail","services","sendSMTPEmail","formatPhoneToE164","phoneNumber","cleaned","handleMakeCall","a","selectedAgentData","agent","assistantUUID","formattedPhoneNumber","callResponse","createOutboundCall","callId","controlUrl","timer","prev","handleMuteToggle","unmuteCall","muteCall","handleHoldToggle","handleEndCall","endCallViaControl","formatCallDuration","seconds","mins","secs","handleAddContactToList","handleDeleteContactConfirm","handleDeleteContact","removeContactFromList","getInitials","email","formatPhoneNumber","phone","filteredLists","filteredContacts","Page","Badge","Plus","Search","e","Avatar","AvatarFallback","DropdownMenu","DropdownMenuTrigger","MoreHorizontal","DropdownMenuContent","DropdownMenuItem","UserPlus","DropdownMenuSeparator","Edit","Trash","MessageSquare","Tabs","TabsList","TabsTrigger","TabsContent","FileText","Loader2","status","formatCallStatus","hasRec","formatCallDate","History","formatDuration","formatCallCost","AlertCircle","Sheet","open","SheetContent","AlertDialog","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction","Clock","User","MicOff","Mic","PhoneOff","Play","Pause","CallRecordingPlayer","ChatSidebar","DialogDescription","X","Paperclip","DialogFooter","Send"],"mappings":"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"}