{"version":3,"file":"CreditBalance-BSyOEs15.js","sources":["../../src/components/Credits/CreditUsageModal.jsx","../../src/components/Credits/CreditBalance.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { X, Phone, MessageSquare, Mail, Upload, Zap, Mic, Volume2, Bot, Link, Shield, UserCog, Book, Waypoints, CassetteTape, PhoneCall, Rocket, Settings } from 'lucide-react';\n\nconst CreditUsageModal = ({ isOpen, onClose }) => {\n  // Credit usage data based on your AI Cruitment Portal's actual services\n  const creditUsageData = [\n\n    {\n      category: 'AI Cruitment Portal Services',\n      functions: [\n        {\n          icon: <UserCog className=\"h-4 w-4 text-blue-500\" />,\n          name: 'AI CRUITMENT Assistant Call',\n          incoming: '1 Credit / Call + 0.5 Credits / Minute',\n          outgoing: '1 Credit / Call + 0.5 Credits / Minute'\n        },\n        {\n          icon: <Phone className=\"h-4 w-4 text-blue-500\" />,\n          name: 'Outbound Call',\n          incoming: '-',\n          outgoing: '1 Credit / Call + 0.5 Credits / Minute'\n        },\n        {\n          icon: <PhoneCall className=\"h-4 w-4 text-green-500\" />,\n          name: 'Buy Phone Number',\n          incoming: '-',\n          outgoing: '5 Credits / Phone Number'\n        },\n        {\n          icon: <Rocket className=\"h-4 w-4 text-purple-500\" />,\n          name: 'Campaign Creation',\n          incoming: '-',\n          outgoing: '2 Credits / Campaign'\n        },\n        {\n          icon: <Rocket className=\"h-4 w-4 text-purple-500\" />,\n          name: 'Campaign Launch',\n          incoming: '-',\n          outgoing: '3 Credits / Campaign Launch'\n        },\n        {\n          icon: <Settings className=\"h-4 w-4 text-orange-500\" />,\n          name: 'Assistant Creation',\n          incoming: '-',\n          outgoing: '2 Credits / Assistant'\n        }\n      ]\n    }\n  ];\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-7xl max-h-[90vh] overflow-y-auto\" aria-describedby=\"credit-usage-description\">\n        <DialogHeader className=\"flex flex-row items-center justify-between space-y-0 pb-4\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-8 h-8 bg-gradient-to-r from-orange-400 to-red-500 rounded-full flex items-center justify-center\">\n                <Bot className=\"h-4 w-4 text-white\" />\n              </div>\n              <DialogTitle className=\"text-xl font-semibold\">Credits Usage</DialogTitle>\n            </div>\n            <DialogDescription id=\"credit-usage-description\">\n              View the credit costs for each function in the AI Cruitment Portal. Each function requires a specific amount of credits to complete.\n            </DialogDescription>\n          </div>\n          {/* <button\n            onClick={onClose}\n            className=\"rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none\"\n          >\n            <X className=\"h-4 w-4\" />\n            <span className=\"sr-only\">Close</span>\n          </button> */}\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Header Description */}\n          <div className=\"text-center\">\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-2\">Credit usage for AI Cruitment Portal</h2>\n            <p className=\"text-gray-600\">Each function requires a specific amount of credits to complete.</p>\n          </div>\n\n          {/* Functions Table */}\n          <div className=\"space-y-6\">\n            {creditUsageData.map((category, categoryIndex) => (\n              <div key={categoryIndex} className=\"space-y-4\">\n                <h3 className=\"text-lg font-semibold text-gray-800 border-b pb-2\">{category.category}</h3>\n\n                {/* Table Header */}\n                <div className=\"grid grid-cols-3 gap-4 p-3 bg-gray-50 rounded-lg font-semibold text-gray-700\">\n                  <div>Functions</div>\n                  <div className=\"text-center\">Incoming</div>\n                  <div className=\"text-center\">Outgoing</div>\n                </div>\n\n                {/* Table Rows */}\n                <div className=\"space-y-2\">\n                  {category.functions.map((func, funcIndex) => (\n                    <div key={funcIndex} className=\"grid grid-cols-3 gap-4 p-3 border rounded-lg hover:bg-gray-50 transition-colors\">\n                      <div className=\"flex items-center space-x-3\">\n                        {func.icon}\n                        <span className=\"font-medium text-gray-900\">{func.name}</span>\n                      </div>\n                      <div className=\"text-center font-medium text-gray-900\">\n                        {func.incoming || '-'}\n                      </div>\n                      <div className=\"text-center font-medium text-gray-900\">\n                        {func.outgoing || '-'}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Footer Note */}\n          {/* <div className=\"mt-6 p-4 bg-orange-50 border border-orange-200 rounded-lg\">\n            <p className=\"text-sm text-orange-800\">\n              <strong>Note:</strong> This is for the AI Cruitment Portal. Credits for third-party integrations may vary. VAPI services include call initiation fees plus per-minute charges.\n            </p>\n          </div> */}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default CreditUsageModal;\n","import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Coins, Plus, AlertTriangle, Infinity, RefreshCw, BarChart3 } from 'lucide-react';\nimport { toast } from 'sonner';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '@/api/axios/axiosInstance'; // Fixed import path\nimport PurchaseCreditsModal from './PurchaseCreditsModal';\nimport CreditUsageModal from './CreditUsageModal';\nimport secureLocalStorage from 'react-secure-storage';\n\nconst CreditBalance = ({ showPurchaseButton = true, compact = false, showUsageButton = false }) => {\n  const navigate = useNavigate();\n  const [balance, setBalance] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showPurchaseModal, setShowPurchaseModal] = useState(false);\n  const [showUsageModal, setShowUsageModal] = useState(false);\n\n  const fetchBalance = async () => {\n    try {\n      setLoading(true);\n      console.log('üîç CreditBalance: Fetching balance...');\n\n      // Add cache-busting parameter to force fresh data\n      const response = await axiosInstance.get(`/api/credits/balance?t=${Date.now()}`);\n      console.log('üîç CreditBalance: API response:', response.data);\n\n      const actualBalance = response.data.data;\n      console.log('üîç CreditBalance: Raw API response:', actualBalance);\n\n      setBalance(actualBalance);\n      setError(null);\n\n      console.log('‚úÖ CreditBalance: Balance updated:', actualBalance);\n      console.log('üéØ CreditBalance: Should show:', actualBalance.available_credits, 'credits');\n    } catch (err) {\n      console.error('‚ùå CreditBalance: Error fetching credit balance:', err);\n      console.error('‚ùå CreditBalance: Error response:', err.response?.data);\n      setError(err.response?.data?.message || 'Failed to fetch credit balance');\n      toast.error('Failed to fetch credit balance');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    console.log('üîç CreditBalance: Component mounted, fetching balance...');\n    fetchBalance();\n\n    // Listen for credit balance updates\n    const handleCreditUpdate = () => {\n      console.log('üîç CreditBalance: Credit update event received, refreshing...');\n      fetchBalance();\n    };\n\n    window.addEventListener('creditBalanceUpdate', handleCreditUpdate);\n\n    // Also listen for storage changes (in case token changes)\n    const handleStorageChange = () => {\n      console.log('üîç CreditBalance: Storage change detected, refreshing...');\n      setTimeout(fetchBalance, 100); // Small delay to ensure token is updated\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n\n    return () => {\n      window.removeEventListener('creditBalanceUpdate', handleCreditUpdate);\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []);\n\n  const handlePurchaseCredits = () => {\n    console.log('üîç Buy button clicked - opening purchase modal');\n    setShowPurchaseModal(true);\n  };\n\n  const handlePurchaseSuccess = (paymentIntent) => {\n    toast.success('üéâ Purchase successful! Credits added to your account.');\n    setShowPurchaseModal(false);\n    fetchBalance(); // Refresh balance\n\n    // Trigger global credit balance update\n    window.dispatchEvent(new CustomEvent('creditBalanceUpdate'));\n  };\n\n\n\n  const formatCredits = (credits) => {\n    console.log('üîç formatCredits called with:', credits, 'type:', typeof credits);\n\n    if (credits === 'unlimited') return 'Unlimited';\n\n    // Convert string to number if needed\n    const numCredits = typeof credits === 'string' ? parseFloat(credits) : credits;\n    console.log('üîç numCredits after conversion:', numCredits, 'type:', typeof numCredits);\n\n    if (typeof numCredits === 'number' && !isNaN(numCredits)) {\n      const formatted = numCredits.toLocaleString('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 2\n      });\n      console.log('üîç formatted result:', formatted);\n      return formatted;\n    }\n    console.log('üîç returning default \"0\"');\n    return '0';\n  };\n\n  const getBalanceColor = (availableCredits) => {\n    if (availableCredits === 'unlimited') return 'text-green-600';\n\n    const numCredits = typeof availableCredits === 'string' ? parseFloat(availableCredits) : availableCredits;\n    if (numCredits <= 10) return 'text-red-600';\n    if (numCredits <= 50) return 'text-yellow-600';\n    return 'text-green-600';\n  };\n\n  const getBalanceBadgeVariant = (availableCredits) => {\n    if (availableCredits === 'unlimited') return 'default';\n\n    const numCredits = typeof availableCredits === 'string' ? parseFloat(availableCredits) : availableCredits;\n    if (numCredits <= 10) return 'destructive';\n    if (numCredits <= 50) return 'secondary';\n    return 'default';\n  };\n\n  if (loading) {\n    return (\n      <Card className={compact ? 'w-full' : 'w-full max-w-md'}>\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-center space-x-2\">\n            <Coins className=\"h-5 w-5 text-gray-400 animate-pulse\" />\n            <div className=\"h-4 bg-gray-200 rounded w-20 animate-pulse\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card className={compact ? 'w-full' : 'w-full max-w-md'}>\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-center space-x-2 text-red-600\">\n            <AlertTriangle className=\"h-5 w-5\" />\n            <span className=\"text-sm\">Error loading balance</span>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const compactView = (\n    <div className=\"flex items-center space-x-2\">\n      <Coins className=\"h-4 w-4 text-gray-600\" />\n      <span className={`font-medium text-sm ${getBalanceColor(balance?.available_credits)}`}>\n        {balance?.isSuperAdmin ? (\n          <div className=\"flex items-center space-x-1\">\n            <Infinity className=\"h-4 w-4\" />\n            <span>Unlimited</span>\n          </div>\n        ) : (\n          <span title={`${formatCredits(balance?.available_credits)} credits available`}>\n            {formatCredits(balance?.available_credits)} credits\n          </span>\n        )}\n      </span>\n\n      {/* Show low credit warning */}\n      {!balance?.isSuperAdmin && parseFloat(balance?.available_credits) <= 10 && parseFloat(balance?.available_credits) > 0 && (\n        <AlertTriangle className=\"h-4 w-4 text-yellow-500\" title=\"Low credit balance\" />\n      )}\n\n      {/* Show zero credit warning */}\n      {!balance?.isSuperAdmin && parseFloat(balance?.available_credits) <= 0 && (\n        <AlertTriangle className=\"h-4 w-4 text-red-500\" title=\"No credits remaining\" />\n      )}\n\n      {showUsageButton && (\n        <Button\n          size=\"sm\"\n          variant=\"outline\"\n          onClick={() => setShowUsageModal(true)}\n          className=\"h-7 px-3 text-xs\"\n        >\n          <BarChart3 className=\"h-3 w-3 mr-1\" />\n          Credits Usage\n        </Button>\n      )}\n\n      {showPurchaseButton && !balance?.isSuperAdmin && (\n        <Button\n          size=\"sm\"\n          variant={parseFloat(balance?.available_credits) <= 10 ? \"default\" : \"outline\"}\n          onClick={handlePurchaseCredits}\n          className=\"h-7 px-3 text-xs\"\n        >\n          <Plus className=\"h-3 w-3 mr-1\" />\n          Buy Credits\n        </Button>\n      )}\n    </div>\n  );\n\n  const fullView = (\n    <Card className=\"w-full max-w-md\">\n      <CardHeader className=\"pb-3\">\n        <CardTitle className=\"flex items-center space-x-2 text-lg\">\n          <Coins className=\"h-5 w-5\" />\n          <span>Credit Balance</span>\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {balance?.isSuperAdmin ? (\n          <div className=\"text-center\">\n            <div className=\"flex items-center justify-center space-x-2 mb-2\">\n              <Infinity className=\"h-8 w-8 text-green-600\" />\n              <span className=\"text-2xl font-bold text-green-600\">Unlimited</span>\n            </div>\n            <Badge variant=\"default\" className=\"bg-green-100 text-green-800\">\n              Super Admin\n            </Badge>\n          </div>\n        ) : (\n          <>\n            <div className=\"text-center\">\n              <div className={`text-3xl font-bold ${getBalanceColor(balance?.available_credits)}`}>\n                {formatCredits(balance?.available_credits)}\n              </div>\n              <p className=\"text-sm text-gray-600 mt-1\">Available Credits</p>\n\n              {parseFloat(balance?.available_credits) <= 10 && (\n                <Badge variant={getBalanceBadgeVariant(balance?.available_credits)} className=\"mt-2\">\n                  <AlertTriangle className=\"h-3 w-3 mr-1\" />\n                  Low Balance\n                </Badge>\n              )}\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\n              <div className=\"text-center\">\n                <div className=\"font-medium text-gray-900\">\n                  {formatCredits(balance?.total_credits)}\n                </div>\n                <div className=\"text-gray-600\">Total</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"font-medium text-gray-900\">\n                  {formatCredits(balance?.used_credits)}\n                </div>\n                <div className=\"text-gray-600\">Used</div>\n              </div>\n            </div>\n\n            {balance?.last_purchase_at && (\n              <div className=\"text-xs text-gray-500 text-center\">\n                Last purchase: {new Date(balance.last_purchase_at).toLocaleDateString()}\n              </div>\n            )}\n\n            {showPurchaseButton && (\n              <Button\n                onClick={handlePurchaseCredits}\n                className=\"w-full\"\n                variant={parseFloat(balance?.available_credits) <= 10 ? \"default\" : \"outline\"}\n              >\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Purchase Credits\n              </Button>\n            )}\n          </>\n        )}\n\n        <div className=\"flex justify-between text-xs text-gray-500\">\n          <button\n            onClick={fetchBalance}\n            className=\"hover:text-gray-700 transition-colors\"\n          >\n            Refresh\n          </button>\n          {/* <a\n            href=\"/credits/history\"\n            className=\"hover:text-gray-700 transition-colors\"\n          >\n            View History\n          </a> */}\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  return (\n    <>\n      {compact ? compactView : fullView}\n\n      {/* Purchase Credits Modal */}\n      <PurchaseCreditsModal\n        isOpen={showPurchaseModal}\n        onClose={() => setShowPurchaseModal(false)}\n        onSuccess={handlePurchaseSuccess}\n      />\n\n      {/* Credit Usage Modal */}\n      <CreditUsageModal\n        isOpen={showUsageModal}\n        onClose={() => setShowUsageModal(false)}\n      />\n    </>\n  );\n};\n\nexport default CreditBalance;\n"],"names":["CreditUsageModal","isOpen","onClose","creditUsageData","jsx","UserCog","Phone","PhoneCall","Rocket","Settings","Dialog","jsxs","DialogContent","DialogHeader","Bot","DialogTitle","DialogDescription","category","categoryIndex","func","funcIndex","CreditBalance","showPurchaseButton","compact","showUsageButton","useNavigate","balance","setBalance","useState","loading","setLoading","error","setError","showPurchaseModal","setShowPurchaseModal","showUsageModal","setShowUsageModal","fetchBalance","response","axiosInstance","actualBalance","err","_a","_c","_b","toast","useEffect","handleCreditUpdate","handleStorageChange","handlePurchaseCredits","handlePurchaseSuccess","paymentIntent","formatCredits","credits","numCredits","formatted","getBalanceColor","availableCredits","getBalanceBadgeVariant","Card","CardContent","Coins","AlertTriangle","compactView","Infinity","Button","BarChart3","Plus","fullView","CardHeader","CardTitle","Badge","Fragment","PurchaseCreditsModal"],"mappings":"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"}