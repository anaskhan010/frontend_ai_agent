{"version":3,"file":"Permissions-Bj3yHVpI.js","sources":["../../src/components/ProtectedRoute.tsx","../../src/components/RoleBasedButton.tsx","../../src/pages/Permissions/Permissions.tsx"],"sourcesContent":["import React from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { useAuth } from \"@/context/AuthContext\";\nimport { usePermissions } from \"@/context/PermissionContext\";\nimport Loading from \"@/Loading\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { ShieldX } from \"lucide-react\";\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  permission?: string;\n  permissions?: string[];\n  requireAll?: boolean;\n  role?: string;\n  roles?: string[];\n  requireSuperAdmin?: boolean;\n  redirectTo?: string;\n  showError?: boolean;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({\n  children,\n  permission,\n  permissions,\n  requireAll = false,\n  role,\n  roles,\n  requireSuperAdmin = false,\n  redirectTo = \"/login\",\n  showError = true,\n}) => {\n  const { isLoggedIn, loading: authLoading } = useAuth();\n  const {\n    hasPermission,\n    hasAnyPermission,\n    hasAllPermissions,\n    role: userRole,\n    isSuperAdmin,\n    loading: permissionLoading,\n  } = usePermissions();\n  const location = useLocation();\n\n  // Show loading while authentication or permissions are being determined\n  if (authLoading || permissionLoading) {\n    return <Loading />;\n  }\n\n  // Redirect to login if not authenticated\n  if (!isLoggedIn) {\n    return <Navigate to={redirectTo} state={{ from: location }} replace />;\n  }\n\n  // Super admin check\n  if (requireSuperAdmin && !isSuperAdmin) {\n    if (showError) {\n      return (\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <Alert variant=\"destructive\" className=\"max-w-md\">\n            <ShieldX className=\"h-4 w-4\" />\n            <AlertDescription>\n              Super admin privileges required to access this page.\n            </AlertDescription>\n          </Alert>\n        </div>\n      );\n    }\n    return <Navigate to=\"/dashboard\" replace />;\n  }\n\n  // Role-based check\n  if (role && (!userRole || userRole.name !== role)) {\n    if (showError) {\n      return (\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <Alert variant=\"destructive\" className=\"max-w-md\">\n            <ShieldX className=\"h-4 w-4\" />\n            <AlertDescription>\n              {`${role} role required to access this page.`}\n            </AlertDescription>\n          </Alert>\n        </div>\n      );\n    }\n    return <Navigate to=\"/dashboard\" replace />;\n  }\n\n  if (roles && roles.length > 0 && (!userRole || !roles.includes(userRole.name))) {\n    if (showError) {\n      return (\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <Alert variant=\"destructive\" className=\"max-w-md\">\n            <ShieldX className=\"h-4 w-4\" />\n            <AlertDescription>\n              {`One of the following roles required: ${roles.join(\", \")}`}\n            </AlertDescription>\n          </Alert>\n        </div>\n      );\n    }\n    return <Navigate to=\"/dashboard\" replace />;\n  }\n\n  // Permission-based check\n  if (permission && !hasPermission(permission)) {\n    if (showError) {\n      return (\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <Alert variant=\"destructive\" className=\"max-w-md\">\n            <ShieldX className=\"h-4 w-4\" />\n            <AlertDescription>\n              You don't have permission to access this page.\n            </AlertDescription>\n          </Alert>\n        </div>\n      );\n    }\n    return <Navigate to=\"/dashboard\" replace />;\n  }\n\n  if (permissions && permissions.length > 0) {\n    const hasRequiredPermissions = requireAll\n      ? hasAllPermissions(permissions)\n      : hasAnyPermission(permissions);\n\n    if (!hasRequiredPermissions) {\n      if (showError) {\n        return (\n          <div className=\"flex items-center justify-center min-h-screen\">\n            <Alert variant=\"destructive\" className=\"max-w-md\">\n              <ShieldX className=\"h-4 w-4\" />\n              <AlertDescription>\n                You don't have the required permissions to access this page.\n              </AlertDescription>\n            </Alert>\n          </div>\n        );\n      }\n      return <Navigate to=\"/dashboard\" replace />;\n    }\n  }\n\n  return <>{children}</>;\n};\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport { usePermissions } from \"@/context/PermissionContext\";\nimport { Button } from \"@/components/ui/button\";\nimport { ButtonProps } from \"@/components/ui/button\";\n\ninterface RoleBasedButtonProps extends ButtonProps {\n  permission?: string;\n  permissions?: string[];\n  requireAll?: boolean;\n  role?: string;\n  roles?: string[];\n  requireSuperAdmin?: boolean;\n  fallback?: React.ReactNode;\n  hideWhenNoAccess?: boolean;\n}\n\nconst RoleBasedButton: React.FC<RoleBasedButtonProps> = ({\n  children,\n  permission,\n  permissions,\n  requireAll = false,\n  role,\n  roles,\n  requireSuperAdmin = false,\n  fallback,\n  hideWhenNoAccess = false,\n  disabled,\n  ...buttonProps\n}) => {\n  const {\n    hasPermission,\n    hasAnyPermission,\n    hasAllPermissions,\n    role: userRole,\n    isSuperAdmin,\n    loading,\n  } = usePermissions();\n\n  if (loading) {\n    return (\n      <Button disabled {...buttonProps}>\n        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-gray-300\"></div>\n      </Button>\n    );\n  }\n\n  // Check access permissions\n  let hasAccess = true;\n\n  // Super admin check\n  if (requireSuperAdmin && !isSuperAdmin) {\n    hasAccess = false;\n  }\n\n  // Role-based check\n  if (hasAccess && role && (!userRole || userRole.name !== role)) {\n    hasAccess = false;\n  }\n\n  if (hasAccess && roles && roles.length > 0 && (!userRole || !roles.includes(userRole.name))) {\n    hasAccess = false;\n  }\n\n  // Permission-based check\n  if (hasAccess && permission && !hasPermission(permission)) {\n    hasAccess = false;\n  }\n\n  if (hasAccess && permissions && permissions.length > 0) {\n    const hasRequiredPermissions = requireAll\n      ? hasAllPermissions(permissions)\n      : hasAnyPermission(permissions);\n\n    if (!hasRequiredPermissions) {\n      hasAccess = false;\n    }\n  }\n\n  // If no access and should hide, return null\n  if (!hasAccess && hideWhenNoAccess) {\n    return null;\n  }\n\n  // If no access and fallback provided, return fallback\n  if (!hasAccess && fallback) {\n    return <>{fallback}</>;\n  }\n\n  // Return button with appropriate disabled state\n  return (\n    <Button disabled={disabled || !hasAccess} {...buttonProps}>\n      {children}\n    </Button>\n  );\n};\n\nexport default RoleBasedButton;\n","import React, { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport Page from \"@/components/Page\";\nimport Header from \"@/components/Header\";\n// Removed Loading import - using skeleton loading instead\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Key, Shield, Users, Settings, Plus, Edit, Trash2 } from \"lucide-react\";\nimport ProtectedRoute from \"@/components/ProtectedRoute\";\nimport RoleBasedButton from \"@/components/RoleBasedButton\";\nimport axiosInstance from \"@/api/axios/axiosInstance\";\nimport { toast } from \"sonner\";\n\ninterface Permission {\n  id: number;\n  name: string;\n  display_name: string;\n  description: string;\n  category: string;\n  resource: string;\n  action: string;\n  is_system_permission: boolean;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nconst fetchPermissions = async (): Promise<Permission[]> => {\n  const response = await axiosInstance.get(\"/api/permissions\");\n  return response.data.data;\n};\n\nconst Permissions: React.FC = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [activeTab, setActiveTab] = useState(\"all\");\n\n  const { data: permissions, isLoading, error, refetch } = useQuery({\n    queryKey: [\"permissions\"],\n    queryFn: fetchPermissions,\n  });\n\n  const handleSearchChange = (value: string) => {\n    setSearchQuery(value);\n  };\n\n  const handleDeletePermission = async (permissionId: number, permissionName: string) => {\n    if (window.confirm(`Are you sure you want to delete the permission \"${permissionName}\"?`)) {\n      try {\n        await axiosInstance.delete(`/api/permissions/${permissionId}`);\n        toast.success(\"Permission deleted successfully\");\n        refetch();\n      } catch (error: any) {\n        toast.error(error.response?.data?.message || \"Failed to delete permission\");\n      }\n    }\n  };\n\n  // Removed loading screen for better UX\n\n  if (error) {\n    console.error(\"Error fetching permissions\", error);\n    return <div>Error loading permissions</div>;\n  }\n\n  // Filter permissions based on search query and active tab\n  let filteredPermissions = permissions?.filter((permission) =>\n    permission.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    permission.display_name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    permission.description.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    permission.category.toLowerCase().includes(searchQuery.toLowerCase())\n  ) || [];\n\n  if (activeTab !== \"all\") {\n    filteredPermissions = filteredPermissions.filter(permission => \n      permission.category.toLowerCase() === activeTab.toLowerCase()\n    );\n  }\n\n  // Get unique categories\n  const categories = [...new Set(permissions?.map(p => p.category) || [])];\n\n  return (\n    <ProtectedRoute requireSuperAdmin>\n      <Page>\n        <Header\n          title=\"Permission Management\"\n          buttonText=\"Create Permission\"\n          filterByName={true}\n          filterWord={searchQuery}\n          onFilterChange={handleSearchChange}\n          useSheet={false}\n          showViewToggle={false}\n          showFilters={false}\n        />\n\n        <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between mb-6 gap-3\">\n          <div className=\"flex items-center space-x-2\">\n            <Badge variant=\"secondary\" className=\"px-3 py-1\">\n              <Key className=\"h-3 w-3 mr-1\" />\n              <span>{filteredPermissions.length} Permissions</span>\n            </Badge>\n          </div>\n\n          <RoleBasedButton\n            requireSuperAdmin\n            className=\"flex items-center gap-2\"\n          >\n            <Plus className=\"h-4 w-4\" />\n            Create Permission\n          </RoleBasedButton>\n        </div>\n\n        <div className=\"grid gap-6\">\n          {/* Permissions Overview Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Permissions</CardTitle>\n                <Key className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{permissions?.length || 0}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  All permissions\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">System Permissions</CardTitle>\n                <Settings className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {permissions?.filter(p => p.is_system_permission).length || 0}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Built-in permissions\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Custom Permissions</CardTitle>\n                <Users className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {permissions?.filter(p => !p.is_system_permission).length || 0}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  User-created permissions\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Categories</CardTitle>\n                <Shield className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{categories.length}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Permission categories\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Permissions Table with Tabs */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Permissions</CardTitle>\n              <CardDescription>\n                Manage system permissions and their assignments\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <Tabs value={activeTab} onValueChange={setActiveTab}>\n                <TabsList className=\"grid w-full grid-cols-5\">\n                  <TabsTrigger value=\"all\">All</TabsTrigger>\n                  <TabsTrigger value=\"pages\">Pages</TabsTrigger>\n                  <TabsTrigger value=\"users\">Users</TabsTrigger>\n                  <TabsTrigger value=\"roles\">Roles</TabsTrigger>\n                  <TabsTrigger value=\"system\">System</TabsTrigger>\n                </TabsList>\n                \n                <TabsContent value={activeTab} className=\"mt-4\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Permission</TableHead>\n                        <TableHead>Resource</TableHead>\n                        <TableHead>Action</TableHead>\n                        <TableHead>Category</TableHead>\n                        <TableHead>Type</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {isLoading ? (\n                        // Show skeleton loading for permissions\n                        Array.from({ length: 8 }).map((_, index) => (\n                          <TableRow key={`permission-skeleton-${index}`}>\n                            <TableCell>\n                              <div>\n                                <Skeleton className=\"h-4 w-32 mb-1\" />\n                                <Skeleton className=\"h-3 w-24\" />\n                              </div>\n                            </TableCell>\n                            <TableCell>\n                              <Skeleton className=\"h-6 w-16\" />\n                            </TableCell>\n                            <TableCell>\n                              <Skeleton className=\"h-6 w-16\" />\n                            </TableCell>\n                            <TableCell>\n                              <Skeleton className=\"h-4 w-20\" />\n                            </TableCell>\n                            <TableCell>\n                              <Skeleton className=\"h-6 w-20\" />\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"flex items-center gap-2\">\n                                <Skeleton className=\"h-8 w-8\" />\n                                <Skeleton className=\"h-8 w-8\" />\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        ))\n                      ) : (\n                        filteredPermissions.map((permission) => (\n                        <TableRow key={permission.id}>\n                          <TableCell>\n                            <div>\n                              <div className=\"font-medium\">{permission.display_name}</div>\n                              <div className=\"text-sm text-muted-foreground\">{permission.name}</div>\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <Badge variant=\"outline\">{permission.resource}</Badge>\n                          </TableCell>\n                          <TableCell>\n                            <Badge variant=\"secondary\">{permission.action}</Badge>\n                          </TableCell>\n                          <TableCell>\n                            <Badge variant=\"default\">{permission.category}</Badge>\n                          </TableCell>\n                          <TableCell>\n                            <Badge variant={permission.is_system_permission ? \"secondary\" : \"default\"}>\n                              {permission.is_system_permission ? \"System\" : \"Custom\"}\n                            </Badge>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"flex items-center gap-2\">\n                              <RoleBasedButton\n                                requireSuperAdmin\n                                size=\"sm\"\n                                variant=\"outline\"\n                              >\n                                <Edit className=\"h-3 w-3\" />\n                              </RoleBasedButton>\n                              \n                              {!permission.is_system_permission && (\n                                <RoleBasedButton\n                                  requireSuperAdmin\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  onClick={() => handleDeletePermission(permission.id, permission.display_name)}\n                                >\n                                  <Trash2 className=\"h-3 w-3\" />\n                                </RoleBasedButton>\n                              )}\n                            </div>\n                          </TableCell>\n                        </TableRow>\n                      ))\n                      )}\n                    </TableBody>\n                  </Table>\n                </TabsContent>\n              </Tabs>\n            </CardContent>\n          </Card>\n        </div>\n      </Page>\n    </ProtectedRoute>\n  );\n};\n\nexport default Permissions;\n"],"names":["ProtectedRoute","children","permission","permissions","requireAll","role","roles","requireSuperAdmin","redirectTo","showError","isLoggedIn","authLoading","useAuth","hasPermission","hasAnyPermission","hasAllPermissions","userRole","isSuperAdmin","permissionLoading","usePermissions","location","useLocation","Loading","jsx","Alert","ShieldX","AlertDescription","Navigate","RoleBasedButton","fallback","hideWhenNoAccess","disabled","buttonProps","loading","Button","hasAccess","fetchPermissions","axiosInstance","Permissions","searchQuery","setSearchQuery","useState","activeTab","setActiveTab","isLoading","error","refetch","useQuery","handleSearchChange","value","handleDeletePermission","permissionId","permissionName","toast","filteredPermissions","categories","p","Page","Header","jsxs","Badge","Key","Plus","Card","CardHeader","CardTitle","CardContent","Settings","Users","Shield","CardDescription","Tabs","TabsList","TabsTrigger","TabsContent","Table","TableHeader","TableRow","TableHead","TableBody","_","index","TableCell","Skeleton","Edit","Trash2"],"mappings":"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"}