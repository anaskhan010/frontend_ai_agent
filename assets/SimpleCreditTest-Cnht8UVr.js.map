{"version":3,"file":"SimpleCreditTest-Cnht8UVr.js","sources":["../../src/components/Debug/SimpleCreditTest.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\n\nconst SimpleCreditTest = () => {\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const testCredits = async () => {\n    setLoading(true);\n    setResult('Testing...\\n');\n    \n    try {\n      // Step 1: Direct API call without axios\n      setResult(prev => prev + 'Step 1: Demo login...\\n');\n      \n      const loginResponse = await fetch('http://localhost:5001/api/auth/demo-login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: '{}'\n      });\n      \n      const loginData = await loginResponse.json();\n      setResult(prev => prev + `Login success: ${loginData.success}\\n`);\n      setResult(prev => prev + `User ID: ${loginData.data.user.id}\\n`);\n      \n      const token = loginData.data.token;\n      setResult(prev => prev + `Token: ${token.substring(0, 30)}...\\n\\n`);\n      \n      // Step 2: Get credits\n      setResult(prev => prev + 'Step 2: Get credit balance...\\n');\n      \n      const balanceResponse = await fetch('http://localhost:5001/api/credits/balance', {\n        headers: { \n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      const balanceData = await balanceResponse.json();\n      setResult(prev => prev + `Balance API success: ${balanceData.success}\\n`);\n      setResult(prev => prev + `Available credits: ${balanceData.data.available_credits}\\n`);\n      setResult(prev => prev + `Total credits: ${balanceData.data.total_credits}\\n`);\n      setResult(prev => prev + `Used credits: ${balanceData.data.used_credits}\\n\\n`);\n      \n      // Step 3: Test with proxy (frontend URL)\n      setResult(prev => prev + 'Step 3: Test with frontend proxy...\\n');\n      \n      const proxyResponse = await fetch('/api/credits/balance', {\n        headers: { \n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      const proxyData = await proxyResponse.json();\n      setResult(prev => prev + `Proxy API success: ${proxyData.success}\\n`);\n      setResult(prev => prev + `Proxy available credits: ${proxyData.data.available_credits}\\n\\n`);\n      \n      // Final result\n      if (parseFloat(balanceData.data.available_credits) > 0) {\n        setResult(prev => prev + '✅ SUCCESS: You have credits! Frontend issue confirmed.\\n');\n        setResult(prev => prev + `🎯 You should see ${balanceData.data.available_credits} credits in topbar\\n`);\n      } else {\n        setResult(prev => prev + '❌ PROBLEM: API returning 0 credits\\n');\n      }\n      \n    } catch (error) {\n      setResult(prev => prev + `❌ ERROR: ${error.message}\\n`);\n    }\n    \n    setLoading(false);\n  };\n\n  useEffect(() => {\n    testCredits();\n  }, []);\n\n  return (\n    <div className=\"p-6 max-w-4xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">Simple Credit Test</h1>\n      \n      <Button onClick={testCredits} disabled={loading} className=\"mb-4\">\n        {loading ? 'Testing...' : 'Run Test Again'}\n      </Button>\n      \n      <div className=\"bg-gray-100 p-4 rounded-lg\">\n        <pre className=\"whitespace-pre-wrap text-sm font-mono\">\n          {result}\n        </pre>\n      </div>\n      \n      <div className=\"mt-4 p-4 bg-blue-50 rounded-lg\">\n        <h3 className=\"font-semibold mb-2\">What this test does:</h3>\n        <ul className=\"text-sm space-y-1\">\n          <li>1. Direct API call to login (bypassing frontend)</li>\n          <li>2. Direct API call to get credits (bypassing frontend)</li>\n          <li>3. Test with frontend proxy</li>\n          <li>4. Compare results</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SimpleCreditTest;\n"],"names":["SimpleCreditTest","result","setResult","useState","loading","setLoading","testCredits","prev","loginData","token","balanceData","proxyData","error","useEffect","jsxs","jsx","Button"],"mappings":"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"}