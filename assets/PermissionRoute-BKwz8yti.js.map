{"version":3,"file":"PermissionRoute-BKwz8yti.js","sources":["../../src/components/permissions/PermissionRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '@/context/AuthContext';\nimport { usePermissions } from '@/hooks/usePermissions';\nimport Loading from '@/Loading';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Shield, AlertTriangle } from 'lucide-react';\n\ninterface PermissionRouteProps {\n  children: React.ReactNode;\n  \n  // Permission-based access\n  permission?: string;\n  permissions?: string[];\n  requireAll?: boolean;\n  \n  // Role-based access\n  role?: string;\n  roles?: string[];\n  requireAllRoles?: boolean;\n  \n  // Page-based access\n  page?: string;\n  \n  // Super admin access\n  requireSuperAdmin?: boolean;\n  \n  // Redirect paths\n  redirectTo?: string;\n  loginRedirect?: string;\n  \n  // Custom access denied component\n  accessDeniedComponent?: React.ReactNode;\n}\n\nconst PermissionRoute: React.FC<PermissionRouteProps> = ({\n  children,\n  permission,\n  permissions,\n  requireAll = false,\n  role,\n  roles,\n  requireAllRoles = false,\n  page,\n  requireSuperAdmin = false,\n  redirectTo = '/dashboard',\n  loginRedirect = '/login',\n  accessDeniedComponent\n}) => {\n  const { isLoggedIn, loading: authLoading } = useAuth();\n  const location = useLocation();\n  const {\n    hasPermission,\n    hasAnyPermission,\n    hasAllPermissions,\n    hasRole,\n    hasAnyRole,\n    isSuperAdmin,\n    canAccessPage,\n    loading: permissionsLoading\n  } = usePermissions();\n\n  // Show loading while authentication or permissions are being checked\n  if (authLoading || permissionsLoading) {\n    return <Loading />;\n  }\n\n  // Redirect to login if not authenticated\n  if (!isLoggedIn) {\n    return <Navigate to={loginRedirect} state={{ from: location }} replace />;\n  }\n\n  // Check access permissions\n  const checkAccess = (): boolean => {\n    // Super admin check first\n    if (requireSuperAdmin) {\n      return isSuperAdmin;\n    }\n\n    // If super admin and no specific requirements, grant access\n    if (isSuperAdmin && !permission && !permissions && !role && !roles && !page) {\n      return true;\n    }\n\n    // Check single permission\n    if (permission && !hasPermission(permission)) {\n      return false;\n    }\n\n    // Check multiple permissions\n    if (permissions && permissions.length > 0) {\n      const hasAccess = requireAll \n        ? hasAllPermissions(permissions)\n        : hasAnyPermission(permissions);\n      \n      if (!hasAccess) return false;\n    }\n\n    // Check single role\n    if (role && !hasRole(role)) {\n      return false;\n    }\n\n    // Check multiple roles\n    if (roles && roles.length > 0) {\n      const hasAccess = requireAllRoles\n        ? roles.every(r => hasRole(r))\n        : hasAnyRole(roles);\n      \n      if (!hasAccess) return false;\n    }\n\n    // Check page access\n    if (page && !canAccessPage(page)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const hasAccess = checkAccess();\n\n  // If access is denied, show custom component or default access denied page\n  if (!hasAccess) {\n    if (accessDeniedComponent) {\n      return <>{accessDeniedComponent}</>;\n    }\n\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <Card className=\"w-full max-w-md\">\n          <CardHeader className=\"text-center\">\n            <div className=\"mx-auto mb-4 flex h-12 w-12 items-center justify-center rounded-full bg-red-100\">\n              <AlertTriangle className=\"h-6 w-6 text-red-600\" />\n            </div>\n            <CardTitle className=\"text-xl font-semibold text-gray-900\">\n              Access Denied\n            </CardTitle>\n            <CardDescription className=\"text-gray-600\">\n              You don't have permission to access this page.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"text-center\">\n            <div className=\"space-y-2 text-sm text-gray-500\">\n              {requireSuperAdmin && (\n                <p>This page requires super administrator privileges.</p>\n              )}\n              {permission && (\n                <p>Required permission: <code className=\"bg-gray-100 px-1 rounded\">{permission}</code></p>\n              )}\n              {permissions && permissions.length > 0 && (\n                <p>\n                  Required permissions ({requireAll ? 'all' : 'any'}): {' '}\n                  {permissions.map(p => (\n                    <code key={p} className=\"bg-gray-100 px-1 rounded mr-1\">{p}</code>\n                  ))}\n                </p>\n              )}\n              {role && (\n                <p>Required role: <code className=\"bg-gray-100 px-1 rounded\">{role}</code></p>\n              )}\n              {roles && roles.length > 0 && (\n                <p>\n                  Required roles ({requireAllRoles ? 'all' : 'any'}): {' '}\n                  {roles.map(r => (\n                    <code key={r} className=\"bg-gray-100 px-1 rounded mr-1\">{r}</code>\n                  ))}\n                </p>\n              )}\n            </div>\n            <div className=\"mt-6\">\n              <button\n                onClick={() => window.history.back()}\n                className=\"text-blue-600 hover:text-blue-500 font-medium\"\n              >\n                Go Back\n              </button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  // If all checks pass, render the protected content\n  return <>{children}</>;\n};\n\nexport default PermissionRoute;\n"],"names":["PermissionRoute","children","permission","permissions","requireAll","role","roles","requireAllRoles","page","requireSuperAdmin","redirectTo","loginRedirect","accessDeniedComponent","isLoggedIn","authLoading","useAuth","location","useLocation","hasPermission","hasAnyPermission","hasAllPermissions","hasRole","hasAnyRole","isSuperAdmin","canAccessPage","permissionsLoading","usePermissions","Loading","r","jsxs","Card","CardHeader","jsx","AlertTriangle","CardTitle","CardDescription","CardContent","p","Navigate"],"mappings":"8RAmCA,MAAMA,EAAkD,CAAC,CACvD,SAAAC,EACA,WAAAC,EACA,YAAAC,EACA,WAAAC,EAAa,GACb,KAAAC,EACA,MAAAC,EACA,gBAAAC,EAAkB,GAClB,KAAAC,EACA,kBAAAC,EAAoB,GACpB,WAAAC,EAAa,aACb,cAAAC,EAAgB,SAChB,sBAAAC,CACF,IAAM,CACJ,KAAM,CAAE,WAAAC,EAAY,QAASC,CAAA,EAAgBC,EAAQ,EAC/CC,EAAWC,EAAY,EACvB,CACJ,cAAAC,EACA,iBAAAC,EACA,kBAAAC,EACA,QAAAC,EACA,WAAAC,EACA,aAAAC,EACA,cAAAC,EACA,QAASC,GACPC,EAAe,EAGnB,OAAIZ,GAAeW,QACTE,EAAQ,EAAA,EAIbd,GAOCJ,EACKc,EAILA,GAAgB,CAACrB,GAAc,CAACC,GAAe,CAACE,GAAQ,CAACC,GAAS,CAACE,EAC9D,GAIL,EAAAN,GAAc,CAACgB,EAAchB,CAAU,GAKvCC,GAAeA,EAAY,OAAS,GAKlC,EAJcC,EACdgB,EAAkBjB,CAAW,EAC7BgB,EAAiBhB,CAAW,IAM9BE,GAAQ,CAACgB,EAAQhB,CAAI,GAKrBC,GAASA,EAAM,OAAS,GAKtB,EAJcC,EACdD,EAAM,MAAMsB,GAAKP,EAAQO,CAAC,CAAC,EAC3BN,EAAWhB,CAAK,IAMlBE,GAAQ,CAACgB,EAAchB,CAAI,sBAwEvB,SAAAP,EAAS,EA7DbW,oBACQ,SAAsBA,CAAA,CAAA,QAI/B,MAAI,CAAA,UAAU,2DACb,SAACiB,EAAA,KAAAC,EAAA,CAAK,UAAU,kBACd,SAAA,CAACD,EAAAA,KAAAE,EAAA,CAAW,UAAU,cACpB,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,kFACb,eAACC,EAAc,CAAA,UAAU,uBAAuB,CAClD,CAAA,EACCD,EAAA,IAAAE,EAAA,CAAU,UAAU,sCAAsC,SAE3D,gBAAA,EACCF,EAAA,IAAAG,EAAA,CAAgB,UAAU,gBAAgB,SAE3C,gDAAA,CAAA,CAAA,EACF,EACAN,EAAAA,KAACO,EAAY,CAAA,UAAU,cACrB,SAAA,CAACP,EAAAA,KAAA,MAAA,CAAI,UAAU,kCACZ,SAAA,CACCpB,GAAAuB,EAAAA,IAAC,KAAE,SAAkD,oDAAA,CAAA,EAEtD9B,UACE,IAAE,CAAA,SAAA,CAAA,wBAAsB8B,EAAA,IAAA,OAAA,CAAK,UAAU,2BAA4B,SAAW9B,CAAA,CAAA,CAAA,EAAO,EAEvFC,GAAeA,EAAY,OAAS,UAClC,IAAE,CAAA,SAAA,CAAA,yBACsBC,EAAa,MAAQ,MAAM,MAAI,IACrDD,EAAY,IACXkC,GAAAL,EAAA,IAAC,QAAa,UAAU,gCAAiC,SAA9CK,CAAA,EAAAA,CAAgD,CAC5D,CAAA,EACH,EAEDhC,UACE,IAAE,CAAA,SAAA,CAAA,kBAAgB2B,EAAA,IAAA,OAAA,CAAK,UAAU,2BAA4B,SAAK3B,CAAA,CAAA,CAAA,EAAO,EAE3EC,GAASA,EAAM,OAAS,UACtB,IAAE,CAAA,SAAA,CAAA,mBACgBC,EAAkB,MAAQ,MAAM,MAAI,IACpDD,EAAM,IACL,GAAA0B,EAAA,IAAC,QAAa,UAAU,gCAAiC,SAA9C,CAAA,EAAA,CAAgD,CAC5D,CAAA,CACH,CAAA,CAAA,EAEJ,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,OAAO,QAAQ,KAAK,EACnC,UAAU,gDACX,SAAA,SAAA,CAAA,CAGH,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EA/GKA,MAACM,EAAS,CAAA,GAAI3B,EAAe,MAAO,CAAE,KAAMK,CAAA,EAAY,QAAO,EAAC,CAAA,CAqH3E"}