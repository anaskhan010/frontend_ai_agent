{"version":3,"file":"CreditManagement-BHPH4TWO.js","sources":["../../src/pages/Admin/CreditManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { \n  Users, \n  CreditCard, \n  TrendingUp, \n  DollarSign, \n  Plus, \n  Minus,\n  Search,\n  Filter,\n  Download,\n  Eye,\n  Edit,\n  AlertTriangle,\n  CheckCircle,\n  Clock,\n  Infinity\n} from 'lucide-react';\nimport { toast } from 'sonner';\nimport axiosInstance from '@/api/axios/axiosInstance';\n\nconst CreditManagement = () => {\n  const [users, setUsers] = useState([]);\n  const [analytics, setAnalytics] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [adjustmentModal, setAdjustmentModal] = useState(false);\n  const [adjustmentAmount, setAdjustmentAmount] = useState('');\n  const [adjustmentReason, setAdjustmentReason] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    fetchData();\n  }, [currentPage]);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const [usersResponse, analyticsResponse] = await Promise.all([\n        axiosInstance.get(`/api/credits/admin/users?page=${currentPage}&limit=20`),\n        axiosInstance.get('/api/credits/admin/analytics?days=30')\n      ]);\n      \n      setUsers(usersResponse.data.data.users);\n      setTotalPages(usersResponse.data.data.pagination.totalPages);\n      setAnalytics(analyticsResponse.data.data);\n    } catch (error) {\n      console.error('Error fetching credit data:', error);\n      toast.error('Failed to load credit data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAdjustCredits = async () => {\n    if (!selectedUser || !adjustmentAmount) {\n      toast.error('Please enter an adjustment amount');\n      return;\n    }\n\n    try {\n      await axiosInstance.post('/api/credits/admin/adjust', {\n        userId: selectedUser.user_id,\n        amount: parseFloat(adjustmentAmount),\n        reason: adjustmentReason || 'Admin adjustment'\n      });\n\n      toast.success(`Credits ${adjustmentAmount > 0 ? 'added to' : 'deducted from'} ${selectedUser.email}`);\n      setAdjustmentModal(false);\n      setAdjustmentAmount('');\n      setAdjustmentReason('');\n      setSelectedUser(null);\n      fetchData();\n    } catch (error) {\n      console.error('Error adjusting credits:', error);\n      toast.error('Failed to adjust credits');\n    }\n  };\n\n  const filteredUsers = users.filter(user =>\n    user.email?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    user.first_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    user.last_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    user.username?.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const formatCredits = (credits) => {\n    if (credits === null || credits === undefined) return '0';\n    return parseFloat(credits).toLocaleString('en-US', { \n      minimumFractionDigits: 0, \n      maximumFractionDigits: 2 \n    });\n  };\n\n  const getCreditStatusColor = (availableCredits) => {\n    if (availableCredits <= 0) return 'text-red-600';\n    if (availableCredits <= 10) return 'text-yellow-600';\n    return 'text-green-600';\n  };\n\n  const getCreditStatusBadge = (availableCredits) => {\n    if (availableCredits <= 0) return { variant: 'destructive', text: 'No Credits' };\n    if (availableCredits <= 10) return { variant: 'secondary', text: 'Low Credits' };\n    if (availableCredits <= 50) return { variant: 'outline', text: 'Medium' };\n    return { variant: 'default', text: 'Good' };\n  };\n\n  if (loading) {\n    return (\n      <div className=\"p-6 space-y-6\">\n        <div className=\"flex justify-between items-center\">\n          <h1 className=\"text-3xl font-bold\">Credit Management</h1>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n          {[...Array(4)].map((_, i) => (\n            <Card key={i}>\n              <CardContent className=\"p-6\">\n                <div className=\"animate-pulse\">\n                  <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\n                  <div className=\"h-8 bg-gray-200 rounded w-1/2\"></div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Credit Management</h1>\n          <p className=\"text-gray-600 mt-1\">Monitor and manage user credits across the platform</p>\n        </div>\n        <div className=\"flex space-x-2\">\n          <Button variant=\"outline\">\n            <Download className=\"h-4 w-4 mr-2\" />\n            Export Data\n          </Button>\n        </div>\n      </div>\n\n      {/* Analytics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Total Users</p>\n                <p className=\"text-2xl font-bold text-blue-600\">\n                  {users.length}\n                </p>\n              </div>\n              <Users className=\"h-8 w-8 text-blue-600\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Total Revenue</p>\n                <p className=\"text-2xl font-bold text-green-600\">\n                  ${analytics?.payments?.total_revenue ? (analytics.payments.total_revenue / 100).toFixed(2) : '0.00'}\n                </p>\n              </div>\n              <DollarSign className=\"h-8 w-8 text-green-600\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Credits Sold</p>\n                <p className=\"text-2xl font-bold text-purple-600\">\n                  {analytics?.payments?.total_credits_sold ? formatCredits(analytics.payments.total_credits_sold) : '0'}\n                </p>\n              </div>\n              <CreditCard className=\"h-8 w-8 text-purple-600\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Credits Used</p>\n                <p className=\"text-2xl font-bold text-orange-600\">\n                  {analytics?.usage?.total_credits_consumed ? formatCredits(analytics.usage.total_credits_consumed) : '0'}\n                </p>\n              </div>\n              <TrendingUp className=\"h-8 w-8 text-orange-600\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Content */}\n      <Tabs defaultValue=\"users\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"users\">User Credits</TabsTrigger>\n          <TabsTrigger value=\"transactions\">Recent Transactions</TabsTrigger>\n          <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"users\" className=\"space-y-4\">\n          {/* Search and Filters */}\n          <div className=\"flex justify-between items-center\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\n                <Input\n                  placeholder=\"Search users...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-10 w-64\"\n                />\n              </div>\n              <Button variant=\"outline\">\n                <Filter className=\"h-4 w-4 mr-2\" />\n                Filter\n              </Button>\n            </div>\n          </div>\n\n          {/* Users Table */}\n          <Card>\n            <CardContent className=\"p-0\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>User</TableHead>\n                    <TableHead>Total Credits</TableHead>\n                    <TableHead>Used Credits</TableHead>\n                    <TableHead>Available Credits</TableHead>\n                    <TableHead>Status</TableHead>\n                    <TableHead>Last Purchase</TableHead>\n                    <TableHead>Actions</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {filteredUsers.map((user) => {\n                    const statusBadge = getCreditStatusBadge(parseFloat(user.available_credits || 0));\n                    return (\n                      <TableRow key={user.user_id}>\n                        <TableCell>\n                          <div>\n                            <div className=\"font-medium\">\n                              {user.first_name} {user.last_name}\n                            </div>\n                            <div className=\"text-sm text-gray-500\">{user.email}</div>\n                          </div>\n                        </TableCell>\n                        <TableCell className=\"font-medium\">\n                          {formatCredits(user.total_credits)}\n                        </TableCell>\n                        <TableCell className=\"text-red-600\">\n                          {formatCredits(user.used_credits)}\n                        </TableCell>\n                        <TableCell className={getCreditStatusColor(parseFloat(user.available_credits || 0))}>\n                          <div className=\"font-medium\">\n                            {formatCredits(user.available_credits)}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <Badge variant={statusBadge.variant}>\n                            {statusBadge.text}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>\n                          {user.last_purchase_at ? \n                            new Date(user.last_purchase_at).toLocaleDateString() : \n                            'Never'\n                          }\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex space-x-2\">\n                            <Button\n                              size=\"sm\"\n                              variant=\"outline\"\n                              onClick={() => {\n                                setSelectedUser(user);\n                                setAdjustmentModal(true);\n                              }}\n                            >\n                              <Edit className=\"h-4 w-4\" />\n                            </Button>\n                            <Button size=\"sm\" variant=\"outline\">\n                              <Eye className=\"h-4 w-4\" />\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n\n          {/* Pagination */}\n          <div className=\"flex justify-between items-center\">\n            <p className=\"text-sm text-gray-600\">\n              Showing {filteredUsers.length} of {users.length} users\n            </p>\n            <div className=\"flex space-x-2\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setCurrentPage(prev => Math.max(1, prev - 1))}\n                disabled={currentPage === 1}\n              >\n                Previous\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setCurrentPage(prev => Math.min(totalPages, prev + 1))}\n                disabled={currentPage === totalPages}\n              >\n                Next\n              </Button>\n            </div>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"transactions\">\n          <TransactionHistory />\n        </TabsContent>\n\n        <TabsContent value=\"analytics\">\n          <CreditAnalytics analytics={analytics} />\n        </TabsContent>\n      </Tabs>\n\n      {/* Credit Adjustment Modal */}\n      <Dialog open={adjustmentModal} onOpenChange={setAdjustmentModal}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Adjust Credits</DialogTitle>\n            <DialogDescription>\n              Adjust credits for {selectedUser?.email}\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"text-sm font-medium\">Amount</label>\n              <Input\n                type=\"number\"\n                placeholder=\"Enter amount (positive to add, negative to deduct)\"\n                value={adjustmentAmount}\n                onChange={(e) => setAdjustmentAmount(e.target.value)}\n              />\n            </div>\n            <div>\n              <label className=\"text-sm font-medium\">Reason</label>\n              <Input\n                placeholder=\"Reason for adjustment\"\n                value={adjustmentReason}\n                onChange={(e) => setAdjustmentReason(e.target.value)}\n              />\n            </div>\n            <div className=\"flex justify-end space-x-2\">\n              <Button variant=\"outline\" onClick={() => setAdjustmentModal(false)}>\n                Cancel\n              </Button>\n              <Button onClick={handleAdjustCredits}>\n                Adjust Credits\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\n// Transaction History Component\nconst TransactionHistory = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n\n  const fetchTransactions = async () => {\n    try {\n      // This would be a new endpoint for admin transaction history\n      const response = await axiosInstance.get('/api/credits/admin/transactions?limit=50');\n      setTransactions(response.data.data || []);\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return <div>Loading transactions...</div>;\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Recent Credit Transactions</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <p className=\"text-gray-500\">Transaction history will be displayed here</p>\n      </CardContent>\n    </Card>\n  );\n};\n\n// Credit Analytics Component\nconst CreditAnalytics = ({ analytics }) => {\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Credit System Analytics</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">Usage Statistics</h3>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span>Total Operations:</span>\n                  <span className=\"font-medium\">{analytics?.usage?.total_operations || 0}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Credits Consumed:</span>\n                  <span className=\"font-medium\">{analytics?.usage?.total_credits_consumed || 0}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Average per Operation:</span>\n                  <span className=\"font-medium\">{analytics?.usage?.avg_credits_per_operation || 0}</span>\n                </div>\n              </div>\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">Payment Statistics</h3>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span>Total Payments:</span>\n                  <span className=\"font-medium\">{analytics?.payments?.total_payments || 0}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Successful Payments:</span>\n                  <span className=\"font-medium\">{analytics?.payments?.successful_payments || 0}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Success Rate:</span>\n                  <span className=\"font-medium\">\n                    {analytics?.payments?.total_payments > 0 \n                      ? ((analytics.payments.successful_payments / analytics.payments.total_payments) * 100).toFixed(1)\n                      : 0}%\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default CreditManagement;\n"],"names":["CreditManagement","users","setUsers","useState","analytics","setAnalytics","loading","setLoading","searchTerm","setSearchTerm","selectedUser","setSelectedUser","adjustmentModal","setAdjustmentModal","adjustmentAmount","setAdjustmentAmount","adjustmentReason","setAdjustmentReason","currentPage","setCurrentPage","totalPages","setTotalPages","useEffect","fetchData","usersResponse","analyticsResponse","axiosInstance","error","toast","handleAdjustCredits","filteredUsers","user","_a","_b","_c","_d","formatCredits","credits","getCreditStatusColor","availableCredits","getCreditStatusBadge","jsxs","jsx","_","Card","CardContent","Button","Download","Users","DollarSign","CreditCard","TrendingUp","Tabs","TabsList","TabsTrigger","TabsContent","Search","Input","e","Filter","Table","TableHeader","TableRow","TableHead","TableBody","statusBadge","TableCell","Badge","Edit","Eye","prev","TransactionHistory","CreditAnalytics","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","transactions","setTransactions","fetchTransactions","response","CardHeader","CardTitle","_e","_f"],"mappings":"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"}