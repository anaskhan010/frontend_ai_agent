{"version":3,"file":"SupportTicketDetail-Dr_tubqF.js","sources":["../../src/pages/Support/SupportTicketDetail.tsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport {\n  ArrowLeft,\n  MessageSquare,\n  Clock,\n  AlertCircle,\n  Send,\n  Calendar,\n  CheckCircle,\n  XCircle,\n  CheckCheck,\n} from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport { usePermissions } from \"@/context/PermissionContext\";\nimport { useAuth } from \"@/context/AuthContext\";\nimport {\n  getSupportTicketById,\n  getTicketMessages,\n  addTicketMessage,\n  updateSupportTicket,\n  type SupportTicketMessage,\n} from \"@/api/services/support/supportService\";\n\nexport function SupportTicketDetail() {\n  const { ticketId } = useParams<{ ticketId: string }>();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { isSuperAdmin } = usePermissions();\n  const { user } = useAuth();\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  // Fetch ticket details\n  const {\n    data: ticketResponse,\n    isLoading: ticketLoading,\n    error: ticketError,\n  } = useQuery({\n    queryKey: [\"supportTicket\", ticketId],\n    queryFn: () => getSupportTicketById(ticketId!),\n    enabled: !!ticketId,\n  });\n\n  // Fetch ticket messages\n  const {\n    data: messagesResponse,\n    isLoading: messagesLoading,\n  } = useQuery({\n    queryKey: [\"supportTicketMessages\", ticketId],\n    queryFn: () => getTicketMessages(ticketId!),\n    enabled: !!ticketId,\n  });\n\n  // Extract data from API responses\n  const ticket = ticketResponse?.data;\n  const messages = messagesResponse?.data;\n\n  // Auto-scroll to bottom when messages change\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Add message mutation\n  const addMessageMutation = useMutation({\n    mutationFn: (messageData: { message: string }) =>\n      addTicketMessage(ticketId!, messageData),\n    onSuccess: () => {\n      toast.success(\"Message sent successfully!\");\n      setNewMessage(\"\");\n      queryClient.invalidateQueries({ queryKey: [\"supportTicketMessages\", ticketId] });\n      queryClient.invalidateQueries({ queryKey: [\"supportTicket\", ticketId] });\n      queryClient.invalidateQueries({ queryKey: [\"supportTickets\"] });\n      // Scroll to bottom after sending message\n      setTimeout(scrollToBottom, 100);\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to send message\");\n    },\n  });\n\n  // Update ticket status mutation\n  const updateStatusMutation = useMutation({\n    mutationFn: (status: string) =>\n      updateSupportTicket(ticketId!, { status }),\n    onSuccess: () => {\n      toast.success(\"Ticket status updated successfully!\");\n      queryClient.invalidateQueries({ queryKey: [\"supportTicket\", ticketId] });\n      queryClient.invalidateQueries({ queryKey: [\"supportTickets\"] });\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Failed to update ticket status\");\n    },\n  });\n\n  const handleSendMessage = async () => {\n    if (!newMessage.trim()) return;\n\n    setIsSubmitting(true);\n    try {\n      await addMessageMutation.mutateAsync({ message: newMessage.trim() });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleStatusChange = (status: string) => {\n    updateStatusMutation.mutate(status);\n  };\n\n  const getStatusBadgeVariant = (status: string) => {\n    switch (status) {\n      case \"open\":\n        return \"default\";\n      case \"in_progress\":\n        return \"secondary\";\n      case \"waiting_response\":\n        return \"outline\";\n      case \"resolved\":\n        return \"success\";\n      case \"closed\":\n        return \"destructive\";\n      default:\n        return \"default\";\n    }\n  };\n\n  const getPriorityBadgeVariant = (priority: string) => {\n    switch (priority) {\n      case \"urgent\":\n        return \"destructive\";\n      case \"high\":\n        return \"secondary\";\n      case \"medium\":\n        return \"outline\";\n      case \"low\":\n        return \"default\";\n      default:\n        return \"default\";\n    }\n  };\n\n\n\n  const formatDate = (dateString: string) => {\n    try {\n      console.log('üìÖ Formatting full date - Input:', dateString);\n\n      // Handle different date formats that might come from backend\n      let date: Date;\n\n      if (typeof dateString === 'string') {\n        // If it's a MySQL datetime string, ensure it's properly parsed\n        // MySQL returns dates in 'YYYY-MM-DD HH:mm:ss' format in UTC\n        if (dateString.includes(' ') && !dateString.includes('T')) {\n          // Convert MySQL format to ISO format for proper timezone handling\n          // Assume backend sends UTC time, so add 'Z' to indicate UTC\n          const isoString = dateString.replace(' ', 'T') + 'Z';\n          date = new Date(isoString);\n          console.log('üìÖ MySQL format detected, converted to:', isoString, 'Parsed as:', date);\n        } else if (dateString.includes('T') && !dateString.includes('Z') && !dateString.includes('+')) {\n          // If it has 'T' but no timezone info, assume UTC\n          const utcString = dateString + 'Z';\n          date = new Date(utcString);\n          console.log('üìÖ ISO without timezone, treated as UTC:', utcString, 'Parsed as:', date);\n        } else {\n          // Standard ISO format or other formats\n          date = new Date(dateString);\n          console.log('üìÖ Standard format:', dateString, 'Parsed as:', date);\n        }\n      } else {\n        date = new Date(dateString);\n      }\n\n      // Check if date is valid\n      if (isNaN(date.getTime())) {\n        console.warn('üìÖ Invalid date string:', dateString);\n        return 'Invalid date';\n      }\n\n      // Option 1: Convert to browser's local timezone\n      const localFormatted = date.toLocaleString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n        timeZoneName: \"short\" // This will show the timezone (e.g., \"PST\", \"EST\")\n      });\n\n      // Option 2: Show in GMT/UTC with clear indicator\n      const gmtFormatted = date.toLocaleString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n        timeZone: \"UTC\",\n      }) + \" GMT\";\n\n      console.log('üìÖ Local timezone format:', localFormatted);\n      console.log('üìÖ GMT format:', gmtFormatted);\n      console.log('üìÖ Browser timezone:', Intl.DateTimeFormat().resolvedOptions().timeZone);\n      console.log('üìÖ Raw date object:', date);\n\n      // Return local timezone format (you can change this to gmtFormatted if you prefer GMT)\n      return localFormatted;\n\n    } catch (error) {\n      console.error('üìÖ Error formatting date:', error, 'Input:', dateString);\n      return 'Invalid date';\n    }\n  };\n\n  // Compact date format for message bubbles - ALWAYS show date and time\n  const formatMessageTime = (dateString: string) => {\n    try {\n      console.log('üïê Formatting message time - Input:', dateString);\n      console.log('üïê User browser timezone:', Intl.DateTimeFormat().resolvedOptions().timeZone);\n\n      let date: Date;\n\n      if (typeof dateString === 'string') {\n        // Handle MySQL datetime format: \"2024-12-30 15:30:00\"\n        if (dateString.includes(' ') && !dateString.includes('T')) {\n          // MySQL format - DON'T assume UTC, treat as local server time\n          // Let's try both approaches and see what works\n\n          // Approach 1: Treat as UTC (add Z)\n          const utcString = dateString.replace(' ', 'T') + 'Z';\n          const utcDate = new Date(utcString);\n\n          // Approach 2: Treat as local server time (no Z)\n          const localString = dateString.replace(' ', 'T');\n          const localDate = new Date(localString);\n\n          console.log('üïê MySQL format - Original:', dateString);\n          console.log('üïê As UTC (with Z):', utcString, '‚Üí', utcDate.toLocaleString());\n          console.log('üïê As Local (no Z):', localString, '‚Üí', localDate.toLocaleString());\n\n          // Use the UTC approach for now, but let's see both in console\n          date = utcDate;\n\n        } else if (dateString.includes('T') && !dateString.includes('Z') && !dateString.includes('+')) {\n          // ISO format without timezone - assume UTC\n          date = new Date(dateString + 'Z');\n          console.log('üïê ISO without timezone, treated as UTC:', dateString + 'Z', 'Parsed as:', date);\n        } else {\n          // Standard format\n          date = new Date(dateString);\n          console.log('üïê Standard format:', dateString, 'Parsed as:', date);\n        }\n      } else {\n        date = new Date(dateString);\n      }\n\n      if (isNaN(date.getTime())) {\n        console.error('üïê Invalid date:', dateString);\n        return 'Invalid time';\n      }\n\n      // Option 1: Show in user's local timezone\n      const localFormatted = date.toLocaleString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n        timeZoneName: \"short\" // Shows PST, EST, etc.\n      });\n\n      // Option 2: Show in GMT/UTC with clear indicator\n      const gmtFormatted = date.toLocaleString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n        timeZone: \"UTC\",\n      }) + \" GMT\";\n\n      console.log('üïê Local timezone format:', localFormatted);\n      console.log('üïê GMT format:', gmtFormatted);\n      console.log('üïê Raw date object:', date);\n      console.log('üïê Date.getTime():', date.getTime());\n      console.log('üïê Date.toISOString():', date.toISOString());\n\n      // Return local timezone format (you can change this to gmtFormatted if you prefer GMT)\n      return localFormatted;\n\n    } catch (error) {\n      console.error('üïê Error formatting message time:', error, 'Input:', dateString);\n      return 'Invalid time';\n    }\n  };\n\n  if (ticketLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (ticketError || !ticket) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex flex-col items-center justify-center space-y-4\">\n        <AlertCircle className=\"h-12 w-12 text-gray-400\" />\n        <div className=\"text-center\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Ticket not found</h3>\n          <p className=\"text-gray-500 dark:text-gray-400\">\n            The support ticket you're looking for doesn't exist or you don't have access to it.\n          </p>\n        </div>\n        <Button onClick={() => navigate(\"/support\")} variant=\"outline\">\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\n          Back to Support\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      {/* Simple Header */}\n      <div className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"px-4 sm:px-6 lg:px-8 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <Button\n                onClick={() => navigate(\"/support\")}\n                variant=\"outline\"\n                size=\"sm\"\n              >\n                <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                Back\n              </Button>\n              <div>\n                <h1 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                  {ticket?.title || 'Loading...'}\n                </h1>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  #{ticket?.ticket_id?.slice(-8).toUpperCase() || 'Loading...'}\n                </p>\n              </div>\n            </div>\n\n            {/* Status change buttons - Only for Super Admin */}\n            {isSuperAdmin && (\n              <div className=\"flex items-center space-x-2\">\n                {ticket?.status !== \"resolved\" && (\n                  <Button\n                    onClick={() => handleStatusChange(\"resolved\")}\n                    size=\"sm\"\n                    disabled={updateStatusMutation.isPending}\n                  >\n                    <CheckCircle className=\"h-4 w-4 mr-2\" />\n                    Mark Resolved\n                  </Button>\n                )}\n                {ticket?.status !== \"closed\" && (\n                  <Button\n                    onClick={() => handleStatusChange(\"closed\")}\n                    variant=\"outline\"\n                    size=\"sm\"\n                    disabled={updateStatusMutation.isPending}\n                  >\n                    <XCircle className=\"h-4 w-4 mr-2\" />\n                    Close\n                  </Button>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"px-4 sm:px-6 lg:px-8 py-6\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Left Column - Main Content */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            {/* Ticket Description */}\n            <div className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6\">\n              <h2 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n                Description\n              </h2>\n              <p className=\"text-gray-700 dark:text-gray-300 whitespace-pre-wrap leading-relaxed\">\n                {ticket?.description || 'Loading...'}\n              </p>\n            </div>\n\n            {/* Tags */}\n            {ticket?.tags && ticket.tags.length > 0 && (\n              <div className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6\">\n                <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n                  Tags\n                </h3>\n                <div className=\"flex flex-wrap gap-2\">\n                  {ticket.tags.map((tag: any, index: number) => (\n                    <Badge key={index} variant=\"secondary\">\n                      {tag}\n                    </Badge>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Messages Section */}\n            <div className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden flex flex-col h-[600px]\">\n              {/* Messages Header */}\n              <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700 flex-shrink-0\">\n                <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                  Messages\n                </h2>\n                <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  {messages?.length || 0} messages\n                </span>\n              </div>\n\n              {/* Messages Container with Internal Scroll */}\n              <div className=\"flex-1 overflow-y-auto p-6 space-y-4\">\n                {messagesLoading ? (\n                  <div className=\"flex items-center justify-center py-8\">\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n                  </div>\n                ) : messages && messages.length > 0 ? (\n                  <>\n                    {messages.map((message: SupportTicketMessage) => {\n                      const isCurrentUser = String(message.user_id) === String(user?.id);\n\n                      return (\n                        <div key={message.id} className={`flex ${isCurrentUser ? 'justify-end' : 'justify-start'}`}>\n                          <div className={`flex items-start space-x-3 max-w-[70%] ${isCurrentUser ? 'flex-row-reverse space-x-reverse' : ''}`}>\n                            {/* Avatar */}\n                            <div className=\"flex-shrink-0\">\n                              <Avatar className=\"h-8 w-8 ring-2 ring-white dark:ring-gray-800 shadow-sm\">\n                                <AvatarFallback className={`text-white text-xs font-semibold ${\n                                  isCurrentUser\n                                    ? 'bg-gradient-to-br from-blue-500 to-blue-600'\n                                    : 'bg-gradient-to-br from-gray-500 to-gray-600'\n                                }`}>\n                                  {message.first_name?.charAt(0) || 'U'}\n                                  {message.last_name?.charAt(0) || 'N'}\n                                </AvatarFallback>\n                              </Avatar>\n                            </div>\n\n                            {/* Message Content */}\n                            <div className={`flex flex-col ${isCurrentUser ? 'items-end' : 'items-start'}`}>\n                              {/* Message Header */}\n                              <div className={`flex items-center space-x-2 mb-1 ${isCurrentUser ? 'flex-row-reverse space-x-reverse' : ''}`}>\n                                <span className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">\n                                  {isCurrentUser ? 'You' : `${message.first_name} ${message.last_name}`}\n                                </span>\n                                <span className=\"text-xs text-gray-400 dark:text-gray-500\">\n                                  {formatMessageTime(message.created_at)}\n                                </span>\n                              </div>\n\n                              {/* Message Bubble */}\n                              <div className={`relative px-4 py-3 rounded-2xl shadow-sm ${\n                                isCurrentUser\n                                  ? 'bg-blue-500 text-white rounded-br-md'\n                                  : 'bg-white dark:bg-gray-700 text-gray-800 dark:text-gray-200 border border-gray-200 dark:border-gray-600 rounded-bl-md'\n                              }`}>\n                                <p className=\"text-sm leading-relaxed whitespace-pre-wrap\">\n                                  {message.message}\n                                </p>\n\n                                {/* Message tail */}\n                                <div className={`absolute top-0 w-3 h-3 ${\n                                  isCurrentUser\n                                    ? 'right-0 bg-blue-500 transform rotate-45 translate-x-1/2 -translate-y-1/2'\n                                    : 'left-0 bg-white dark:bg-gray-700 border-l border-t border-gray-200 dark:border-gray-600 transform rotate-45 -translate-x-1/2 -translate-y-1/2'\n                                }`}></div>\n                              </div>\n\n                              {/* Message Status */}\n                              {isCurrentUser && (\n                                <div className=\"flex items-center space-x-1 mt-1 text-xs text-gray-400\">\n                                  <CheckCheck className=\"h-3 w-3\" />\n                                  <span>Sent</span>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                    {/* Scroll anchor */}\n                    <div ref={messagesEndRef} />\n                  </>\n                ) : (\n                  <div className=\"text-center py-8\">\n                    <MessageSquare className=\"h-12 w-12 text-gray-300 mx-auto mb-4\" />\n                    <p className=\"text-gray-500 dark:text-gray-400\">No messages yet</p>\n                  </div>\n                )}\n              </div>\n\n              {/* Message Input - Fixed at Bottom */}\n              <div className=\"p-6 border-t border-gray-200 dark:border-gray-700 flex-shrink-0 bg-gray-50 dark:bg-gray-800/50\">\n                <div className=\"space-y-4\">\n                  <Textarea\n                    placeholder=\"Type your message...\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    rows={3}\n                    disabled={isSubmitting}\n                    className=\"resize-none bg-white dark:bg-gray-700\"\n                  />\n                  <div className=\"flex justify-end\">\n                    <Button\n                      onClick={handleSendMessage}\n                      disabled={!newMessage.trim() || isSubmitting}\n                      size=\"sm\"\n                      className=\"bg-blue-600 hover:bg-blue-700\"\n                    >\n                      <Send className=\"h-4 w-4 mr-2\" />\n                      {isSubmitting ? \"Sending...\" : \"Send\"}\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Right Column - Ticket Information */}\n          <div className=\"space-y-6\">\n            {/* Ticket Status */}\n            <div className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6\">\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n                Ticket Information\n              </h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600 dark:text-gray-400\">Status</span>\n                  <Badge variant={getStatusBadgeVariant(ticket?.status || 'open')}>\n                    {ticket?.status?.replace('_', ' ') || 'Loading...'}\n                  </Badge>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600 dark:text-gray-400\">Priority</span>\n                  <Badge variant={getPriorityBadgeVariant(ticket?.priority || 'medium')}>\n                    {ticket?.priority?.toUpperCase() || 'LOADING...'}\n                  </Badge>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600 dark:text-gray-400\">Category</span>\n                  <Badge variant=\"outline\">\n                    {ticket?.category?.replace('_', ' ') || 'Loading...'}\n                  </Badge>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600 dark:text-gray-400\">Messages</span>\n                  <span className=\"text-sm text-gray-900 dark:text-white\">\n                    {ticket?.message_count || 0}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {/* Dates */}\n            <div className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6\">\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n                Timeline\n              </h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center space-x-3\">\n                  <Calendar className=\"h-4 w-4 text-gray-400\" />\n                  <div>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">Created</p>\n                    <p className=\"text-sm text-gray-900 dark:text-white\">\n                      {ticket?.created_at ? formatDate(ticket.created_at) : 'Loading...'}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <Clock className=\"h-4 w-4 text-gray-400\" />\n                  <div>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">Last Updated</p>\n                    <p className=\"text-sm text-gray-900 dark:text-white\">\n                      {ticket?.updated_at ? formatDate(ticket.updated_at) : 'Loading...'}\n                    </p>\n                  </div>\n                </div>\n                {ticket?.resolved_at && (\n                  <div className=\"flex items-center space-x-3\">\n                    <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                    <div>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">Resolved</p>\n                      <p className=\"text-sm text-gray-900 dark:text-white\">\n                        {formatDate(ticket.resolved_at)}\n                      </p>\n                    </div>\n                  </div>\n                )}\n                {ticket?.closed_at && (\n                  <div className=\"flex items-center space-x-3\">\n                    <XCircle className=\"h-4 w-4 text-red-500\" />\n                    <div>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">Closed</p>\n                      <p className=\"text-sm text-gray-900 dark:text-white\">\n                        {formatDate(ticket.closed_at)}\n                      </p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* User Information */}\n            <div className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6\">\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n                Created By\n              </h3>\n              <div className=\"flex items-center space-x-3\">\n                <Avatar className=\"h-10 w-10\">\n                  <AvatarFallback className=\"bg-blue-100 text-blue-600\">\n                    {ticket?.user_first_name?.charAt(0) || 'U'}\n                    {ticket?.user_last_name?.charAt(0) || 'N'}\n                  </AvatarFallback>\n                </Avatar>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                    {ticket?.user_first_name || 'Unknown'} {ticket?.user_last_name || 'User'}\n                  </p>\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                    {ticket?.user_email || 'No email provided'}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Assigned To */}\n            {ticket?.assigned_first_name && (\n              <div className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6\">\n                <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n                  Assigned To\n                </h3>\n                <div className=\"flex items-center space-x-3\">\n                  <Avatar className=\"h-10 w-10\">\n                    <AvatarFallback className=\"bg-green-100 text-green-600\">\n                      {ticket?.assigned_first_name?.charAt(0) || 'A'}\n                      {ticket?.assigned_last_name?.charAt(0) || 'S'}\n                    </AvatarFallback>\n                  </Avatar>\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {ticket?.assigned_first_name} {ticket?.assigned_last_name}\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      {ticket?.assigned_email}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Additional Information */}\n            <div className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6\">\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n                Details\n              </h3>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Ticket ID</span>\n                  <span className=\"text-gray-900 dark:text-white font-mono\">\n                    {ticket?.ticket_id || 'Loading...'}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Database ID</span>\n                  <span className=\"text-gray-900 dark:text-white\">\n                    #{ticket?.id || 'N/A'}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">User ID</span>\n                  <span className=\"text-gray-900 dark:text-white\">\n                    {ticket?.user_id || 'N/A'}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["SupportTicketDetail","ticketId","useParams","navigate","useNavigate","queryClient","useQueryClient","newMessage","setNewMessage","useState","isSubmitting","setIsSubmitting","isSuperAdmin","usePermissions","user","useAuth","messagesEndRef","useRef","ticketResponse","ticketLoading","ticketError","useQuery","getSupportTicketById","messagesResponse","messagesLoading","getTicketMessages","ticket","messages","scrollToBottom","_a","useEffect","addMessageMutation","useMutation","messageData","addTicketMessage","toast","error","updateStatusMutation","status","updateSupportTicket","handleSendMessage","handleStatusChange","getStatusBadgeVariant","getPriorityBadgeVariant","priority","formatDate","dateString","date","isoString","utcString","localFormatted","gmtFormatted","formatMessageTime","utcDate","localString","localDate","jsx","jsxs","AlertCircle","Button","ArrowLeft","CheckCircle","XCircle","tag","index","Badge","Fragment","message","isCurrentUser","Avatar","AvatarFallback","_b","CheckCheck","MessageSquare","Textarea","e","Send","_c","_d","Calendar","Clock","_e","_f","_g","_h"],"mappings":"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"}