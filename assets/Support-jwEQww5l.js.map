{"version":3,"file":"Support-jwEQww5l.js","sources":["../../src/pages/Support/AddSupportTicket.tsx","../../src/components/SupportTicketGrid.tsx","../../src/components/SupportFilterPopover.tsx","../../src/pages/Support/Support.tsx"],"sourcesContent":["import { useRef, useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  SheetClose,\n  SheetTitle,\n  SheetDescription,\n} from \"@/components/ui/sheet\";\nimport {\n  MessageCircleQuestion,\n  Tag,\n  AlertCircle,\n  FileText,\n  Paperclip,\n} from \"lucide-react\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { useMutation, useQueryClient, useQuery } from \"@tanstack/react-query\";\nimport { createSupportTicket, getSupportCategories } from \"@/api/services/support/supportService\";\nimport { toast } from \"sonner\";\n\n// Define the shape of form data\ninterface FormData {\n  title: string;\n  description: string;\n  category: string;\n  priority: string;\n  tags?: string[];\n}\n\n// Define the validation schema using Yup\nconst validationSchema = Yup.object().shape({\n  title: Yup.string()\n    .required(\"Title is required\")\n    .min(5, \"Title must be at least 5 characters\")\n    .max(500, \"Title cannot exceed 500 characters\"),\n  description: Yup.string()\n    .required(\"Description is required\")\n    .min(10, \"Description must be at least 10 characters\"),\n  category: Yup.string().required(\"Category is required\"),\n  priority: Yup.string().required(\"Priority is required\"),\n  tags: Yup.array().of(Yup.string().required()).optional(),\n});\n\ninterface AddSupportTicketProps {\n  onTicketCreated?: () => void;\n}\n\nexport function AddSupportTicket({ onTicketCreated }: AddSupportTicketProps = {}) {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const sheetCloseRef = useRef<HTMLButtonElement>(null);\n  const [tagInput, setTagInput] = useState(\"\");\n  const [tags, setTags] = useState<string[]>([]);\n  const queryClient = useQueryClient();\n\n  // Fetch support categories\n  const { data: categoriesData } = useQuery({\n    queryKey: [\"supportCategories\"],\n    queryFn: getSupportCategories,\n  });\n\n  const categories = categoriesData?.data || [];\n\n  // Initialize React Hook Form\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n    reset,\n    setValue,\n    watch,\n  } = useForm<FormData>({\n    resolver: yupResolver(validationSchema),\n    defaultValues: {\n      category: \"general\",\n      priority: \"medium\",\n      tags: [],\n    },\n  });\n\n  // Create ticket mutation\n  const createTicketMutation = useMutation({\n    mutationFn: createSupportTicket,\n    onMutate: async (newTicketData) => {\n      console.log(\"🚀 Starting ticket creation mutation...\", newTicketData);\n\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries({ queryKey: [\"supportTickets\"] });\n\n      // Snapshot the previous value\n      const previousTickets = queryClient.getQueriesData({ queryKey: [\"supportTickets\"] });\n\n      return { previousTickets };\n    },\n    onSuccess: async (data, variables) => {\n      console.log(\"✅ Support ticket created successfully:\", data);\n      toast.success(\"Support ticket created successfully!\");\n\n      // Call the parent component's refetch function directly\n      if (onTicketCreated) {\n        console.log(\"🔄 Calling onTicketCreated to refetch tickets...\");\n        try {\n          const result = onTicketCreated();\n          console.log(\"✅ Refetch initiated:\", result);\n        } catch (error) {\n          console.error(\"❌ Error refetching tickets:\", error);\n        }\n      } else {\n        console.warn(\"⚠️ onTicketCreated callback not provided\");\n      }\n\n      reset();\n      setTags([]);\n      setTagInput(\"\");\n      // Close the sheet after successful submission\n      setTimeout(() => {\n        sheetCloseRef.current?.click();\n      }, 100);\n    },\n    onError: (error: any, variables, context) => {\n      console.error(\"❌ Failed to create support ticket:\", error);\n      toast.error(error.message || \"Failed to create support ticket\");\n\n      // Rollback optimistic updates if any\n      if (context?.previousTickets) {\n        context.previousTickets.forEach(([queryKey, data]) => {\n          queryClient.setQueryData(queryKey, data);\n        });\n      }\n    },\n    onSettled: () => {\n      // Always refetch to ensure consistency\n      console.log(\"🏁 Mutation settled - clearing cache and refetching queries\");\n\n      // Clear all support ticket related cache\n      queryClient.removeQueries({\n        queryKey: [\"supportTickets\"],\n        exact: false\n      });\n      queryClient.removeQueries({\n        queryKey: [\"admin-support-tickets\"],\n        exact: false\n      });\n\n      // Force invalidation and refetch\n      queryClient.invalidateQueries({\n        queryKey: [\"supportTickets\"],\n        exact: false\n      });\n      queryClient.invalidateQueries({\n        queryKey: [\"admin-support-tickets\"],\n        exact: false\n      });\n\n      // Force immediate refetch\n      queryClient.refetchQueries({\n        queryKey: [\"supportTickets\"],\n        exact: false\n      });\n    },\n  });\n\n  // Handle form submission\n  const onSubmit = async (data: FormData) => {\n    try {\n      const ticketData = {\n        ...data,\n        tags,\n      };\n\n      await createTicketMutation.mutateAsync(ticketData);\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n\n  // Handle tag input\n  const handleTagKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" || e.key === \",\") {\n      e.preventDefault();\n      addTag();\n    }\n  };\n\n  const addTag = () => {\n    const trimmedTag = tagInput.trim();\n    if (trimmedTag && !tags.includes(trimmedTag)) {\n      const newTags = [...tags, trimmedTag];\n      setTags(newTags);\n      setValue(\"tags\", newTags);\n      setTagInput(\"\");\n    }\n  };\n\n  const removeTag = (tagToRemove: string) => {\n    const newTags = tags.filter(tag => tag !== tagToRemove);\n    setTags(newTags);\n    setValue(\"tags\", newTags);\n  };\n\n  // Handle file attachment click\n  const handleAttachmentClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  const priorityOptions = [\n    { value: \"low\", label: \"Low\", color: \"text-green-600\" },\n    { value: \"medium\", label: \"Medium\", color: \"text-yellow-600\" },\n    { value: \"high\", label: \"High\", color: \"text-orange-600\" },\n    { value: \"urgent\", label: \"Urgent\", color: \"text-red-600\" },\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <SheetTitle className=\"flex items-center space-x-2\">\n          <MessageCircleQuestion className=\"h-5 w-5 text-primary\" />\n          <span>Create Support Ticket</span>\n        </SheetTitle>\n        <SheetDescription>\n          Submit a new support ticket and we'll get back to you as soon as possible.\n        </SheetDescription>\n      </div>\n\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center space-x-2 mb-2\">\n            <FileText className=\"h-5 w-5 text-primary\" />\n            <h3 className=\"text-sm font-medium\">Ticket Information</h3>\n          </div>\n\n          {/* Title Field */}\n          <div>\n            <Label\n              htmlFor=\"title\"\n              className=\"text-sm font-medium text-foreground mb-1.5 block\"\n            >\n              Title<span className=\"text-red-500\">*</span>\n            </Label>\n            <Input\n              id=\"title\"\n              placeholder=\"Brief description of your issue\"\n              className=\"w-full border-border/50 bg-card focus:border-primary/50 focus:ring-primary/20\"\n              {...register(\"title\")}\n            />\n            {errors.title && (\n              <p className=\"mt-1 text-xs text-red-600\">{errors.title.message}</p>\n            )}\n          </div>\n\n          {/* Description Field */}\n          <div>\n            <Label\n              htmlFor=\"description\"\n              className=\"text-sm font-medium text-foreground mb-1.5 block\"\n            >\n              Description<span className=\"text-red-500\">*</span>\n            </Label>\n            <Textarea\n              id=\"description\"\n              placeholder=\"Please provide detailed information about your issue...\"\n              rows={6}\n              className=\"w-full border-border/50 bg-card focus:border-primary/50 focus:ring-primary/20 resize-none\"\n              {...register(\"description\")}\n            />\n            {errors.description && (\n              <p className=\"mt-1 text-xs text-red-600\">{errors.description.message}</p>\n            )}\n          </div>\n\n          {/* Category Field */}\n          <div>\n            <Label\n              htmlFor=\"category\"\n              className=\"text-sm font-medium text-foreground mb-1.5 block\"\n            >\n              Category<span className=\"text-red-500\">*</span>\n            </Label>\n            <Select onValueChange={(value) => setValue(\"category\", value)} defaultValue=\"general\">\n              <SelectTrigger className=\"w-full border-border/50 bg-card focus:border-primary/50\">\n                <SelectValue placeholder=\"Select a category\" />\n              </SelectTrigger>\n              <SelectContent>\n                {categories.map((category: any) => (\n                  <SelectItem key={category.category_id} value={category.category_id}>\n                    <div className=\"flex items-center space-x-2\">\n                      <span>{category.name}</span>\n                    </div>\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n            {errors.category && (\n              <p className=\"mt-1 text-xs text-red-600\">{errors.category.message}</p>\n            )}\n          </div>\n\n          {/* Priority Field */}\n          <div>\n            <Label\n              htmlFor=\"priority\"\n              className=\"text-sm font-medium text-foreground mb-1.5 block\"\n            >\n              Priority<span className=\"text-red-500\">*</span>\n            </Label>\n            <Select onValueChange={(value) => setValue(\"priority\", value)} defaultValue=\"medium\">\n              <SelectTrigger className=\"w-full border-border/50 bg-card focus:border-primary/50\">\n                <SelectValue placeholder=\"Select priority level\" />\n              </SelectTrigger>\n              <SelectContent>\n                {priorityOptions.map((option) => (\n                  <SelectItem key={option.value} value={option.value}>\n                    <div className=\"flex items-center space-x-2\">\n                      <AlertCircle className={`h-4 w-4 ${option.color}`} />\n                      <span>{option.label}</span>\n                    </div>\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n            {errors.priority && (\n              <p className=\"mt-1 text-xs text-red-600\">{errors.priority.message}</p>\n            )}\n          </div>\n\n          {/* Tags Field */}\n          <div>\n            <Label\n              htmlFor=\"tags\"\n              className=\"text-sm font-medium text-foreground mb-1.5 block\"\n            >\n              Tags (Optional)\n            </Label>\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"relative flex-1\">\n                  <Tag className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                  <Input\n                    value={tagInput}\n                    onChange={(e) => setTagInput(e.target.value)}\n                    onKeyDown={handleTagKeyDown}\n                    placeholder=\"Add tags (press Enter or comma to add)\"\n                    className=\"w-full pl-10 border-border/50 bg-card focus:border-primary/50 focus:ring-primary/20\"\n                  />\n                </div>\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={addTag}\n                  disabled={!tagInput.trim()}\n                >\n                  Add\n                </Button>\n              </div>\n              {tags.length > 0 && (\n                <div className=\"flex flex-wrap gap-2\">\n                  {tags.map((tag, index) => (\n                    <span\n                      key={index}\n                      className=\"inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-primary/10 text-primary border border-primary/20\"\n                    >\n                      {tag}\n                      <button\n                        type=\"button\"\n                        onClick={() => removeTag(tag)}\n                        className=\"ml-1 text-primary/60 hover:text-primary\"\n                      >\n                        ×\n                      </button>\n                    </span>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* File Attachment */}\n          <div>\n            <Label className=\"text-sm font-medium text-foreground mb-1.5 block\">\n              Attachments (Optional)\n            </Label>\n            <div\n              onClick={handleAttachmentClick}\n              className=\"border-2 border-dashed border-border/50 rounded-lg p-4 text-center cursor-pointer hover:border-primary/50 transition-colors\"\n            >\n              <Paperclip className=\"h-8 w-8 text-muted-foreground mx-auto mb-2\" />\n              <p className=\"text-sm text-muted-foreground\">\n                Click to attach files or drag and drop\n              </p>\n              <p className=\"text-xs text-muted-foreground mt-1\">\n                Supported formats: PDF, DOC, DOCX, TXT, PNG, JPG (Max 10MB)\n              </p>\n            </div>\n            <input\n              ref={fileInputRef}\n              type=\"file\"\n              multiple\n              accept=\".pdf,.doc,.docx,.txt,.png,.jpg,.jpeg\"\n              className=\"hidden\"\n              onChange={(e) => {\n                // Handle file upload logic here\n                console.log(\"Files selected:\", e.target.files);\n              }}\n            />\n          </div>\n        </div>\n\n        {/* Form Actions */}\n        <div className=\"flex items-center justify-end space-x-3 pt-4 border-t border-border/50\">\n          <SheetClose asChild>\n            <Button\n              ref={sheetCloseRef}\n              type=\"button\"\n              variant=\"outline\"\n              className=\"border-border/50 hover:bg-secondary/80\"\n            >\n              Cancel\n            </Button>\n          </SheetClose>\n          <Button\n            type=\"submit\"\n            disabled={isSubmitting || createTicketMutation.isPending}\n            className=\"bg-primary hover:bg-primary/90 text-primary-foreground\"\n          >\n            {isSubmitting || createTicketMutation.isPending ? (\n              <>\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                Creating...\n              </>\n            ) : (\n              <>\n                <MessageCircleQuestion className=\"h-4 w-4 mr-2\" />\n                Create Ticket\n              </>\n            )}\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  MessageCircleQuestion,\n  MoreHorizontal,\n  Calendar,\n  Clock,\n  MessageSquare,\n  Tag,\n} from \"lucide-react\";\nimport { SupportTicket } from \"@/api/services/support/supportService\";\n\ninterface Action {\n  label: string;\n  icon: React.ReactNode;\n  onClick: (item: SupportTicket) => void;\n  variant?: \"default\" | \"destructive\";\n}\n\ninterface SupportTicketGridProps {\n  data: SupportTicket[];\n  onItemClick: (item: SupportTicket) => void;\n  actions: Action[];\n  getStatusBadgeVariant: (status: string) => string;\n  getPriorityBadgeVariant: (priority: string) => string;\n  getCategoryBadgeVariant: (category: string) => string;\n  getStatusIcon: (status: string) => React.ReactNode;\n  formatDate: (dateString: string) => string;\n  isSuperAdmin?: boolean;\n  onStatusUpdate?: (ticketId: string, status: string) => void;\n  isUpdatingStatus?: boolean;\n}\n\nconst SupportTicketGrid: React.FC<SupportTicketGridProps> = ({\n  data,\n  onItemClick,\n  actions,\n  getStatusBadgeVariant,\n  getPriorityBadgeVariant,\n  getCategoryBadgeVariant,\n  getStatusIcon,\n  formatDate,\n  isSuperAdmin = false,\n  onStatusUpdate,\n  isUpdatingStatus = false,\n}) => {\n  const truncateText = (text: string, maxLength: number) => {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength) + \"...\";\n  };\n\n  const formatTicketId = (ticketId: string) => {\n    return `#${ticketId.slice(-8).toUpperCase()}`;\n  };\n\n  // Status dropdown component for super admin\n  const StatusDropdown = ({ ticket }: { ticket: SupportTicket }) => {\n    const getAvailableStatuses = (currentStatus: string) => {\n      const allStatuses = [\n        { value: \"open\", label: \"Open\", disabled: false },\n        { value: \"in_progress\", label: \"Under Process\", disabled: false },\n        { value: \"waiting_response\", label: \"Waiting Response\", disabled: false },\n        { value: \"resolved\", label: \"Complete\", disabled: false },\n        { value: \"closed\", label: \"Closed\", disabled: false },\n      ];\n\n      // Filter out current status from dropdown options\n      return allStatuses.filter(status => status.value !== currentStatus);\n    };\n\n    return (\n      <DropdownMenu>\n        <DropdownMenuTrigger asChild>\n          <div className=\"cursor-pointer\" onClick={(e) => e.stopPropagation()}>\n            <Badge variant={getStatusBadgeVariant(ticket.status) as any} className=\"flex items-center gap-1\">\n              {getStatusIcon(ticket.status)}\n              {ticket.status === \"in_progress\" ? \"Under Process\" :\n               ticket.status === \"resolved\" ? \"Complete\" :\n               ticket.status.replace('_', ' ')}\n            </Badge>\n          </div>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent align=\"start\" className=\"w-48\">\n          {getAvailableStatuses(ticket.status).map((status) => (\n            <DropdownMenuItem\n              key={status.value}\n              onClick={(e) => {\n                e.stopPropagation();\n                onStatusUpdate?.(ticket.ticket_id, status.value);\n              }}\n              disabled={isUpdatingStatus}\n              className=\"cursor-pointer\"\n            >\n              <div className=\"flex items-center gap-2\">\n                {getStatusIcon(status.value)}\n                <span>{status.label}</span>\n              </div>\n            </DropdownMenuItem>\n          ))}\n        </DropdownMenuContent>\n      </DropdownMenu>\n    );\n  };\n\n  if (data.length === 0) {\n    return (\n      <div className=\"text-center p-8\">\n        <div className=\"h-16 w-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n          <MessageCircleQuestion className=\"h-8 w-8 text-primary\" />\n        </div>\n        <h3 className=\"text-lg font-medium mb-1\">No support tickets found</h3>\n        <p className=\"text-gray-500 mb-4\">\n          Get started by creating your first support ticket\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      {data.map((ticket) => (\n        <div\n          key={ticket.id}\n          className=\"bg-card border border-border/50 rounded-lg p-6 hover:shadow-md transition-all duration-200 cursor-pointer group\"\n          onClick={() => onItemClick(ticket)}\n        >\n          {/* Header */}\n          <div className=\"flex items-start justify-between mb-4\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"h-10 w-10 bg-gradient-to-br from-primary/20 to-primary/10 rounded-lg flex items-center justify-center\">\n                <MessageCircleQuestion className=\"h-5 w-5 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-foreground line-clamp-1\">\n                  {truncateText(ticket.title, 30)}\n                </h3>\n                <p className=\"text-xs text-muted-foreground\">\n                  {formatTicketId(ticket.ticket_id)}\n                </p>\n              </div>\n            </div>\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"h-8 w-8 p-0 opacity-0 group-hover:opacity-100 transition-opacity\"\n                  onClick={(e) => e.stopPropagation()}\n                >\n                  <MoreHorizontal className=\"h-4 w-4\" />\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent align=\"end\" className=\"w-48\">\n                {actions.map((action, index) => (\n                  <DropdownMenuItem\n                    key={index}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      action.onClick(ticket);\n                    }}\n                    className={\n                      action.variant === \"destructive\"\n                        ? \"text-red-600 focus:text-red-600\"\n                        : \"\"\n                    }\n                  >\n                    {action.icon}\n                    <span className=\"ml-2\">{action.label}</span>\n                  </DropdownMenuItem>\n                ))}\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </div>\n\n          {/* Description */}\n          <p className=\"text-sm text-muted-foreground mb-4 line-clamp-2\">\n            {truncateText(ticket.description, 100)}\n          </p>\n\n          {/* Status and Priority Badges */}\n          <div className=\"flex items-center space-x-2 mb-4\">\n            {isSuperAdmin ? (\n              <StatusDropdown ticket={ticket} />\n            ) : (\n              <Badge variant={getStatusBadgeVariant(ticket.status) as any} className=\"flex items-center gap-1\">\n                {getStatusIcon(ticket.status)}\n                {ticket.status === \"in_progress\" ? \"Under Process\" :\n                 ticket.status === \"resolved\" ? \"Complete\" :\n                 ticket.status.replace('_', ' ')}\n              </Badge>\n            )}\n            <Badge variant={getPriorityBadgeVariant(ticket.priority) as any}>\n              {ticket.priority.toUpperCase()}\n            </Badge>\n            <Badge variant={getCategoryBadgeVariant(ticket.category) as any}>\n              {ticket.category.replace('_', ' ')}\n            </Badge>\n          </div>\n\n          {/* Tags */}\n          {ticket.tags && ticket.tags.length > 0 && (\n            <div className=\"flex items-center space-x-1 mb-4\">\n              <Tag className=\"h-3 w-3 text-muted-foreground\" />\n              <div className=\"flex flex-wrap gap-1\">\n                {ticket.tags.slice(0, 2).map((tag, index) => (\n                  <span\n                    key={index}\n                    className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-secondary text-secondary-foreground\"\n                  >\n                    {tag}\n                  </span>\n                ))}\n                {ticket.tags.length > 2 && (\n                  <span className=\"text-xs text-muted-foreground\">\n                    +{ticket.tags.length - 2} more\n                  </span>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Footer */}\n          <div className=\"flex items-center justify-between text-xs text-muted-foreground pt-4 border-t border-border/50\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-1\">\n                <MessageSquare className=\"h-3 w-3\" />\n                <span>{ticket.message_count}</span>\n              </div>\n              <div className=\"flex items-center space-x-1\">\n                <Calendar className=\"h-3 w-3\" />\n                <span>{formatDate(ticket.created_at)}</span>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-1\">\n              <Clock className=\"h-3 w-3\" />\n              <span>{formatDate(ticket.updated_at)}</span>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SupportTicketGrid;\n","import React, { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Filter, X, Check } from \"lucide-react\";\n\ninterface FilterState {\n  status?: string;\n  priority?: string;\n  category?: string;\n}\n\ninterface SupportFilterPopoverProps {\n  onFilterChange: (filters: FilterState) => void;\n}\n\nconst SupportFilterPopover: React.FC<SupportFilterPopoverProps> = ({\n  onFilterChange,\n}) => {\n  const [filters, setFilters] = useState<FilterState>({});\n  const [isOpen, setIsOpen] = useState(false);\n\n  const statusOptions = [\n    { value: \"open\", label: \"Open\" },\n    { value: \"in_progress\", label: \"In Progress\" },\n    { value: \"waiting_response\", label: \"Waiting Response\" },\n    { value: \"resolved\", label: \"Resolved\" },\n    { value: \"closed\", label: \"Closed\" },\n  ];\n\n  const priorityOptions = [\n    { value: \"low\", label: \"Low\" },\n    { value: \"medium\", label: \"Medium\" },\n    { value: \"high\", label: \"High\" },\n    { value: \"urgent\", label: \"Urgent\" },\n  ];\n\n  const categoryOptions = [\n    { value: \"technical\", label: \"Technical Support\" },\n    { value: \"billing\", label: \"Billing & Payments\" },\n    { value: \"feature_request\", label: \"Feature Request\" },\n    { value: \"bug_report\", label: \"Bug Report\" },\n    { value: \"general\", label: \"General Inquiry\" },\n  ];\n\n  const handleFilterChange = (key: keyof FilterState, value: string | undefined) => {\n    const newFilters = { ...filters };\n    if (value) {\n      newFilters[key] = value;\n    } else {\n      delete newFilters[key];\n    }\n    setFilters(newFilters);\n  };\n\n  const applyFilters = () => {\n    onFilterChange(filters);\n    setIsOpen(false);\n  };\n\n  const clearFilters = () => {\n    setFilters({});\n    onFilterChange({});\n  };\n\n  const hasActiveFilters = Object.keys(filters).length > 0;\n  const activeFilterCount = Object.keys(filters).length;\n\n  return (\n    <Popover open={isOpen} onOpenChange={setIsOpen}>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"relative border-border/50 hover:bg-secondary/80\"\n        >\n          <Filter className=\"h-4 w-4 mr-2\" />\n          Filters\n          {activeFilterCount > 0 && (\n            <Badge\n              variant=\"secondary\"\n              className=\"ml-2 h-5 w-5 rounded-full p-0 flex items-center justify-center text-xs\"\n            >\n              {activeFilterCount}\n            </Badge>\n          )}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-80 p-4\" align=\"end\">\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <h4 className=\"font-medium text-sm\">Filter Tickets</h4>\n            {hasActiveFilters && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={clearFilters}\n                className=\"h-auto p-1 text-xs text-muted-foreground hover:text-foreground\"\n              >\n                Clear all\n              </Button>\n            )}\n          </div>\n\n          {/* Status Filter */}\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium text-foreground\">Status</label>\n            <Select\n              value={filters.status || \"\"}\n              onValueChange={(value) =>\n                handleFilterChange(\"status\", value === \"all\" ? undefined : value)\n              }\n            >\n              <SelectTrigger className=\"w-full border-border/50 bg-card\">\n                <SelectValue placeholder=\"All statuses\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All statuses</SelectItem>\n                {statusOptions.map((option) => (\n                  <SelectItem key={option.value} value={option.value}>\n                    {option.label}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Priority Filter */}\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium text-foreground\">Priority</label>\n            <Select\n              value={filters.priority || \"\"}\n              onValueChange={(value) =>\n                handleFilterChange(\"priority\", value === \"all\" ? undefined : value)\n              }\n            >\n              <SelectTrigger className=\"w-full border-border/50 bg-card\">\n                <SelectValue placeholder=\"All priorities\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All priorities</SelectItem>\n                {priorityOptions.map((option) => (\n                  <SelectItem key={option.value} value={option.value}>\n                    {option.label}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Category Filter */}\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium text-foreground\">Category</label>\n            <Select\n              value={filters.category || \"\"}\n              onValueChange={(value) =>\n                handleFilterChange(\"category\", value === \"all\" ? undefined : value)\n              }\n            >\n              <SelectTrigger className=\"w-full border-border/50 bg-card\">\n                <SelectValue placeholder=\"All categories\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All categories</SelectItem>\n                {categoryOptions.map((option) => (\n                  <SelectItem key={option.value} value={option.value}>\n                    {option.label}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Active Filters Display */}\n          {hasActiveFilters && (\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium text-foreground\">Active Filters</label>\n              <div className=\"flex flex-wrap gap-2\">\n                {filters.status && (\n                  <Badge variant=\"secondary\" className=\"text-xs\">\n                    Status: {statusOptions.find(opt => opt.value === filters.status)?.label}\n                    <button\n                      onClick={() => handleFilterChange(\"status\", undefined)}\n                      className=\"ml-1 hover:text-foreground\"\n                    >\n                      <X className=\"h-3 w-3\" />\n                    </button>\n                  </Badge>\n                )}\n                {filters.priority && (\n                  <Badge variant=\"secondary\" className=\"text-xs\">\n                    Priority: {priorityOptions.find(opt => opt.value === filters.priority)?.label}\n                    <button\n                      onClick={() => handleFilterChange(\"priority\", undefined)}\n                      className=\"ml-1 hover:text-foreground\"\n                    >\n                      <X className=\"h-3 w-3\" />\n                    </button>\n                  </Badge>\n                )}\n                {filters.category && (\n                  <Badge variant=\"secondary\" className=\"text-xs\">\n                    Category: {categoryOptions.find(opt => opt.value === filters.category)?.label}\n                    <button\n                      onClick={() => handleFilterChange(\"category\", undefined)}\n                      className=\"ml-1 hover:text-foreground\"\n                    >\n                      <X className=\"h-3 w-3\" />\n                    </button>\n                  </Badge>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Action Buttons */}\n          <div className=\"flex items-center justify-end space-x-2 pt-2 border-t border-border/50\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setIsOpen(false)}\n              className=\"border-border/50\"\n            >\n              Cancel\n            </Button>\n            <Button\n              size=\"sm\"\n              onClick={applyFilters}\n              className=\"bg-primary hover:bg-primary/90\"\n            >\n              <Check className=\"h-4 w-4 mr-1\" />\n              Apply\n            </Button>\n          </div>\n        </div>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default SupportFilterPopover;\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ModernTable } from \"@/components/ModernTable\";\r\nimport Header from \"@/components/Header\";\r\nimport Page from \"@/components/Page\";\r\nimport {\r\n  Edit,\r\n  Eye,\r\n  Trash,\r\n  Plus,\r\n  MessageCircleQuestion,\r\n  Clock,\r\n  CheckCircle,\r\n  XCircle,\r\n  AlertCircle,\r\n  Calendar,\r\n  MessageSquare,\r\n  Circle,\r\n} from \"lucide-react\";\r\nimport { AddSupportTicket } from \"./AddSupportTicket\";\r\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { getAllSupportTickets, deleteSupportTicket, updateSupportTicket, SupportTicket } from \"@/api/services/support/supportService\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport SupportTicketGrid from \"@/components/SupportTicketGrid\";\r\nimport SupportFilterPopover from \"@/components/SupportFilterPopover\";\r\nimport { toast } from \"sonner\";\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n} from \"@/components/ui/alert-dialog\";\r\n\r\nimport { useAuth } from \"@/context/AuthContext\";\r\n\r\n// API Response interface\r\ninterface SupportTicketsResponse {\r\n  success: boolean;\r\n  message: string;\r\n  data: SupportTicket[];\r\n  count: number;\r\n  total: number;\r\n  is_super_admin: boolean;\r\n}\r\n\r\nconst Support = () => {\r\n  const navigate = useNavigate();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [debouncedSearch, setDebouncedSearch] = useState(\r\n    searchParams.get(\"search\") || \"\"\r\n  );\r\n  const [searchQuery, setSearchQuery] = useState(debouncedSearch);\r\n  const [viewMode, setViewMode] = useState<\"list\" | \"grid\">(\r\n    searchParams.get(\"view\") === \"grid\" ? \"grid\" : \"list\"\r\n  );\r\n  const [activeFilters, setActiveFilters] = useState<any>({});\r\n  const [deleteTicketId, setDeleteTicketId] = useState<string | null>(null);\r\n  const [isPerformingDemoLogin, setIsPerformingDemoLogin] = useState(false);\r\n  const [hasTriedAutoLogin, setHasTriedAutoLogin] = useState(false);\r\n\r\n  const queryClient = useQueryClient();\r\n  const { login, isLoggedIn } = useAuth();\r\n\r\n\r\n\r\n  // Extract current page from searchParams\r\n  const currentPage = parseInt(searchParams.get(\"page\") || \"1\");\r\n  const itemsPerPage = 10;\r\n\r\n  // Auto-login effect - try demo login if not authenticated\r\n  useEffect(() => {\r\n    if (!isLoggedIn && !hasTriedAutoLogin && !isPerformingDemoLogin) {\r\n      setHasTriedAutoLogin(true);\r\n      \r\n    }\r\n  }, [isLoggedIn, hasTriedAutoLogin, isPerformingDemoLogin]);\r\n\r\n  // Debounce search input\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setDebouncedSearch(searchQuery);\r\n    }, 300);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [searchQuery]);\r\n\r\n  // Update URL when search changes\r\n  useEffect(() => {\r\n    const newParams = new URLSearchParams(searchParams);\r\n    if (debouncedSearch) {\r\n      newParams.set(\"search\", debouncedSearch);\r\n    } else {\r\n      newParams.delete(\"search\");\r\n    }\r\n    newParams.set(\"page\", \"1\"); // Reset to first page when searching\r\n    setSearchParams(newParams);\r\n  }, [debouncedSearch, setSearchParams]);\r\n\r\n  // Fetch support tickets\r\n  const {\r\n    data: ticketsData,\r\n    isLoading,\r\n    error,\r\n    refetch,\r\n  } = useQuery<SupportTicketsResponse>({\r\n    queryKey: [\"supportTickets\", debouncedSearch, activeFilters, currentPage],\r\n    queryFn: () => getAllSupportTickets({\r\n      search: debouncedSearch,\r\n      ...activeFilters,\r\n      page: currentPage,\r\n      limit: itemsPerPage,\r\n    }) as Promise<SupportTicketsResponse>,\r\n    staleTime: 0, // Always consider data stale for immediate updates\r\n    gcTime: 5 * 60 * 1000, // Keep in cache for 5 minutes\r\n    placeholderData: (previousData) => previousData, // Keep previous data while loading\r\n  });\r\n\r\n  // Delete mutation\r\n  const deleteMutation = useMutation({\r\n    mutationFn: deleteSupportTicket,\r\n    onSuccess: () => {\r\n      toast.success(\"Support ticket deleted successfully\");\r\n      queryClient.invalidateQueries({ queryKey: [\"supportTickets\"] });\r\n      setDeleteTicketId(null);\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.message || \"Failed to delete support ticket\");\r\n      setDeleteTicketId(null);\r\n    },\r\n  });\r\n\r\n  // Update status mutation with optimistic updates\r\n  const updateStatusMutation = useMutation({\r\n    mutationFn: ({ ticketId, status }: { ticketId: string; status: string }) =>\r\n      updateSupportTicket(ticketId, { status }),\r\n    onMutate: async ({ ticketId, status }) => {\r\n      console.log(`🔄 Starting optimistic update for ticket ${ticketId} to status ${status}`);\r\n\r\n      // Cancel any outgoing refetches\r\n      await queryClient.cancelQueries({ queryKey: [\"supportTickets\"] });\r\n\r\n      // Snapshot the previous value for rollback\r\n      const previousData = queryClient.getQueriesData({ queryKey: [\"supportTickets\"] });\r\n\r\n      // Get all current queries to see what we're working with\r\n      const allQueries = queryClient.getQueriesData({ queryKey: [\"supportTickets\"] });\r\n      console.log(\"🔍 All support ticket queries:\", allQueries.map(([key]) => key));\r\n\r\n      // Update all support ticket queries optimistically\r\n      queryClient.setQueriesData(\r\n        { queryKey: [\"supportTickets\"] },\r\n        (old: any) => {\r\n          console.log(\"🔍 Processing query data:\", {\r\n            hasData: !!old?.data,\r\n            dataLength: old?.data?.length,\r\n            dataType: typeof old?.data\r\n          });\r\n\r\n          if (!old?.data) {\r\n            console.log(\"❌ No data found for optimistic update\");\r\n            return old;\r\n          }\r\n\r\n          // Find the ticket to update\r\n          const ticketIndex = old.data.findIndex((ticket: SupportTicket) => ticket.ticket_id === ticketId);\r\n          console.log(`🎯 Found ticket at index ${ticketIndex} for ID ${ticketId}`);\r\n\r\n          if (ticketIndex === -1) {\r\n            console.log(\"❌ Ticket not found in current data\");\r\n            return old;\r\n          }\r\n\r\n          console.log(`✅ Optimistically updating ticket ${ticketId} status from ${old.data[ticketIndex].status} to ${status}`);\r\n\r\n          const updatedData = {\r\n            ...old,\r\n            data: old.data.map((ticket: SupportTicket) =>\r\n              ticket.ticket_id === ticketId\r\n                ? {\r\n                    ...ticket,\r\n                    status,\r\n                    updated_at: new Date().toISOString()\r\n                  }\r\n                : ticket\r\n            ),\r\n          };\r\n\r\n          console.log(\"📊 Updated ticket:\", updatedData.data.find((t: SupportTicket) => t.ticket_id === ticketId));\r\n\r\n          return updatedData;\r\n        }\r\n      );\r\n\r\n      return { previousData };\r\n    },\r\n    onSuccess: (data, variables) => {\r\n      console.log(`✅ Status update successful for ticket ${variables.ticketId}`);\r\n      toast.success(\"Ticket status updated successfully\");\r\n\r\n      // Scenario 1: Auto-refresh the list immediately\r\n      queryClient.invalidateQueries({ queryKey: [\"supportTickets\"] });\r\n\r\n      // Force refetch to ensure fresh data\r\n      refetch();\r\n\r\n      // Scenario 2: Navigate to Support page after status update\r\n      setTimeout(() => {\r\n        navigate(\"/support\");\r\n      }, 1500); // Small delay to show the success message and refresh\r\n    },\r\n    onError: (error: any, variables, context) => {\r\n      console.log(`❌ Status update failed for ticket ${variables.ticketId}:`, error);\r\n      toast.error(error.message || \"Failed to update ticket status\");\r\n\r\n      // Rollback optimistic updates\r\n      if (context?.previousData) {\r\n        context.previousData.forEach(([queryKey, data]) => {\r\n          queryClient.setQueryData(queryKey, data);\r\n        });\r\n      }\r\n    },\r\n    onSettled: () => {\r\n      // Always refetch to ensure consistency\r\n      console.log(\"🏁 Mutation settled - refreshing data\");\r\n      queryClient.invalidateQueries({ queryKey: [\"supportTickets\"] });\r\n      refetch();\r\n    },\r\n  });\r\n\r\n  const tickets = ticketsData?.data || [];\r\n  const isSuperAdmin = ticketsData?.is_super_admin || false;\r\n\r\n  const handleSearchChange = (value: string) => {\r\n    setSearchQuery(value);\r\n  };\r\n\r\n  const handleViewModeChange = (mode: \"list\" | \"grid\") => {\r\n    setViewMode(mode);\r\n    const newParams = new URLSearchParams(searchParams);\r\n    newParams.set(\"view\", mode);\r\n    setSearchParams(newParams);\r\n  };\r\n\r\n  const handleFilterChange = (filters: any) => {\r\n    setActiveFilters(filters);\r\n    const newParams = new URLSearchParams(searchParams);\r\n    newParams.set(\"page\", \"1\"); // Reset to first page when filtering\r\n    setSearchParams(newParams);\r\n  };\r\n\r\n  const handleDeleteTicket = (ticketId: string) => {\r\n    setDeleteTicketId(ticketId);\r\n  };\r\n\r\n  const handleStatusUpdate = (ticketId: string, newStatus: string) => {\r\n    console.log(`🚀 Initiating status update for ticket ${ticketId} to ${newStatus}`);\r\n\r\n    // Start the mutation\r\n    updateStatusMutation.mutate({ ticketId, status: newStatus });\r\n\r\n    // Also trigger an immediate refresh to ensure data is fresh\r\n    setTimeout(() => {\r\n      console.log(\"🔄 Triggering immediate refresh after status update\");\r\n      refetch();\r\n    }, 500);\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    if (deleteTicketId) {\r\n      deleteMutation.mutate(deleteTicketId);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"short\",\r\n      day: \"numeric\",\r\n    });\r\n  };\r\n\r\n  // Status display component - Role-based functionality\r\n  const StatusDisplay = ({ ticket }: { ticket: SupportTicket }) => {\r\n    // Regular users see read-only status badge\r\n    if (!isSuperAdmin) {\r\n      return (\r\n        <Badge variant={getStatusBadgeVariant(ticket.status)} className=\"flex items-center gap-1\">\r\n          {getStatusIcon(ticket.status)}\r\n          {ticket.status === \"in_progress\" ? \"Under Process\" :\r\n           ticket.status === \"resolved\" ? \"Complete\" :\r\n           ticket.status.replace('_', ' ')}\r\n        </Badge>\r\n      );\r\n    }\r\n\r\n    // Super admin gets dropdown to change status\r\n    const getAvailableStatuses = (currentStatus: string) => {\r\n      const allStatuses = [\r\n        { value: \"open\", label: \"Open\", disabled: false },\r\n        { value: \"in_progress\", label: \"Under Process\", disabled: false },\r\n        { value: \"waiting_response\", label: \"Waiting Response\", disabled: false },\r\n        { value: \"resolved\", label: \"Complete\", disabled: false },\r\n        { value: \"closed\", label: \"Closed\", disabled: false },\r\n      ];\r\n\r\n      // Filter out current status from dropdown options\r\n      return allStatuses.filter(status => status.value !== currentStatus);\r\n    };\r\n\r\n    return (\r\n      <DropdownMenu>\r\n        <DropdownMenuTrigger asChild>\r\n          <div className=\"cursor-pointer\" onClick={(e) => e.stopPropagation()}>\r\n            <Badge variant={getStatusBadgeVariant(ticket.status)} className=\"flex items-center gap-1\">\r\n              {getStatusIcon(ticket.status)}\r\n              {ticket.status === \"in_progress\" ? \"Under Process\" :\r\n               ticket.status === \"resolved\" ? \"Complete\" :\r\n               ticket.status.replace('_', ' ')}\r\n            </Badge>\r\n          </div>\r\n        </DropdownMenuTrigger>\r\n        <DropdownMenuContent align=\"start\" className=\"w-48\">\r\n          {getAvailableStatuses(ticket.status).map((status) => (\r\n            <DropdownMenuItem\r\n              key={status.value}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                handleStatusUpdate(ticket.ticket_id, status.value);\r\n              }}\r\n              disabled={updateStatusMutation.isPending}\r\n              className=\"cursor-pointer\"\r\n            >\r\n              <div className=\"flex items-center gap-2\">\r\n                {getStatusIcon(status.value)}\r\n                <span>{status.label}</span>\r\n              </div>\r\n            </DropdownMenuItem>\r\n          ))}\r\n        </DropdownMenuContent>\r\n      </DropdownMenu>\r\n    );\r\n  };\r\n\r\n  const getStatusBadgeVariant = (status: string) => {\r\n    switch (status) {\r\n      case \"open\":\r\n        return \"default\";\r\n      case \"in_progress\":\r\n        return \"secondary\";\r\n      case \"waiting_response\":\r\n        return \"outline\";\r\n      case \"resolved\":\r\n        return \"success\";\r\n      case \"closed\":\r\n        return \"destructive\";\r\n      default:\r\n        return \"default\";\r\n    }\r\n  };\r\n\r\n  const getPriorityBadgeVariant = (priority: string) => {\r\n    switch (priority) {\r\n      case \"low\":\r\n        return \"secondary\";\r\n      case \"medium\":\r\n        return \"default\";\r\n      case \"high\":\r\n        return \"destructive\";\r\n      case \"urgent\":\r\n        return \"destructive\";\r\n      default:\r\n        return \"default\";\r\n    }\r\n  };\r\n\r\n  const getCategoryBadgeVariant = (category: string) => {\r\n    switch (category) {\r\n      case \"technical\":\r\n        return \"default\";\r\n      case \"billing\":\r\n        return \"secondary\";\r\n      case \"feature_request\":\r\n        return \"outline\";\r\n      case \"bug_report\":\r\n        return \"destructive\";\r\n      case \"general\":\r\n        return \"secondary\";\r\n      default:\r\n        return \"default\";\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case \"open\":\r\n        return <Circle className=\"h-3 w-3\" />;\r\n      case \"in_progress\":\r\n        return <Clock className=\"h-3 w-3\" />;\r\n      case \"waiting_response\":\r\n        return <AlertCircle className=\"h-3 w-3\" />;\r\n      case \"resolved\":\r\n        return <CheckCircle className=\"h-3 w-3\" />;\r\n      case \"closed\":\r\n        return <XCircle className=\"h-3 w-3\" />;\r\n      default:\r\n        return <Circle className=\"h-3 w-3\" />;\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    const isAuthError = error.message?.includes(\"token\") || error.message?.includes(\"authentication\") || error.message?.includes(\"unauthorized\");\r\n\r\n    return (\r\n      <Page>\r\n        <div className=\"text-center p-8\">\r\n          <div className=\"h-16 w-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n            <XCircle className=\"h-8 w-8 text-red-600\" />\r\n          </div>\r\n          <h3 className=\"text-lg font-medium mb-1\">Error loading support tickets</h3>\r\n          <p className=\"text-gray-500 mb-4\">\r\n            {error.message || \"Something went wrong\"}\r\n          </p>\r\n          <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\r\n            <button\r\n              className=\"bg-primary px-4 py-2 rounded-md text-white hover:bg-primary/90 transition-colors\"\r\n              onClick={() => refetch()}\r\n              disabled={isPerformingDemoLogin}\r\n            >\r\n              Try Again\r\n            </button>\r\n            \r\n          </div>\r\n          {isAuthError && (\r\n            <p className=\"text-sm text-gray-400 mt-3\">\r\n              It looks like you're not authenticated. Try the demo login to access support tickets.\r\n            </p>\r\n          )}\r\n        </div>\r\n      </Page>\r\n    );\r\n  }\r\n\r\n  // Common actions for both list and grid views - Role-based restrictions\r\n  const supportTicketActions: Array<{\r\n    label: string;\r\n    icon: React.ReactNode;\r\n    onClick: (item: SupportTicket) => void;\r\n    variant?: \"default\" | \"destructive\";\r\n  }> = [\r\n    {\r\n      label: \"View Details\",\r\n      icon: <Eye className=\"h-4 w-4\" />,\r\n      onClick: (item: SupportTicket) => {\r\n        navigate(`/support/ticket/${item.ticket_id}`);\r\n      },\r\n    },\r\n    // Only show admin actions to super admins\r\n    ...(isSuperAdmin ? [\r\n      {\r\n        label: \"Edit Ticket\",\r\n        icon: <Edit className=\"h-4 w-4\" />,\r\n        onClick: (item: SupportTicket) => {\r\n          console.log(\"Editing ticket\", item.ticket_id);\r\n        },\r\n      },\r\n      {\r\n        label: \"Delete Ticket\",\r\n        icon: <Trash className=\"h-4 w-4\" />,\r\n        onClick: (item: SupportTicket) => handleDeleteTicket(item.ticket_id),\r\n        variant: \"destructive\" as const,\r\n      },\r\n    ] : []),\r\n  ];\r\n\r\n  return (\r\n    <Page>\r\n      <Header\r\n        title={isSuperAdmin ? \"Support Center\" : \"Support Center\"}\r\n        buttonText=\"New Ticket\"\r\n        filterByName={true}\r\n        filterWord={debouncedSearch}\r\n        onFilterChange={handleSearchChange}\r\n        useSheet={true}\r\n        sheetContent={<AddSupportTicket onTicketCreated={() => {\r\n          // Reset to page 1 to see the new ticket\r\n          setSearchParams(prev => {\r\n            const newParams = new URLSearchParams(prev);\r\n            newParams.set(\"page\", \"1\");\r\n            return newParams;\r\n          });\r\n          // Force refetch\r\n          return refetch();\r\n        }} />}\r\n        sheetSize=\"half\"\r\n        viewMode={viewMode}\r\n        onViewModeChange={handleViewModeChange}\r\n        showViewToggle={true}\r\n        showFilters={false} // We'll use our custom filter component instead\r\n      />\r\n\r\n      \r\n\r\n      <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between mb-4 gap-3\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Badge variant=\"secondary\" className=\"px-3 py-1\">\r\n            <MessageCircleQuestion className=\"h-3 w-3 mr-1\" />\r\n            <span>{tickets.length} Tickets</span>\r\n          </Badge>\r\n          {activeFilters.status && (\r\n            <Badge variant=\"outline\" className=\"px-3 py-1\">\r\n              Status: {activeFilters.status}\r\n            </Badge>\r\n          )}\r\n          {activeFilters.priority && (\r\n            <Badge variant=\"outline\" className=\"px-3 py-1\">\r\n              Priority: {activeFilters.priority}\r\n            </Badge>\r\n          )}\r\n          {activeFilters.category && (\r\n            <Badge variant=\"outline\" className=\"px-3 py-1\">\r\n              Category: {activeFilters.category}\r\n            </Badge>\r\n          )}\r\n        </div>\r\n\r\n        <SupportFilterPopover onFilterChange={handleFilterChange} />\r\n      </div>\r\n\r\n      {viewMode === \"list\" ? (\r\n        <ModernTable<SupportTicket>\r\n          data={tickets}\r\n          isLoading={isLoading}\r\n          isSelectable={true}\r\n          showColumnSelection={true}\r\n          onRowClick={(item) => navigate(`/support/ticket/${item.ticket_id}`)}\r\n          columns={[\r\n            {\r\n              header: \"Ticket\",\r\n              accessor: \"title\",\r\n              className: \"min-w-[300px]\",\r\n              cell: (value: any, item: SupportTicket) => (\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"h-9 w-9 bg-gradient-to-br from-primary/20 to-primary/10 rounded-lg flex items-center justify-center\">\r\n                    <MessageCircleQuestion className=\"h-5 w-5 text-primary\" />\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"font-medium text-gray-900 line-clamp-1\">\r\n                      {String(value)}\r\n                    </div>\r\n                    <div className=\"text-xs text-gray-500\">\r\n                      #{String(item.ticket_id).slice(-8).toUpperCase()}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ),\r\n              sortable: true,\r\n            },\r\n            ...(isSuperAdmin ? [{\r\n              header: \"User\",\r\n              accessor: \"user_email\" as keyof SupportTicket,\r\n              className: \"min-w-[200px]\",\r\n              cell: (value: any, item: SupportTicket) => (\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Avatar className=\"h-8 w-8\">\r\n                    <AvatarFallback className=\"text-xs\">\r\n                      {item.user_first_name?.charAt(0)}{item.user_last_name?.charAt(0)}\r\n                    </AvatarFallback>\r\n                  </Avatar>\r\n                  <div>\r\n                    <div className=\"font-medium text-gray-900 text-sm\">\r\n                      {item.user_first_name} {item.user_last_name}\r\n                    </div>\r\n                    <div className=\"text-xs text-gray-500\">\r\n                      {String(value)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ),\r\n              sortable: true,\r\n            }] : []),\r\n            {\r\n              header: \"Status\",\r\n              accessor: \"status\" as keyof SupportTicket,\r\n              className: \"min-w-[120px]\",\r\n              cell: (value: any, item: SupportTicket) => (\r\n                <StatusDisplay ticket={item} />\r\n              ),\r\n              sortable: true,\r\n            },\r\n            {\r\n              header: \"Priority\",\r\n              accessor: \"priority\" as keyof SupportTicket,\r\n              className: \"min-w-[100px]\",\r\n              cell: (value: any) => (\r\n                <Badge variant={getPriorityBadgeVariant(String(value))}>\r\n                  {String(value).toUpperCase()}\r\n                </Badge>\r\n              ),\r\n              sortable: true,\r\n            },\r\n            {\r\n              header: \"Category\",\r\n              accessor: \"category\" as keyof SupportTicket,\r\n              className: \"min-w-[120px]\",\r\n              cell: (value: any) => (\r\n                <Badge variant={getCategoryBadgeVariant(String(value))}>\r\n                  {String(value).replace('_', ' ')}\r\n                </Badge>\r\n              ),\r\n              sortable: true,\r\n            },\r\n            {\r\n              header: \"Description\",\r\n              accessor: \"description\" as keyof SupportTicket,\r\n              className: \"min-w-[200px]\",\r\n              cell: (value: any) => (\r\n                <div className=\"max-w-xs\">\r\n                  <span className=\"text-sm text-gray-600 line-clamp-2\">\r\n                    {String(value).length > 100 ? `${String(value).substring(0, 100)}...` : String(value)}\r\n                  </span>\r\n                </div>\r\n              ),\r\n              sortable: true,\r\n            },\r\n            {\r\n              header: \"Created\",\r\n              accessor: \"created_at\" as keyof SupportTicket,\r\n              className: \"min-w-[120px]\",\r\n              cell: (value: any) => (\r\n                <div className=\"flex items-center space-x-1\">\r\n                  <Calendar className=\"h-4 w-4 text-gray-400\" />\r\n                  <span className=\"text-sm\">{formatDate(String(value))}</span>\r\n                </div>\r\n              ),\r\n              sortable: true,\r\n            },\r\n            {\r\n              header: \"Updated\",\r\n              accessor: \"updated_at\" as keyof SupportTicket,\r\n              className: \"min-w-[120px]\",\r\n              cell: (value: any) => (\r\n                <div className=\"flex items-center space-x-1\">\r\n                  <Clock className=\"h-4 w-4 text-gray-400\" />\r\n                  <span className=\"text-sm\">{formatDate(String(value))}</span>\r\n                </div>\r\n              ),\r\n              sortable: true,\r\n            },\r\n          ]}\r\n          actions={supportTicketActions}\r\n          emptyState={\r\n            <div className=\"text-center p-8\">\r\n              <div className=\"h-16 w-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                <MessageCircleQuestion className=\"h-8 w-8 text-primary\" />\r\n              </div>\r\n              <h3 className=\"text-lg font-medium mb-1\">No support tickets found</h3>\r\n              <p className=\"text-gray-500 mb-4\">\r\n                Get started by creating your first support ticket\r\n              </p>\r\n              {/* <button\r\n                className=\"bg-primary px-4 py-2 rounded-md text-white flex items-center justify-center mx-auto\"\r\n                onClick={() => console.log(\"Create support ticket\")}\r\n              >\r\n                <Plus className=\"h-4 w-4 mr-2\" />\r\n                Create Ticket\r\n              </button> */}\r\n            </div>\r\n          }\r\n        />\r\n      ) : (\r\n        <SupportTicketGrid\r\n          data={tickets}\r\n          onItemClick={(item) => navigate(`/support/ticket/${item.ticket_id}`)}\r\n          actions={supportTicketActions}\r\n          getStatusBadgeVariant={getStatusBadgeVariant}\r\n          getPriorityBadgeVariant={getPriorityBadgeVariant}\r\n          getCategoryBadgeVariant={getCategoryBadgeVariant}\r\n          getStatusIcon={getStatusIcon}\r\n          formatDate={formatDate}\r\n          isSuperAdmin={isSuperAdmin}\r\n          onStatusUpdate={isSuperAdmin ? handleStatusUpdate : undefined}\r\n          isUpdatingStatus={isSuperAdmin ? updateStatusMutation.isPending : false}\r\n        />\r\n      )}\r\n\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <AlertDialog open={!!deleteTicketId} onOpenChange={() => setDeleteTicketId(null)}>\r\n        <AlertDialogContent>\r\n          <AlertDialogHeader>\r\n            <AlertDialogTitle>Delete Support Ticket</AlertDialogTitle>\r\n            <AlertDialogDescription>\r\n              Are you sure you want to delete this support ticket? This action cannot be undone.\r\n            </AlertDialogDescription>\r\n          </AlertDialogHeader>\r\n          <AlertDialogFooter>\r\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\r\n            <AlertDialogAction\r\n              onClick={confirmDelete}\r\n              className=\"bg-red-600 hover:bg-red-700\"\r\n              disabled={deleteMutation.isPending}\r\n            >\r\n              {deleteMutation.isPending ? \"Deleting...\" : \"Delete\"}\r\n            </AlertDialogAction>\r\n          </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialog>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Support;\r\n"],"names":["validationSchema","Yup.object","Yup.string","Yup.array","AddSupportTicket","onTicketCreated","fileInputRef","useRef","sheetCloseRef","tagInput","setTagInput","useState","tags","setTags","queryClient","useQueryClient","categoriesData","useQuery","getSupportCategories","categories","register","handleSubmit","errors","isSubmitting","reset","setValue","watch","useForm","yupResolver","createTicketMutation","useMutation","createSupportTicket","newTicketData","data","variables","toast","result","error","_a","context","queryKey","onSubmit","ticketData","handleTagKeyDown","e","addTag","trimmedTag","newTags","removeTag","tagToRemove","tag","handleAttachmentClick","priorityOptions","jsxs","SheetTitle","jsx","MessageCircleQuestion","SheetDescription","FileText","Label","Input","Textarea","Select","value","SelectTrigger","SelectValue","SelectContent","category","SelectItem","option","AlertCircle","Tag","Button","index","Paperclip","SheetClose","Fragment","SupportTicketGrid","onItemClick","actions","getStatusBadgeVariant","getPriorityBadgeVariant","getCategoryBadgeVariant","getStatusIcon","formatDate","isSuperAdmin","onStatusUpdate","isUpdatingStatus","truncateText","text","maxLength","formatTicketId","ticketId","StatusDropdown","ticket","getAvailableStatuses","currentStatus","status","DropdownMenu","DropdownMenuTrigger","Badge","DropdownMenuContent","DropdownMenuItem","MoreHorizontal","action","MessageSquare","Calendar","Clock","SupportFilterPopover","onFilterChange","filters","setFilters","isOpen","setIsOpen","statusOptions","categoryOptions","handleFilterChange","key","newFilters","applyFilters","clearFilters","hasActiveFilters","activeFilterCount","Popover","PopoverTrigger","Filter","PopoverContent","opt","X","_b","_c","Check","Support","navigate","useNavigate","searchParams","setSearchParams","useSearchParams","debouncedSearch","setDebouncedSearch","searchQuery","setSearchQuery","viewMode","setViewMode","activeFilters","setActiveFilters","deleteTicketId","setDeleteTicketId","isPerformingDemoLogin","setIsPerformingDemoLogin","hasTriedAutoLogin","setHasTriedAutoLogin","login","isLoggedIn","useAuth","currentPage","itemsPerPage","useEffect","timer","newParams","ticketsData","isLoading","refetch","getAllSupportTickets","previousData","deleteMutation","deleteSupportTicket","updateStatusMutation","updateSupportTicket","allQueries","old","ticketIndex","updatedData","t","tickets","handleSearchChange","handleViewModeChange","mode","handleDeleteTicket","handleStatusUpdate","newStatus","confirmDelete","dateString","StatusDisplay","priority","Circle","CheckCircle","XCircle","isAuthError","Page","supportTicketActions","Eye","item","Edit","Trash","Header","prev","ModernTable","Avatar","AvatarFallback","AlertDialog","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction"],"mappings":"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"}