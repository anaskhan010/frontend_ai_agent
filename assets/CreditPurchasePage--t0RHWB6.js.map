{"version":3,"file":"CreditPurchasePage--t0RHWB6.js","sources":["../../src/pages/Credits/CreditPurchasePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { ArrowLeft, Check, CreditCard, Loader2, Star } from 'lucide-react';\nimport { toast } from 'sonner';\nimport axiosInstance from '@/api/axios/axiosInstance';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useNavigate } from 'react-router-dom';\n\nconst stripePromise = loadStripe(import.meta.env.VITE_STRIPE_PUBLISHABLE_KEY);\n\nconst PaymentForm = ({ selectedPackage, onSuccess }) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [processing, setProcessing] = useState(false);\n  const [clientSecret, setClientSecret] = useState('');\n  const [isFreeTrial, setIsFreeTrial] = useState(false);\n\n  useEffect(() => {\n    if (selectedPackage) {\n      createPaymentIntent();\n    }\n  }, [selectedPackage]);\n\n  const createPaymentIntent = async () => {\n    try {\n      const response = await axiosInstance.post('/api/credits/purchase', {\n        packageId: selectedPackage.package_id\n      });\n      setClientSecret(response.data.data.client_secret);\n      setIsFreeTrial(response.data.data.isFreeTrial || false);\n    } catch (error) {\n      console.error('Error creating payment intent:', error);\n      toast.error('Failed to initialize payment');\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!stripe || !elements || !clientSecret) {\n      return;\n    }\n\n    setProcessing(true);\n\n    try {\n      let result;\n\n      if (isFreeTrial) {\n        // Handle free trial with setup intent\n        const cardElement = elements.getElement(CardElement);\n\n        // First create the payment method\n        console.log('🔄 Creating payment method with card element');\n        const { error: pmError, paymentMethod } = await stripe.createPaymentMethod({\n          type: 'card',\n          card: cardElement,\n        });\n\n        if (pmError) {\n          console.error('❌ Payment method creation failed:', pmError);\n          toast.error(pmError.message || 'Card validation failed');\n          setProcessing(false);\n          return;\n        }\n\n        console.log('✅ Payment method created successfully:', paymentMethod.id);\n\n        // Then confirm the setup intent with the payment method ID\n        console.log('🔄 Confirming setup intent with payment method:', paymentMethod.id);\n        result = await stripe.confirmSetup({\n          clientSecret,\n          confirmParams: {\n            payment_method: paymentMethod.id\n          },\n          redirect: 'if_required'\n        });\n        console.log('✅ Setup intent confirmation result:', result);\n\n        if (result.error) {\n          console.error('Setup failed:', result.error);\n          toast.error(result.error.message || 'Card verification failed');\n          setProcessing(false);\n        } else if (result.setupIntent.status === 'succeeded') {\n          toast.success('🎉 Free trial activated! $10 worth of credits added to your account.');\n\n          // Trigger global credit balance update\n          window.dispatchEvent(new CustomEvent('creditBalanceUpdate'));\n\n          setTimeout(() => {\n            onSuccess(result.setupIntent);\n          }, 2000);\n        }\n      } else {\n        // Handle regular payment\n        result = await stripe.confirmCardPayment(clientSecret, {\n          payment_method: {\n            card: elements.getElement(CardElement),\n          }\n        });\n\n        if (result.error) {\n          console.error('Payment failed:', result.error);\n          toast.error(result.error.message || 'Payment failed');\n          setProcessing(false);\n        } else if (result.paymentIntent.status === 'succeeded') {\n          toast.success('🎉 Payment successful! Credits added to your account.');\n\n          // Trigger global credit balance update\n          window.dispatchEvent(new CustomEvent('creditBalanceUpdate'));\n\n          setTimeout(() => {\n            onSuccess(result.paymentIntent);\n          }, 2000);\n        }\n      }\n    } catch (error) {\n      console.error('Error processing payment:', error);\n      toast.error('An error occurred while processing your request');\n      setProcessing(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      {/* Card Input Section */}\n      <div className=\"space-y-3\">\n        <label className=\"block text-sm font-medium text-gray-700\">\n          Card Information\n        </label>\n        <div className=\"relative p-4 border-2 border-gray-200 rounded-lg focus-within:border-blue-500 focus-within:ring-2 focus-within:ring-blue-200 transition-all\">\n          {/* Card Brand Icons */}\n          <div className=\"absolute right-3 top-3 flex space-x-1\">\n            <img src=\"https://js.stripe.com/v3/fingerprinted/img/visa-729c05c240c4bdb47b03ac81d9945bfe.svg\" alt=\"Visa\" className=\"h-6 w-auto opacity-60\" />\n            <img src=\"https://js.stripe.com/v3/fingerprinted/img/mastercard-4d8844094130711885b5e41b28c9848f.svg\" alt=\"Mastercard\" className=\"h-6 w-auto opacity-60\" />\n          </div>\n          <CardElement\n            options={{\n              style: {\n                base: {\n                  fontSize: '16px',\n                  color: '#374151',\n                  fontFamily: '\"Inter\", system-ui, sans-serif',\n                  '::placeholder': {\n                    color: '#9CA3AF',\n                  },\n                  iconColor: '#6B7280',\n                },\n                invalid: {\n                  color: '#EF4444',\n                  iconColor: '#EF4444',\n                },\n              },\n              hidePostalCode: false,\n              disableLink: true, // This removes the \"Autofill Link\"\n            }}\n          />\n        </div>\n      </div>\n\n      {/* Action Button */}\n      <Button\n        type=\"submit\"\n        disabled={!stripe || processing}\n        className=\"w-full h-12 bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\n      >\n        {processing ? (\n          <>\n            <Loader2 className=\"h-5 w-5 mr-2 animate-spin\" />\n            {isFreeTrial ? 'Verifying Card...' : 'Processing Payment...'}\n          </>\n        ) : (\n          <>\n            <CreditCard className=\"h-5 w-5 mr-2\" />\n            {isFreeTrial ? 'Claim Free Trial' : `Pay $${selectedPackage?.price_dollars}`}\n          </>\n        )}\n      </Button>\n    </form>\n  );\n};\n\nconst CreditPurchasePage = () => {\n  console.log('🎉 CreditPurchasePage component loaded');\n  const navigate = useNavigate();\n  const [packages, setPackages] = useState([]);\n  const [selectedPackage, setSelectedPackage] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Add early return for testing\n  if (loading && packages.length === 0) {\n    return (\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\n        <div className=\"text-center\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">🎉 Credit Purchase Page Loaded!</h1>\n          <p className=\"text-gray-600\">This page is working correctly.</p>\n          <button\n            onClick={() => navigate('/credits')}\n            className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          >\n            Back to Credits\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  useEffect(() => {\n    fetchPackages();\n  }, []);\n\n  const fetchPackages = async () => {\n    try {\n      const response = await axiosInstance.get('/api/credits/packages');\n      setPackages(response.data.data.packages);\n    } catch (error) {\n      console.error('Error fetching packages:', error);\n      toast.error('Failed to load credit packages');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatPrice = (cents) => {\n    return (cents / 100).toFixed(2);\n  };\n\n  const handlePaymentSuccess = () => {\n    // Navigate back to credits page\n    window.location.href = '/credits';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center min-h-[400px]\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-blue-600\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 py-8\">\n      {/* Header */}\n      <div className=\"flex items-center gap-4 mb-8\">\n        <Button\n          variant=\"ghost\"\n          onClick={() => navigate('/credits')}\n          className=\"flex items-center gap-2\"\n        >\n          <ArrowLeft className=\"h-4 w-4\" />\n          Back to Credits\n        </Button>\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Purchase Credits</h1>\n          <p className=\"text-gray-600 mt-1\">Choose a package and complete your purchase</p>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        {/* Package Selection */}\n        <div className=\"space-y-6\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">Select Package</h2>\n          <div className=\"grid grid-cols-1 gap-4\">\n            {packages.map((pkg) => {\n              const isFreeTrial = pkg.package_id === 'free_trial';\n              return (\n                <Card\n                  key={pkg.package_id}\n                  className={`cursor-pointer transition-all hover:shadow-md border-2 ${\n                    selectedPackage?.package_id === pkg.package_id\n                      ? (isFreeTrial ? 'border-green-500 bg-green-50' : 'border-blue-500 bg-blue-50')\n                      : 'border-gray-200 hover:border-gray-300'\n                  } ${pkg.is_popular ? 'ring-1 ring-blue-400' : ''} ${\n                    isFreeTrial ? 'ring-2 ring-green-400 bg-gradient-to-r from-green-50 to-emerald-50' : ''\n                  }`}\n                  onClick={() => setSelectedPackage(pkg)}\n                >\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center gap-2 mb-2\">\n                          <h3 className={`text-lg font-semibold ${isFreeTrial ? 'text-green-800' : 'text-gray-900'}`}>\n                            {pkg.name}\n                          </h3>\n                          {isFreeTrial && (\n                            <Badge className=\"bg-green-500 text-white text-xs font-bold\">\n                              🎉 FREE TRIAL\n                            </Badge>\n                          )}\n                          {pkg.is_popular && !isFreeTrial && (\n                            <Badge className=\"bg-blue-500 text-white text-xs\">\n                              <Star className=\"h-3 w-3 mr-1\" />\n                              Popular\n                            </Badge>\n                          )}\n                        </div>\n                        <div className={`mb-1 ${isFreeTrial ? 'text-green-700' : 'text-gray-600'}`}>\n                          {pkg.total_credits.toLocaleString()} credits\n                        </div>\n                        {isFreeTrial ? (\n                          <div className=\"text-sm text-green-600 font-medium\">\n                            Card required for verification • One-time offer\n                          </div>\n                        ) : (\n                          <div className=\"text-sm text-gray-500\">\n                            ${(pkg.price_cents / 100 / pkg.total_credits).toFixed(4)} per credit\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"text-right\">\n                        <div className={`text-2xl font-bold ${isFreeTrial ? 'text-green-600' : 'text-blue-600'}`}>\n                          {isFreeTrial ? 'FREE' : `$${formatPrice(pkg.price_cents)}`}\n                        </div>\n                        {isFreeTrial && (\n                          <div className=\"text-sm text-green-600 line-through\">\n                            $10.00 value\n                          </div>\n                        )}\n                        {selectedPackage?.package_id === pkg.package_id && (\n                          <Check className={`h-5 w-5 mt-1 ml-auto ${isFreeTrial ? 'text-green-600' : 'text-blue-600'}`} />\n                        )}\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Payment Section */}\n        <div className=\"space-y-6\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">Payment Details</h2>\n          {selectedPackage ? (\n            <div className=\"space-y-6\">\n              {/* Selected Package Summary */}\n              <Card className=\"bg-gray-50 border-gray-200\">\n                <CardContent className=\"p-6\">\n                  <h3 className=\"font-medium text-gray-900 mb-4\">Order Summary</h3>\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"text-gray-600\">{selectedPackage.name}</span>\n                    <span className=\"font-medium\">${formatPrice(selectedPackage.price_cents)}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center mb-4\">\n                    <span className=\"text-gray-600\">Credits</span>\n                    <span className=\"font-medium\">{selectedPackage.total_credits.toLocaleString()}</span>\n                  </div>\n                  <div className=\"border-t pt-4\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-lg font-semibold\">Total</span>\n                      <span className=\"text-xl font-bold text-blue-600\">\n                        ${formatPrice(selectedPackage.price_cents)}\n                      </span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Payment Form */}\n              <Card>\n                <CardContent className=\"p-6\">\n                  <Elements stripe={stripePromise}>\n                    <PaymentForm\n                      selectedPackage={selectedPackage}\n                      onSuccess={handlePaymentSuccess}\n                    />\n                  </Elements>\n                </CardContent>\n              </Card>\n            </div>\n          ) : (\n            <Card>\n              <CardContent className=\"p-12 text-center\">\n                <CreditCard className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\n                <p className=\"text-gray-500\">Select a package to continue with payment</p>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreditPurchasePage;\n"],"names":["stripePromise","loadStripe","PaymentForm","selectedPackage","onSuccess","stripe","useStripe","elements","useElements","processing","setProcessing","useState","clientSecret","setClientSecret","isFreeTrial","setIsFreeTrial","useEffect","createPaymentIntent","response","axiosInstance","error","toast","handleSubmit","event","result","cardElement","CardElement","pmError","paymentMethod","jsxs","jsx","Button","Fragment","Loader2","CreditCard","CreditPurchasePage","navigate","useNavigate","packages","setPackages","setSelectedPackage","loading","setLoading","fetchPackages","formatPrice","cents","handlePaymentSuccess","ArrowLeft","pkg","Card","CardContent","Badge","Star","Check","Elements"],"mappings":"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"}