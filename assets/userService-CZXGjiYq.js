import{d as s,t}from"./index-YNP4OU4_.js";const n=async()=>{try{const r=await s.get("/api/auth/me");if(r.status===200&&r.data.success)return r.data.data;throw new Error("Failed to get current user")}catch(r){return console.error("Error getting current user:",r),r.response&&r.response.data&&r.response.data.message?t.error(r.response.data.message):t.error("Failed to get user information"),null}},c=async r=>{try{const e=await s.put(`/api/users/${r.id}`,r);if(e.status===200)return t.success("Profile updated successfully"),e.data.data;throw new Error("Failed to update profile")}catch(e){return console.error("Error updating profile:",e),e.response&&e.response.data&&e.response.data.message?t.error(e.response.data.message):t.error("Failed to update profile"),null}},u=async()=>{try{const r=await s.get("/api/users/with-roles");if(r.status===200)return r.data;throw new Error("Failed to get users")}catch(r){throw console.error("Error getting users:",r),r}},i=async r=>{try{const e=await s.post("/api/users/create",r);if(e.status===201)return e.data;throw new Error("Failed to create user")}catch(e){throw console.error("Error creating user:",e),e}},d=async(r,e)=>{try{if((await s.put(`/api/users/${r}`,e)).status===200)return{success:!0,message:"User updated successfully"};throw new Error("Failed to update user")}catch(a){throw console.error("Error updating user:",a),a}},p=async r=>{try{const e=await s.delete(`/api/users/${r}`);if(e.status===200)return e.data;throw new Error("Failed to delete user")}catch(e){throw console.error("Error deleting user:",e),e}};export{n as a,c as b,i as c,p as d,u as g,d as u};
//# sourceMappingURL=userService-CZXGjiYq.js.map
