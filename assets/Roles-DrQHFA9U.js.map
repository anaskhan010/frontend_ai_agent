{"version":3,"file":"Roles-DrQHFA9U.js","sources":["../../src/pages/Roles/Roles.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport Page from \"@/components/Page\";\nimport Header from \"@/components/Header\";\n// Removed Loading import - using skeleton loading instead\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Shield, Users, Settings, Plus, Edit, Trash2, Save, RefreshCw, Key, CheckCircle } from \"lucide-react\";\nimport ProtectedRoute from \"@/components/ProtectedRoute\";\nimport PermissionRoute from \"@/components/permissions/PermissionRoute\";\nimport axiosInstance from \"@/api/axios/axiosInstance\";\nimport { toast } from \"sonner\";\n\ninterface Role {\n  id: number;\n  name: string;\n  display_name: string;\n  description: string;\n  is_system_role: boolean;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface Permission {\n  id: number;\n  name: string;\n  display_name: string;\n  description: string;\n  category: string;\n  is_system_permission: boolean;\n}\n\n\n\ninterface RolePermission {\n  permission_id: number;\n  permission_name: string;\n}\n\n\n\n// API Functions\nconst fetchRoles = async (): Promise<Role[]> => {\n  const response = await axiosInstance.get(\"/api/roles\");\n  return response.data;\n};\n\nconst fetchPermissions = async (): Promise<Permission[]> => {\n  const response = await axiosInstance.get(\"/api/permissions\");\n  return response.data.data || response.data;\n};\n\n\n\nconst fetchRolePermissions = async (roleId: number): Promise<RolePermission[]> => {\n  const response = await axiosInstance.get(`/api/role-permissions/role/${roleId}`);\n  return response.data.data || response.data;\n};\n\n\n\nconst Roles: React.FC = () => {\n  const [selectedRole, setSelectedRole] = useState<Role | null>(null);\n  const [selectedPermissions, setSelectedPermissions] = useState<number[]>([]);\n\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const [newRole, setNewRole] = useState({\n    name: \"\",\n    display_name: \"\",\n    description: \"\"\n  });\n\n  const queryClient = useQueryClient();\n\n  // Queries\n  const { data: roles, isLoading: rolesLoading } = useQuery({\n    queryKey: [\"roles\"],\n    queryFn: fetchRoles,\n  });\n\n  const { data: permissions, isLoading: permissionsLoading } = useQuery({\n    queryKey: [\"permissions\"],\n    queryFn: fetchPermissions,\n  });\n\n\n\n  const { data: rolePermissions, isLoading: rolePermissionsLoading } = useQuery({\n    queryKey: [\"rolePermissions\", selectedRole?.id],\n    queryFn: () => fetchRolePermissions(selectedRole!.id),\n    enabled: !!selectedRole,\n  });\n\n\n\n  // Update selected permissions when role changes\n  useEffect(() => {\n    if (rolePermissions) {\n      setSelectedPermissions(rolePermissions.map(rp => rp.permission_id));\n    }\n  }, [rolePermissions]);\n\n\n\n  // Mutations\n  const updateRolePermissionsMutation = useMutation({\n    mutationFn: async ({ roleId, permissionIds }: { roleId: number; permissionIds: number[] }) => {\n      await axiosInstance.post(`/api/role-permissions/role/${roleId}/bulk`, {\n        permission_ids: permissionIds\n      });\n    },\n    onSuccess: () => {\n      toast.success(\"Role permissions updated successfully\");\n      queryClient.invalidateQueries({ queryKey: [\"rolePermissions\"] });\n    },\n    onError: (error: any) => {\n      toast.error(error.response?.data?.message || \"Failed to update permissions\");\n    }\n  });\n\n\n\n  const createRoleMutation = useMutation({\n    mutationFn: async (roleData: { name: string; display_name: string; description: string }) => {\n      const response = await axiosInstance.post(\"/api/roles\", roleData);\n      return response.data;\n    },\n    onSuccess: () => {\n      toast.success(\"Role created successfully\");\n      queryClient.invalidateQueries({ queryKey: [\"roles\"] });\n      setIsCreateDialogOpen(false);\n      setNewRole({ name: \"\", display_name: \"\", description: \"\" });\n    },\n    onError: (error: any) => {\n      toast.error(error.response?.data?.message || \"Failed to create role\");\n    }\n  });\n\n  // Handler functions\n  const handleRoleSelect = (role: Role) => {\n    setSelectedRole(role);\n  };\n\n  const handlePermissionToggle = (permissionId: number) => {\n    setSelectedPermissions(prev =>\n      prev.includes(permissionId)\n        ? prev.filter(id => id !== permissionId)\n        : [...prev, permissionId]\n    );\n  };\n\n\n\n  const handleUpdatePermissions = async () => {\n    if (!selectedRole) return;\n\n    setIsUpdating(true);\n    try {\n      await updateRolePermissionsMutation.mutateAsync({\n        roleId: selectedRole.id,\n        permissionIds: selectedPermissions\n      });\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  const handleCreateRole = () => {\n    createRoleMutation.mutate(newRole);\n  };\n\n  const filteredRoles = roles?.filter(role =>\n    role.display_name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    role.name.toLowerCase().includes(searchQuery.toLowerCase())\n  ) || [];\n\n  // Removed loading screen for better UX\n\n  return (\n    <PermissionRoute requireSuperAdmin>\n      <Page>\n        <Header\n          title=\"Roles & Permissions Management\"\n          buttonText=\"Create Role\"\n          action={() => setIsCreateDialogOpen(true)}\n          filterByName={true}\n          filterWord={searchQuery}\n          onFilterChange={setSearchQuery}\n          useSheet={false}\n          showViewToggle={false}\n          showFilters={false}\n        />\n\n        {/* Split Layout Container */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 h-[calc(100vh-200px)]\">\n          {/* Left Side - Roles List */}\n          <div className=\"lg:col-span-1\">\n            <Card className=\"h-full\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Shield className=\"h-5 w-5\" />\n                  Roles ({filteredRoles.length})\n                </CardTitle>\n                <CardDescription>\n                  Select a role to manage its permissions\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"p-0\">\n                <div className=\"max-h-[calc(100vh-350px)] overflow-y-auto\">\n                  {filteredRoles.map((role) => (\n                    <div\n                      key={role.id}\n                      onClick={() => handleRoleSelect(role)}\n                      className={`p-4 border-b cursor-pointer hover:bg-gray-50 transition-colors ${\n                        selectedRole?.id === role.id ? 'bg-blue-50 border-l-4 border-l-blue-500' : ''\n                      }`}\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <h3 className=\"font-medium\">{role.display_name}</h3>\n                          <p className=\"text-sm text-gray-500\">{role.description}</p>\n                          <div className=\"flex items-center gap-2 mt-1\">\n                            <Badge variant=\"outline\" className=\"text-xs\">\n                              #{role.id}\n                            </Badge>\n                            {role.is_system_role && (\n                              <Badge variant=\"secondary\" className=\"text-xs\">\n                                System\n                              </Badge>\n                            )}\n                          </div>\n                        </div>\n                        {selectedRole?.id === role.id && (\n                          <CheckCircle className=\"h-5 w-5 text-blue-500\" />\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Right Side - Permissions Panel */}\n          <div className=\"lg:col-span-2\">\n            {selectedRole ? (\n              <Card className=\"h-full\">\n                <CardHeader>\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Key className=\"h-5 w-5\" />\n                        Permissions for {selectedRole.display_name}\n                      </CardTitle>\n                      <CardDescription>\n                        Manage permissions for this role\n                      </CardDescription>\n                    </div>\n                    <Button\n                      onClick={handleUpdatePermissions}\n                      disabled={isUpdating}\n                      className=\"flex items-center gap-2\"\n                    >\n                      {isUpdating ? (\n                        <RefreshCw className=\"h-4 w-4 animate-spin\" />\n                      ) : (\n                        <Save className=\"h-4 w-4\" />\n                      )}\n                      {isUpdating ? 'Updating...' : 'Update Permissions'}\n                    </Button>\n                  </div>\n                </CardHeader>\n                <CardContent className=\"space-y-6\">\n                  {/* System Permissions Section */}\n                  <div>\n                    <h3 className=\"text-lg font-medium mb-3 flex items-center gap-2\">\n                      <Key className=\"h-4 w-4\" />\n                      System Permissions\n                    </h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 max-h-60 overflow-y-auto\">\n                      {permissions?.map((permission) => (\n                        <div key={permission.id} className=\"flex items-center space-x-2 p-2 border rounded\">\n                          <Checkbox\n                            id={`permission-${permission.id}`}\n                            checked={selectedPermissions.includes(permission.id)}\n                            onCheckedChange={() => handlePermissionToggle(permission.id)}\n                          />\n                          <div className=\"flex-1\">\n                            <Label\n                              htmlFor={`permission-${permission.id}`}\n                              className=\"text-sm font-medium cursor-pointer\"\n                            >\n                              {permission.display_name}\n                            </Label>\n                            <p className=\"text-xs text-gray-500\">{permission.description}</p>\n                            <Badge variant=\"outline\" className=\"text-xs mt-1\">\n                              {permission.category}\n                            </Badge>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n\n                </CardContent>\n              </Card>\n            ) : (\n              <Card className=\"h-full flex items-center justify-center\">\n                <CardContent className=\"text-center\">\n                  <Shield className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                    Select a Role\n                  </h3>\n                  <p className=\"text-gray-500\">\n                    Choose a role from the left panel to manage its permissions.\n                  </p>\n                </CardContent>\n              </Card>\n            )}\n          </div>\n        </div>\n\n        {/* Create Role Dialog */}\n        <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>Create New Role</DialogTitle>\n              <DialogDescription>\n                Create a new role with custom permissions and access levels.\n              </DialogDescription>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"role-name\">Role Name</Label>\n                <Input\n                  id=\"role-name\"\n                  placeholder=\"e.g., manager\"\n                  value={newRole.name}\n                  onChange={(e) => setNewRole(prev => ({ ...prev, name: e.target.value }))}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"role-display-name\">Display Name</Label>\n                <Input\n                  id=\"role-display-name\"\n                  placeholder=\"e.g., Manager\"\n                  value={newRole.display_name}\n                  onChange={(e) => setNewRole(prev => ({ ...prev, display_name: e.target.value }))}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"role-description\">Description</Label>\n                <Textarea\n                  id=\"role-description\"\n                  placeholder=\"Describe the role's responsibilities...\"\n                  value={newRole.description}\n                  onChange={(e) => setNewRole(prev => ({ ...prev, description: e.target.value }))}\n                />\n              </div>\n              <div className=\"flex justify-end gap-2\">\n                <Button variant=\"outline\" onClick={() => setIsCreateDialogOpen(false)}>\n                  Cancel\n                </Button>\n                <Button\n                  onClick={handleCreateRole}\n                  disabled={!newRole.name || !newRole.display_name || createRoleMutation.isPending}\n                >\n                  {createRoleMutation.isPending ? 'Creating...' : 'Create Role'}\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </Page>\n    </PermissionRoute>\n  );\n};\n\nexport default Roles;\n"],"names":["fetchRoles","axiosInstance","fetchPermissions","response","fetchRolePermissions","roleId","Roles","selectedRole","setSelectedRole","useState","selectedPermissions","setSelectedPermissions","isUpdating","setIsUpdating","searchQuery","setSearchQuery","isCreateDialogOpen","setIsCreateDialogOpen","newRole","setNewRole","queryClient","useQueryClient","roles","rolesLoading","useQuery","permissions","permissionsLoading","rolePermissions","rolePermissionsLoading","useEffect","rp","updateRolePermissionsMutation","useMutation","permissionIds","toast","error","_b","_a","createRoleMutation","roleData","handleRoleSelect","role","handlePermissionToggle","permissionId","prev","id","handleUpdatePermissions","handleCreateRole","filteredRoles","jsx","PermissionRoute","Page","Header","jsxs","Card","CardHeader","CardTitle","Shield","CardDescription","CardContent","Badge","CheckCircle","Key","Button","RefreshCw","Save","permission","Checkbox","Label","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","Input","e","Textarea"],"mappings":"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"}