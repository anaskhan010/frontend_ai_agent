import{d as o,t as n}from"./index-DMttttgJ.js";async function g(s,t){try{return(await o.get("/api/assistant/get_all_assistants",{params:{page:s,search:t}})).data}catch(a){throw console.error("Error fetching agents:",a),n.error("Failed to fetch agents"),a}}async function d(s=""){try{let t=[],a=1,e=1;do{const r=await o.get("/api/assistant/get_all_assistants",{params:{page:a,search:s,limit:50}}),{data:c,totalPages:i}=r.data;t=[...t,...c],e=i,a++}while(a<=e);return{data:t,total:t.length}}catch(t){throw console.error("Error fetching all agents:",t),n.error("Failed to fetch all agents"),t}}async function h(){try{return(await o.get("/api/assistant/list-all-assistants-from-vapi")).data}catch(s){throw console.error("Error fetching agents from VAPI:",s),n.error("Failed to fetch agents from VAPI"),s}}async function u(s=""){try{let t=[],a=1,e=1;do{const r=await o.get("/api/assistant/get-synced-assistants",{params:{page:a,search:s,limit:50}}),{data:c,totalPages:i}=r.data;t=[...t,...c],e=i,a++}while(a<=e);return{data:t,total:t.length}}catch(t){throw console.error("Error fetching all synced agents:",t),n.error("Failed to fetch all synced agents"),t}}async function f(s){try{return(await o.get(`/api/assistant/get-assistants/${s}`)).data}catch(t){throw console.error("Error fetching assistant:",t),n.error("Failed to fetch assistant"),t}}async function p(s){try{return(await o.get(`/api/assistant/get-assistants/${s}`)).data}catch(t){throw console.error("Error fetching VAPI assistant:",t),t}}async function y(s){var t,a;try{const e=await o.post("/api/assistant/create_assistant",s);return n.success("Assistant created successfully"),e.data}catch(e){console.error("Error creating assistant:",e);const r=((a=(t=e.response)==null?void 0:t.data)==null?void 0:a.message)||"Failed to create assistant";throw n.error(r),e}}async function w(s,t){var a,e;try{return(await o.put(`/api/assistant/update-assistant/${s}`,t)).data}catch(r){console.error("Error updating assistant:",r);const c=((e=(a=r.response)==null?void 0:a.data)==null?void 0:e.message)||"Failed to update assistant";throw n.error(c),r}}async function A(s){var t,a;try{console.log("🗑️ Deleting assistant with ID:",s);const e=await o.delete(`/api/assistant/delete-assistant/${s}`);return n.success("Assistant deleted successfully"),e.data}catch(e){console.error("Error deleting assistant:",e);const r=((a=(t=e.response)==null?void 0:t.data)==null?void 0:a.message)||"Failed to delete assistant";throw n.error(r),e}}export{u as a,p as b,y as c,A as d,d as e,g as f,f as g,h,w as u};
//# sourceMappingURL=agentService-DBoSe9hF.js.map
