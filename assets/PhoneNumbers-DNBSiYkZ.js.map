{"version":3,"file":"PhoneNumbers-DNBSiYkZ.js","sources":["../../src/components/PhoneNumbers/CreatePhoneNumberForm.tsx","../../src/pages/PhoneNumbers/PhoneNumbers.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useMutation, useQueryClient, useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Loader2, Phone, Shield, Settings, AlertCircle, ChevronDown, ChevronRight, Bot } from \"lucide-react\";\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"@/components/ui/collapsible\";\nimport { toast } from \"sonner\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { createPhoneNumber } from \"@/api/services/phoneNumbers/phoneNumberService\";\nimport { fetchAllAgentsComplete } from \"@/api/services/agents/agentService\";\nimport { useAuth } from \"@/context/AuthContext\";\nimport { usePermissions } from \"@/context/PermissionContext\";\nimport CreditGuard from \"@/components/Credits/CreditGuard\";\n\ninterface CreatePhoneNumberFormProps {\n  onSuccess?: () => void;\n  onCancel?: () => void;\n}\n\ninterface FormData {\n  provider: string;\n  phoneNumber: string;\n  name: string;\n  assistantId: string;\n  squadId: string;\n  workflowId: string;\n  fallbackDestination: string;\n  serverUrl: string;\n  serverUrlSecret: string;\n  // Provider-specific credentials\n  twilioAccountSid: string;\n  twilioAuthToken: string;\n  vonageApiKey: string;\n  vonageApiSecret: string;\n  telnyxApiKey: string;\n  telnyxApiSecret: string;\n  // VAPI specific\n  areaCode: string;\n}\n\nconst CreatePhoneNumberForm: React.FC<CreatePhoneNumberFormProps> = ({\n  onSuccess,\n  onCancel\n}) => {\n  const { user } = useAuth();\n  const { isSuperAdmin } = usePermissions();\n\n  const [formData, setFormData] = useState<FormData>({\n    provider: \"vapi\", // Default to VAPI\n    phoneNumber: \"\",\n    name: \"\",\n    assistantId: \"\",\n    squadId: \"\",\n    workflowId: \"\",\n    fallbackDestination: \"\",\n    serverUrl: \"\",\n    serverUrlSecret: \"\",\n    twilioAccountSid: \"\",\n    twilioAuthToken: \"\",\n    vonageApiKey: \"\",\n    vonageApiSecret: \"\",\n    telnyxApiKey: \"\",\n    telnyxApiSecret: \"\",\n    areaCode: \"\"\n  });\n\n  const [isAdvancedOpen, setIsAdvancedOpen] = useState(false);\n\n  const queryClient = useQueryClient();\n\n  // Fetch assistants based on user role\n  const { data: assistantsData, isLoading: assistantsLoading } = useQuery({\n    queryKey: [\"assistants\", \"complete\", user?.id],\n    queryFn: () => fetchAllAgentsComplete(\"\"),\n    retry: (failureCount, error: any) => {\n      // Don't retry for expected scenarios (normal for new users)\n      const expectedStatuses = [404, 204, 402]; // 402 = Payment Required (no credits)\n      if (expectedStatuses.includes(error?.response?.status)) {\n        return false;\n      }\n      return failureCount < 1; // Retry once for other errors\n    },\n    enabled: !!user?.id,\n  });\n\n  const assistants = assistantsData?.data || [];\n\n  const createMutation = useMutation({\n    mutationFn: createPhoneNumber,\n    onSuccess: () => {\n      toast.success(\"Phone number created successfully!\");\n      queryClient.invalidateQueries({ queryKey: [\"phoneNumbers\"] });\n      onSuccess?.();\n    },\n    onError: (error: any) => {\n      toast.error(error.response?.data?.message || \"Failed to create phone number\");\n    }\n  });\n\n  const handleInputChange = (field: keyof FormData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const formatPhoneNumber = (phone: string) => {\n    // Simple phone number formatting\n    const cleaned = phone.replace(/\\D/g, '');\n    if (cleaned.length === 10) {\n      return `+1${cleaned}`;\n    } else if (cleaned.length === 11 && cleaned.startsWith('1')) {\n      return `+${cleaned}`;\n    }\n    return phone;\n  };\n\n  const handlePhoneNumberChange = (value: string) => {\n    const formatted = formatPhoneNumber(value);\n    handleInputChange('phoneNumber', formatted);\n  };\n\n  const validateForm = () => {\n    if (!formData.provider) {\n      toast.error(\"Please select a provider\");\n      return false;\n    }\n    if (!formData.phoneNumber) {\n      toast.error(\"Please enter a phone number\");\n      return false;\n    }\n\n    // Validate phone number format (skip for VAPI as it uses area code)\n    if (formData.provider !== 'vapi') {\n      const phoneRegex = /^\\+[1-9]\\d{1,14}$/;\n      if (!phoneRegex.test(formData.phoneNumber)) {\n        toast.error(\"Phone number must be in E.164 format (e.g., +1234567890)\");\n        return false;\n      }\n    } else {\n      // Validate area code for VAPI\n      if (!formData.areaCode || formData.areaCode.length !== 3) {\n        toast.error(\"Please enter a valid 3-digit area code\");\n        return false;\n      }\n    }\n\n    // Validate server URL if provided\n    if (formData.serverUrl) {\n      try {\n        new URL(formData.serverUrl);\n      } catch {\n        toast.error(\"Server URL must be a valid URL\");\n        return false;\n      }\n    }\n\n    // Validate fallback destination JSON if provided\n    if (formData.fallbackDestination) {\n      try {\n        JSON.parse(formData.fallbackDestination);\n      } catch {\n        toast.error(\"Fallback destination must be valid JSON\");\n        return false;\n      }\n    }\n\n    // Provider-specific validation\n    switch (formData.provider) {\n      case 'vapi':\n        // No additional validation needed for VAPI\n        break;\n      case 'twilio':\n        if (!formData.twilioAccountSid || !formData.twilioAuthToken) {\n          toast.error(\"Twilio Account SID and Auth Token are required\");\n          return false;\n        }\n        if (!formData.twilioAccountSid.startsWith('AC')) {\n          toast.error(\"Twilio Account SID should start with 'AC'\");\n          return false;\n        }\n        if (formData.twilioAccountSid.length !== 34) {\n          toast.error(\"Twilio Account SID should be 34 characters long\");\n          return false;\n        }\n        break;\n      case 'vonage':\n        if (!formData.vonageApiKey || !formData.vonageApiSecret) {\n          toast.error(\"Vonage API Key and Secret are required\");\n          return false;\n        }\n        break;\n      case 'telnyx':\n        if (!formData.telnyxApiKey) {\n          toast.error(\"Telnyx API Key is required\");\n          return false;\n        }\n        break;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    // Prepare form data for submission\n    const submitData = {\n      ...formData,\n      assistantId: formData.assistantId === \"unassigned\" ? \"\" : formData.assistantId\n    };\n\n    createMutation.mutate(submitData);\n  };\n\n  const renderProviderCredentials = () => {\n    switch (formData.provider) {\n      case 'vapi':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2 text-sm font-medium\" style={{ color: '#12a594' }}>\n              <Shield className=\"h-4 w-4\" />\n              AI CRUITMENT Free Phone Number\n            </div>\n            <div className=\"rounded-lg p-4 border\" style={{ backgroundColor: '#fafefd', borderColor: '#12a594' }}>\n              <div className=\"flex items-start gap-3\">\n                <div className=\"flex-shrink-0\">\n                  <svg className=\"h-5 w-5\" style={{ color: '#12a594' }} viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n                <div>\n                  <h4 className=\"text-sm font-medium\" style={{ color: '#008071' }}>No credentials required!</h4>\n                  <p className=\"text-sm mt-1\" style={{ color: '#008071' }}>\n                    AI CRUITMENT provides free US phone numbers instantly. Just enter your desired area code and we'll assign you a random number in that area.\n                  </p>\n                  <ul className=\"text-xs mt-2 space-y-1\" style={{ color: '#12a594' }}>\n                    <li>• Up to 10 free numbers per account</li>\n                    <li>• Instant activation (2-3 minutes)</li>\n                    <li>• US numbers only</li>\n                    <li>• No monthly fees</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'twilio':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2 text-sm font-medium text-blue-600\">\n              <Shield className=\"h-4 w-4\" />\n              Twilio Credentials\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"twilioAccountSid\">Account SID *</Label>\n                <Input\n                  id=\"twilioAccountSid\"\n                  type=\"text\"\n                  placeholder=\"ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n                  value={formData.twilioAccountSid}\n                  onChange={(e) => handleInputChange('twilioAccountSid', e.target.value)}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"twilioAuthToken\">Auth Token *</Label>\n                <Input\n                  id=\"twilioAuthToken\"\n                  type=\"password\"\n                  placeholder=\"Your Twilio Auth Token\"\n                  value={formData.twilioAuthToken}\n                  onChange={(e) => handleInputChange('twilioAuthToken', e.target.value)}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'vonage':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2 text-sm font-medium text-orange-600\">\n              <Shield className=\"h-4 w-4\" />\n              Vonage Credentials\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"vonageApiKey\">API Key *</Label>\n                <Input\n                  id=\"vonageApiKey\"\n                  type=\"text\"\n                  placeholder=\"Your Vonage API Key\"\n                  value={formData.vonageApiKey}\n                  onChange={(e) => handleInputChange('vonageApiKey', e.target.value)}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"vonageApiSecret\">API Secret *</Label>\n                <Input\n                  id=\"vonageApiSecret\"\n                  type=\"password\"\n                  placeholder=\"Your Vonage API Secret\"\n                  value={formData.vonageApiSecret}\n                  onChange={(e) => handleInputChange('vonageApiSecret', e.target.value)}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'telnyx':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2 text-sm font-medium text-purple-600\">\n              <Shield className=\"h-4 w-4\" />\n              Telnyx Credentials\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"telnyxApiKey\">API Key *</Label>\n                <Input\n                  id=\"telnyxApiKey\"\n                  type=\"password\"\n                  placeholder=\"Your Telnyx API Key\"\n                  value={formData.telnyxApiKey}\n                  onChange={(e) => handleInputChange('telnyxApiKey', e.target.value)}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"telnyxApiSecret\">API Secret (Optional)</Label>\n                <Input\n                  id=\"telnyxApiSecret\"\n                  type=\"password\"\n                  placeholder=\"Your Telnyx API Secret (if required)\"\n                  value={formData.telnyxApiSecret}\n                  onChange={(e) => handleInputChange('telnyxApiSecret', e.target.value)}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <CreditGuard\n      requiredCredits={1}\n      feature=\"phone number creation\"\n      showUpgradeButton={true}\n    >\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Phone className=\"h-5 w-5 text-blue-600\" />\n            Create Phone Number\n          </CardTitle>\n          <CardDescription>\n            Get a free AI CRUITMENT phone number.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          {/* Provider Selection */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"provider\">Provider *</Label>\n            <Select value={formData.provider} onValueChange={(value) => handleInputChange('provider', value)}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select a provider\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"vapi\" className=\"font-medium\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 rounded-full\" style={{ backgroundColor: '#12a594' }}></div>\n                    AI CRUITMENT (Free US Number)\n                  </div>\n                </SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Basic Information */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {formData.provider === 'vapi' ? (\n              <div>\n                <Label htmlFor=\"areaCode\" className=\"flex items-center gap-2\">\n                  Area Code *\n                  <span className=\"text-xs px-2 py-0.5 rounded-full text-white font-medium\" style={{ backgroundColor: '#12a594' }}>\n                    Free\n                  </span>\n                </Label>\n                <div className=\"relative\">\n                  <Input\n                    id=\"areaCode\"\n                    type=\"text\"\n                    placeholder=\"000\"\n                    value={formData.areaCode}\n                    onChange={(e) => {\n                      const value = e.target.value.replace(/\\D/g, '').slice(0, 3);\n                      handleInputChange('areaCode', value);\n                      handleInputChange('phoneNumber', value); // Use area code as phone number for backend\n                    }}\n                    className=\"font-mono text-lg text-center border-2 focus:border-[#12a594] focus:ring-[#12a594]\"\n                    style={{ borderColor: formData.areaCode ? '#12a594' : undefined }}\n                    maxLength={3}\n                  />\n                  {formData.areaCode && (\n                    <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                      <svg className=\"h-4 w-4\" style={{ color: '#12a594' }} fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </div>\n                  )}\n                </div>\n                <p className=\"text-xs mt-1\" style={{ color: '#12a594' }}>\n                  Enter a 3-digit US area code (e.g., 415, 212, 310)\n                </p>\n              </div>\n            ) : (\n              <div>\n                <Label htmlFor=\"phoneNumber\">Phone Number *</Label>\n                <Input\n                  id=\"phoneNumber\"\n                  type=\"tel\"\n                  placeholder=\"+1 (555) 123-4567\"\n                  value={formData.phoneNumber}\n                  onChange={(e) => handlePhoneNumberChange(e.target.value)}\n                  className=\"font-mono\"\n                />\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  Enter the phone number in E.164 format\n                </p>\n              </div>\n            )}\n            <div>\n              <Label htmlFor=\"name\">Friendly Name</Label>\n              <Input\n                id=\"name\"\n                type=\"text\"\n                placeholder={formData.provider === 'vapi' ? \"My AI CRUITMENT Number\" : \"My Business Number\"}\n                value={formData.name}\n                onChange={(e) => handleInputChange('name', e.target.value)}\n              />\n            </div>\n          </div>\n\n          {/* Assistant Selection */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"assistantId\" className=\"flex items-center gap-2\">\n              <Bot className=\"h-4 w-4\" />\n              Assistant\n            </Label>\n            <Select value={formData.assistantId} onValueChange={(value) => handleInputChange('assistantId', value)}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select an assistant (optional)\" />\n              </SelectTrigger>\n              <SelectContent>\n                {assistantsLoading ? (\n                  <div className=\"flex items-center justify-center p-2\">\n                    <Loader2 className=\"h-4 w-4 animate-spin\" />\n                    <span className=\"ml-2\">Loading assistants...</span>\n                  </div>\n                ) : assistants.length === 0 ? (\n                  <div className=\"flex items-center justify-center p-2 text-gray-500\">\n                    No assistants available\n                  </div>\n                ) : (\n                  <>\n                    <SelectItem value=\"unassigned\">\n                      <span className=\"text-gray-500\">No assistant assigned</span>\n                    </SelectItem>\n                    {assistants.map((assistant) => (\n                      <SelectItem key={assistant.id} value={assistant.assistant_id || assistant.id}>\n                        <div className=\"flex items-center gap-2\">\n                          <Bot className=\"h-3 w-3\" />\n                          {assistant.name}\n                        </div>\n                      </SelectItem>\n                    ))}\n                  </>\n                )}\n              </SelectContent>\n            </Select>\n            <p className=\"text-xs text-gray-500\">\n              {isSuperAdmin\n                ? \"Super admin can see all assistants\"\n                : \"You can only see your own assistants\"\n              }\n            </p>\n          </div>\n\n          {/* Provider Credentials */}\n          {formData.provider && (\n            <div className=\"border rounded-lg p-4 bg-gray-50\">\n              {renderProviderCredentials()}\n            </div>\n          )}\n\n          {/* Advanced Configuration */}\n          {/* <Collapsible open={isAdvancedOpen} onOpenChange={setIsAdvancedOpen}>\n            <CollapsibleTrigger asChild>\n              <Button\n                variant=\"ghost\"\n                className=\"flex items-center gap-2 text-sm font-medium text-gray-700 hover:text-gray-900 p-0 h-auto\"\n              >\n                {isAdvancedOpen ? (\n                  <ChevronDown className=\"h-4 w-4\" />\n                ) : (\n                  <ChevronRight className=\"h-4 w-4\" />\n                )}\n                <Settings className=\"h-4 w-4\" />\n                Advanced Configuration (Optional)\n              </Button>\n            </CollapsibleTrigger>\n            <CollapsibleContent className=\"space-y-4 mt-4\">\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"squadId\">Squad ID</Label>\n                <Input\n                  id=\"squadId\"\n                  type=\"text\"\n                  placeholder=\"Squad ID to assign\"\n                  value={formData.squadId}\n                  onChange={(e) => handleInputChange('squadId', e.target.value)}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"workflowId\">Workflow ID</Label>\n                <Input\n                  id=\"workflowId\"\n                  type=\"text\"\n                  placeholder=\"Workflow ID to assign\"\n                  value={formData.workflowId}\n                  onChange={(e) => handleInputChange('workflowId', e.target.value)}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"serverUrl\">Server URL</Label>\n                <Input\n                  id=\"serverUrl\"\n                  type=\"url\"\n                  placeholder=\"https://your-server.com/webhook\"\n                  value={formData.serverUrl}\n                  onChange={(e) => handleInputChange('serverUrl', e.target.value)}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"serverUrlSecret\">Server URL Secret</Label>\n                <Input\n                  id=\"serverUrlSecret\"\n                  type=\"password\"\n                  placeholder=\"Webhook secret\"\n                  value={formData.serverUrlSecret}\n                  onChange={(e) => handleInputChange('serverUrlSecret', e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div>\n              <Label htmlFor=\"fallbackDestination\">Fallback Destination</Label>\n              <Textarea\n                id=\"fallbackDestination\"\n                placeholder=\"Fallback destination configuration (JSON)\"\n                value={formData.fallbackDestination}\n                onChange={(e) => handleInputChange('fallbackDestination', e.target.value)}\n                rows={3}\n                className=\"font-mono text-sm\"\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Optional fallback destination for call routing\n              </p>\n            </div>\n            </CollapsibleContent>\n          </Collapsible> */}\n\n          {/* Security Notice */}\n          {formData.provider && formData.provider !== 'vapi' && (\n            <Alert>\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertDescription>\n                Your credentials are securely stored and encrypted. They are only used to authenticate with {formData.provider} for phone number management.\n              </AlertDescription>\n            </Alert>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Action Buttons */}\n      <div className=\"flex justify-end gap-3\">\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          onClick={onCancel}\n          disabled={createMutation.isPending}\n        >\n          Cancel\n        </Button>\n        <Button\n          type=\"submit\"\n          disabled={createMutation.isPending}\n          className=\"min-w-[120px]\"\n          style={formData.provider === 'vapi' ? {\n            backgroundColor: '#12a594',\n            borderColor: '#12a594',\n            color: 'white'\n          } : undefined}\n        >\n          {createMutation.isPending ? (\n            <>\n              <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n              {formData.provider === 'vapi' ? 'Getting Free Number...' : 'Creating...'}\n            </>\n          ) : (\n            <>\n              <Phone className=\"h-4 w-4 mr-2\" />\n              {formData.provider === 'vapi' ? 'Get Free Number' : 'Create Phone Number'}\n            </>\n          )}\n        </Button>\n      </div>\n    </form>\n    </CreditGuard>\n  );\n};\n\nexport default CreatePhoneNumberForm;\n","import React, { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Loader2, Phone, Plus, Search, ShoppingCart, Edit, Trash2 } from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport Page from \"@/components/Page\";\nimport CreatePhoneNumberForm from \"@/components/PhoneNumbers/CreatePhoneNumberForm\";\n\nimport {\n  getAllPhoneNumbers,\n  searchAvailablePhoneNumbers,\n  buyPhoneNumber,\n  updatePhoneNumber,\n  deletePhoneNumber\n} from \"@/api/services/phoneNumbers/phoneNumberService\";\nimport { fetchAllAgents } from \"@/api/services/agents/agentService\";\nimport type { PhoneNumber, AvailablePhoneNumber, PhoneNumberSearchParams } from \"@/api/services/phoneNumbers/phoneNumberService\";\n\nconst PhoneNumbers = () => {\n  const [searchParams, setSearchParams] = useState<PhoneNumberSearchParams>({\n    country: \"US\",\n    limit: 10,\n  });\n  const [selectedNumber, setSelectedNumber] = useState<PhoneNumber | null>(null);\n  const [isSearchDialogOpen, setIsSearchDialogOpen] = useState(false);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const [editForm, setEditForm] = useState({\n    friendlyName: \"\",\n    assistantId: \"\",\n  });\n\n  const queryClient = useQueryClient();\n\n  // Fetch owned phone numbers\n  const { data: phoneNumbersData, isLoading: numbersLoading, error: numbersError } = useQuery({\n    queryKey: [\"phoneNumbers\"],\n    queryFn: () => getAllPhoneNumbers(),\n    retry: 1,\n  });\n\n  // Handle success/error with useEffect\n  React.useEffect(() => {\n    if (phoneNumbersData) {\n      console.log(\"Phone numbers data received:\", phoneNumbersData);\n      if (phoneNumbersData?.data?.length > 0) {\n        console.log(\"First phone number structure:\", phoneNumbersData.data[0]);\n      }\n    }\n  }, [phoneNumbersData]);\n\n  React.useEffect(() => {\n    if (numbersError) {\n      console.error(\"Phone numbers fetch error:\", numbersError);\n    }\n  }, [numbersError]);\n\n  // Fetch available phone numbers for purchase\n  const { data: availableNumbers, isLoading: searchLoading, refetch: searchNumbers } = useQuery({\n    queryKey: [\"phoneNumbers\", \"available\", searchParams],\n    queryFn: () => searchAvailablePhoneNumbers(searchParams),\n    enabled: false,\n  });\n\n  // Fetch assistants for assignment\n  const { data: assistantsData } = useQuery({\n    queryKey: [\"assistants\"],\n    queryFn: () => fetchAllAgents(1, \"\"),\n    retry: 1,\n  });\n\n  // Buy phone number mutation\n  const buyNumberMutation = useMutation({\n    mutationFn: buyPhoneNumber,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"phoneNumbers\"] });\n      toast.success(\"Phone number purchased successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.response?.data?.message || \"Failed to purchase phone number\");\n    },\n  });\n\n  // Update phone number mutation\n  const updateNumberMutation = useMutation({\n    mutationFn: ({ id, data }: { id: string; data: any }) => updatePhoneNumber(id, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"phoneNumbers\"] });\n      setIsEditDialogOpen(false);\n      toast.success(\"Phone number updated successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.response?.data?.message || \"Failed to update phone number\");\n    },\n  });\n\n  // Delete phone number mutation\n  const deleteNumberMutation = useMutation({\n    mutationFn: deletePhoneNumber,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"phoneNumbers\"] });\n      toast.success(\"Phone number deleted successfully\");\n    },\n    onError: (error: any) => {\n      toast.error(error.response?.data?.message || \"Failed to delete phone number\");\n    },\n  });\n\n  const handleSearch = () => {\n    searchNumbers();\n  };\n\n  const handleBuyNumber = (number: AvailablePhoneNumber) => {\n    buyNumberMutation.mutate({\n      number: number.number,\n      friendlyName: number.friendlyName,\n    });\n  };\n\n  const handleEditNumber = (phoneNumber: PhoneNumber) => {\n    setSelectedNumber(phoneNumber);\n    setEditForm({\n      friendlyName: phoneNumber.friendlyName || \"\",\n      assistantId: phoneNumber.assistantId || \"unassigned\",\n    });\n    setIsEditDialogOpen(true);\n  };\n\n  const handleUpdateNumber = () => {\n    if (!selectedNumber) return;\n\n    updateNumberMutation.mutate({\n      id: selectedNumber.id,\n      data: {\n        ...editForm,\n        assistantId: editForm.assistantId === \"unassigned\" ? \"\" : editForm.assistantId,\n      },\n    });\n  };\n\n  const handleDeleteNumber = (id: string) => {\n    if (confirm(\"Are you sure you want to delete this phone number?\")) {\n      deleteNumberMutation.mutate(id);\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    const variants: Record<string, \"default\" | \"secondary\" | \"destructive\" | \"outline\"> = {\n      active: \"default\",\n      inactive: \"secondary\",\n      pending: \"outline\",\n    };\n    return <Badge variant={variants[status] || \"outline\"}>{status}</Badge>;\n  };\n\n  const assistants = assistantsData?.data?.assistants || [];\n\n  if (numbersError) {\n    return (\n      <div className=\"space-y-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Phone Numbers</h1>\n          <p className=\"text-muted-foreground\">\n            Manage your phone numbers and purchase new ones\n          </p>\n        </div>\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"text-center\">\n              <p className=\"text-muted-foreground mb-4\">\n                Unable to connect to the backend API. Please ensure the backend server is running.\n              </p>\n              <Button onClick={() => window.location.reload()}>\n                Retry Connection\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <Page>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold tracking-tight\">Phone Numbers</h1>\n            <p className=\"text-muted-foreground\">\n              Get free AI CRUITMENT phone numbers.\n            </p>\n          </div>\n          <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n            <DialogTrigger asChild>\n              <Button>\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Create Phone Number\n              </Button>\n            </DialogTrigger>\n            <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n              <DialogHeader>\n                <DialogTitle>Create New Phone Number</DialogTitle>\n                <DialogDescription>\n                  Get a free AI CRUITMENT phone number.\n                </DialogDescription>\n              </DialogHeader>\n              <CreatePhoneNumberForm\n                onSuccess={() => setIsCreateDialogOpen(false)}\n                onCancel={() => setIsCreateDialogOpen(false)}\n              />\n            </DialogContent>\n          </Dialog>\n        </div>\n        <Dialog open={isSearchDialogOpen} onOpenChange={setIsSearchDialogOpen}>\n          {/* <DialogTrigger asChild>\n            <Button>\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Buy Number\n            </Button>\n          </DialogTrigger> */}\n          <DialogContent className=\"max-w-4xl\">\n            <DialogHeader>\n              <DialogTitle>Search & Buy Phone Numbers</DialogTitle>\n              <DialogDescription>\n                Search for available phone numbers to purchase\n              </DialogDescription>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div>\n                  <Label htmlFor=\"country\">Country</Label>\n                  <Select\n                    value={searchParams.country}\n                    onValueChange={(value) => setSearchParams(prev => ({ ...prev, country: value }))}\n                  >\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"US\">United States</SelectItem>\n                      <SelectItem value=\"CA\">Canada</SelectItem>\n                      <SelectItem value=\"GB\">United Kingdom</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Label htmlFor=\"areaCode\">Area Code</Label>\n                  <Input\n                    id=\"areaCode\"\n                    value={searchParams.areaCode || \"\"}\n                    onChange={(e) => setSearchParams(prev => ({ ...prev, areaCode: e.target.value }))}\n                    placeholder=\"e.g., 415\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"contains\">Contains</Label>\n                  <Input\n                    id=\"contains\"\n                    value={searchParams.contains || \"\"}\n                    onChange={(e) => setSearchParams(prev => ({ ...prev, contains: e.target.value }))}\n                    placeholder=\"e.g., 1234\"\n                  />\n                </div>\n                <div className=\"flex items-end\">\n                  <Button onClick={handleSearch} disabled={searchLoading} className=\"w-full\">\n                    {searchLoading ? <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" /> : <Search className=\"h-4 w-4 mr-2\" />}\n                    Search\n                  </Button>\n                </div>\n              </div>\n\n              {availableNumbers && (\n                <div className=\"border rounded-lg\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Number</TableHead>\n                        <TableHead>Location</TableHead>\n                        <TableHead>Capabilities</TableHead>\n                        <TableHead>Price/Month</TableHead>\n                        <TableHead>Action</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {availableNumbers.data?.map((number: AvailablePhoneNumber) => (\n                        <TableRow key={number.number}>\n                          <TableCell className=\"font-mono\">{number.number}</TableCell>\n                          <TableCell>\n                            {number.locality && number.region\n                              ? `${number.locality}, ${number.region}`\n                              : number.locality || number.region || \"Unknown Location\"\n                            }\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"flex gap-1\">\n                              {number.capabilities?.voice && <Badge variant=\"outline\">Voice</Badge>}\n                              {number.capabilities?.sms && <Badge variant=\"outline\">SMS</Badge>}\n                              {number.capabilities?.mms && <Badge variant=\"outline\">MMS</Badge>}\n                              {!number.capabilities && <Badge variant=\"outline\">Unknown</Badge>}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            {number.monthlyPrice !== undefined\n                              ? `$${number.monthlyPrice}`\n                              : \"Contact for pricing\"\n                            }\n                          </TableCell>\n                          <TableCell>\n                            <Button\n                              size=\"sm\"\n                              onClick={() => handleBuyNumber(number)}\n                              disabled={buyNumberMutation.isPending}\n                            >\n                              {buyNumberMutation.isPending ? (\n                                <Loader2 className=\"h-3 w-3 mr-1 animate-spin\" />\n                              ) : (\n                                <ShoppingCart className=\"h-3 w-3 mr-1\" />\n                              )}\n                              Buy\n                            </Button>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </div>\n          </DialogContent>\n        </Dialog>\n\n        {/* Phone Numbers List */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Phone className=\"h-5 w-5\" />\n            Your Phone Numbers\n          </CardTitle>\n          <CardDescription>\n            Manage your purchased phone numbers and their assignments\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {numbersLoading ? (\n            <div className=\"flex items-center justify-center h-32\">\n              <Loader2 className=\"h-8 w-8 animate-spin\" />\n            </div>\n          ) : (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Number</TableHead>\n                  <TableHead>Created By</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead>Assigned Assistant</TableHead>\n                  <TableHead>Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {phoneNumbersData?.data?.length === 0 ? (\n                  <TableRow>\n                    <TableCell colSpan={6} className=\"text-center text-muted-foreground\">\n                      No phone numbers found. Purchase your first number to get started.\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  phoneNumbersData?.data?.map((phoneNumber: PhoneNumber) => (\n                    <TableRow key={phoneNumber.id}>\n                      <TableCell className=\"font-mono\">{phoneNumber.number || \"Unknown\"}</TableCell>\n                      <TableCell>\n                        <div className=\"flex flex-col\">\n                          <span className=\"font-medium\">{phoneNumber.created_by || phoneNumber.user_name || \"Unknown User\"}</span>\n                          {phoneNumber.user_email && (\n                            <span className=\"text-xs text-muted-foreground\">{phoneNumber.user_email}</span>\n                          )}\n                        </div>\n                      </TableCell>\n                      <TableCell>{getStatusBadge(phoneNumber.status || \"inactive\")}</TableCell>\n                   \n                      <TableCell>\n                        {phoneNumber.assistantId ? (\n                          <Badge variant=\"secondary\">Assigned</Badge>\n                        ) : (\n                          <Badge variant=\"outline\">Unassigned</Badge>\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex gap-2\">\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => handleEditNumber(phoneNumber)}\n                          >\n                            <Edit className=\"h-3 w-3\" />\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => handleDeleteNumber(phoneNumber.id)}\n                            disabled={deleteNumberMutation.isPending}\n                          >\n                            <Trash2 className=\"h-3 w-3\" />\n                          </Button>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )}\n              </TableBody>\n            </Table>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Edit Dialog */}\n      <Dialog open={isEditDialogOpen} onOpenChange={setIsEditDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Edit Phone Number</DialogTitle>\n            <DialogDescription>\n              Update the phone number settings\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"friendlyName\">Friendly Name</Label>\n              <Input\n                id=\"friendlyName\"\n                value={editForm.friendlyName}\n                onChange={(e) => setEditForm(prev => ({ ...prev, friendlyName: e.target.value }))}\n                placeholder=\"Enter a friendly name...\"\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"assistantId\">Assign to Assistant</Label>\n              <Select\n                value={editForm.assistantId}\n                onValueChange={(value) => setEditForm(prev => ({ ...prev, assistantId: value }))}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select an assistant\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"unassigned\">Unassigned</SelectItem>\n                  {assistants.map((assistant: any) => (\n                    <SelectItem key={assistant.id} value={assistant.id}>\n                      {assistant.name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <Button\n              onClick={handleUpdateNumber}\n              disabled={updateNumberMutation.isPending}\n              className=\"w-full\"\n            >\n              {updateNumberMutation.isPending && <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />}\n              Update Phone Number\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n      </div>\n    </Page>\n  );\n};\n\nexport default PhoneNumbers;\n"],"names":["CreatePhoneNumberForm","onSuccess","onCancel","user","useAuth","isSuperAdmin","usePermissions","formData","setFormData","useState","isAdvancedOpen","setIsAdvancedOpen","queryClient","useQueryClient","assistantsData","assistantsLoading","useQuery","fetchAllAgentsComplete","failureCount","error","_a","assistants","createMutation","useMutation","createPhoneNumber","toast","_b","handleInputChange","field","value","prev","formatPhoneNumber","phone","cleaned","handlePhoneNumberChange","formatted","validateForm","handleSubmit","e","submitData","renderProviderCredentials","jsxs","jsx","Shield","Label","Input","CreditGuard","Card","CardHeader","CardTitle","Phone","CardDescription","CardContent","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Bot","Loader2","Fragment","assistant","Alert","AlertCircle","AlertDescription","Button","PhoneNumbers","searchParams","setSearchParams","selectedNumber","setSelectedNumber","isSearchDialogOpen","setIsSearchDialogOpen","isEditDialogOpen","setIsEditDialogOpen","isCreateDialogOpen","setIsCreateDialogOpen","editForm","setEditForm","phoneNumbersData","numbersLoading","numbersError","getAllPhoneNumbers","React","availableNumbers","searchLoading","searchNumbers","searchAvailablePhoneNumbers","fetchAllAgents","buyNumberMutation","buyPhoneNumber","updateNumberMutation","id","data","updatePhoneNumber","deleteNumberMutation","deletePhoneNumber","handleSearch","handleBuyNumber","number","handleEditNumber","phoneNumber","handleUpdateNumber","handleDeleteNumber","getStatusBadge","status","variants","Badge","Page","Dialog","DialogTrigger","Plus","DialogContent","DialogHeader","DialogTitle","DialogDescription","Search","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","_c","ShoppingCart","_d","Edit","Trash2"],"mappings":"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"}