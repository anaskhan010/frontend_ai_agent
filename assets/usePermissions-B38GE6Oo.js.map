{"version":3,"file":"usePermissions-B38GE6Oo.js","sources":["../../src/hooks/usePermissions.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useAuth } from '@/context/AuthContext';\nimport axiosInstance from '@/api/axios/axiosInstance';\n\ninterface Permission {\n  id: number;\n  name: string;\n  display_name: string;\n  description: string;\n  category: string;\n}\n\ninterface Role {\n  id: number;\n  name: string;\n  display_name: string;\n  description: string;\n  is_system_role: boolean;\n}\n\ninterface PageAccess {\n  page_path: string;\n  page_name: string;\n  description: string;\n}\n\ninterface UsePermissionsReturn {\n  // Permission checking\n  hasPermission: (permissionName: string) => boolean;\n  hasAnyPermission: (permissionNames: string[]) => boolean;\n  hasAllPermissions: (permissionNames: string[]) => boolean;\n  \n  // Role checking\n  hasRole: (roleName: string) => boolean;\n  hasAnyRole: (roleNames: string[]) => boolean;\n  isSuperAdmin: boolean;\n  \n  // Page access checking\n  canAccessPage: (pagePath: string) => boolean;\n  \n  // Data\n  permissions: Permission[];\n  role: Role | null;\n  accessiblePages: PageAccess[];\n  \n  // Loading states\n  loading: boolean;\n  error: string | null;\n  \n  // Refresh function\n  refresh: () => Promise<void>;\n}\n\nexport const usePermissions = (): UsePermissionsReturn => {\n  const { user, isLoggedIn } = useAuth();\n  const [permissions, setPermissions] = useState<Permission[]>([]);\n  const [role, setRole] = useState<Role | null>(null);\n  const [accessiblePages, setAccessiblePages] = useState<PageAccess[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchUserPermissions = async () => {\n    if (!user?.role_id || !isLoggedIn) {\n      setPermissions([]);\n      setRole(null);\n      setAccessiblePages([]);\n      setLoading(false);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Fetch all data in parallel for better performance\n      const [roleResponse, permissionsResponse, pagesResponse] = await Promise.all([\n        axiosInstance.get(`/api/roles/${user.role_id}`),\n        axiosInstance.get(`/api/permissions/user/${user.id}/detailed`),\n        axiosInstance.get('/api/page-permissions/accessible/me')\n      ]);\n\n      // Process responses\n      if (roleResponse.data) {\n        setRole(roleResponse.data);\n      }\n\n      if (permissionsResponse.data.success) {\n        setPermissions(permissionsResponse.data.data || []);\n      }\n\n      if (pagesResponse.data.success) {\n        setAccessiblePages(pagesResponse.data.data || []);\n      }\n\n    } catch (err: any) {\n      console.error('Error fetching permissions:', err);\n      setError(err.response?.data?.message || 'Failed to load permissions');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchUserPermissions();\n  }, [user?.role_id, user?.id, isLoggedIn]);\n\n  // Permission checking functions\n  const hasPermission = (permissionName: string): boolean => {\n    if (!user || !isLoggedIn) return false;\n    \n    // Super admin has all permissions\n    if (isSuperAdmin) return true;\n    \n    return permissions.some(p => p.name === permissionName);\n  };\n\n  const hasAnyPermission = (permissionNames: string[]): boolean => {\n    if (!user || !isLoggedIn) return false;\n    \n    // Super admin has all permissions\n    if (isSuperAdmin) return true;\n    \n    return permissionNames.some(name => hasPermission(name));\n  };\n\n  const hasAllPermissions = (permissionNames: string[]): boolean => {\n    if (!user || !isLoggedIn) return false;\n    \n    // Super admin has all permissions\n    if (isSuperAdmin) return true;\n    \n    return permissionNames.every(name => hasPermission(name));\n  };\n\n  // Role checking functions\n  const hasRole = (roleName: string): boolean => {\n    if (!role) return false;\n    return role.name === roleName;\n  };\n\n  const hasAnyRole = (roleNames: string[]): boolean => {\n    if (!role) return false;\n    return roleNames.includes(role.name);\n  };\n\n  // Super admin check\n  const isSuperAdmin = role?.name === 'super_admin' || user?.role_id === 1;\n\n  // Page access checking\n  const canAccessPage = (pagePath: string): boolean => {\n    if (!user || !isLoggedIn) return false;\n    \n    // Super admin can access all pages\n    if (isSuperAdmin) return true;\n    \n    return accessiblePages.some(page => page.page_path === pagePath);\n  };\n\n  const refresh = async () => {\n    await fetchUserPermissions();\n  };\n\n  return {\n    hasPermission,\n    hasAnyPermission,\n    hasAllPermissions,\n    hasRole,\n    hasAnyRole,\n    isSuperAdmin,\n    canAccessPage,\n    permissions,\n    role,\n    accessiblePages,\n    loading,\n    error,\n    refresh\n  };\n};\n\nexport default usePermissions;\n"],"names":["usePermissions","user","isLoggedIn","useAuth","permissions","setPermissions","useState","role","setRole","accessiblePages","setAccessiblePages","loading","setLoading","error","setError","fetchUserPermissions","roleResponse","permissionsResponse","pagesResponse","axiosInstance","err","_b","_a","useEffect","hasPermission","permissionName","isSuperAdmin","p","hasAnyPermission","permissionNames","name","hasAllPermissions","hasRole","roleName","hasAnyRole","roleNames","pagePath","page"],"mappings":"wFAqDO,MAAMA,EAAiB,IAA4B,CACxD,KAAM,CAAE,KAAAC,EAAM,WAAAC,CAAW,EAAIC,EAAQ,EAC/B,CAACC,EAAaC,CAAc,EAAIC,EAAAA,SAAuB,CAAA,CAAE,EACzD,CAACC,EAAMC,CAAO,EAAIF,EAAAA,SAAsB,IAAI,EAC5C,CAACG,EAAiBC,CAAkB,EAAIJ,EAAAA,SAAuB,CAAA,CAAE,EACjE,CAACK,EAASC,CAAU,EAAIN,EAAAA,SAAS,EAAI,EACrC,CAACO,EAAOC,CAAQ,EAAIR,EAAAA,SAAwB,IAAI,EAEhDS,EAAuB,SAAY,SACvC,GAAI,EAACd,GAAA,MAAAA,EAAM,UAAW,CAACC,EAAY,CACjCG,EAAe,CAAA,CAAE,EACjBG,EAAQ,IAAI,EACZE,EAAmB,CAAA,CAAE,EACrBE,EAAW,EAAK,EAChB,MAAA,CAGE,GAAA,CACFA,EAAW,EAAI,EACfE,EAAS,IAAI,EAGb,KAAM,CAACE,EAAcC,EAAqBC,CAAa,EAAI,MAAM,QAAQ,IAAI,CAC3EC,EAAc,IAAI,cAAclB,EAAK,OAAO,EAAE,EAC9CkB,EAAc,IAAI,yBAAyBlB,EAAK,EAAE,WAAW,EAC7DkB,EAAc,IAAI,qCAAqC,CAAA,CACxD,EAGGH,EAAa,MACfR,EAAQQ,EAAa,IAAI,EAGvBC,EAAoB,KAAK,SAC3BZ,EAAeY,EAAoB,KAAK,MAAQ,CAAA,CAAE,EAGhDC,EAAc,KAAK,SACrBR,EAAmBQ,EAAc,KAAK,MAAQ,CAAA,CAAE,QAG3CE,EAAU,CACT,QAAA,MAAM,8BAA+BA,CAAG,EAChDN,IAASO,GAAAC,EAAAF,EAAI,WAAJ,YAAAE,EAAc,OAAd,YAAAD,EAAoB,UAAW,4BAA4B,CAAA,QACpE,CACAT,EAAW,EAAK,CAAA,CAEpB,EAEAW,EAAAA,UAAU,IAAM,CACOR,EAAA,CAAA,EACpB,CAACd,GAAA,YAAAA,EAAM,QAASA,GAAA,YAAAA,EAAM,GAAIC,CAAU,CAAC,EAGlC,MAAAsB,EAAiBC,GACjB,CAACxB,GAAQ,CAACC,EAAmB,GAG7BwB,EAAqB,GAElBtB,EAAY,KAAUuB,GAAAA,EAAE,OAASF,CAAc,EAGlDG,EAAoBC,GACpB,CAAC5B,GAAQ,CAACC,EAAmB,GAG7BwB,EAAqB,GAElBG,EAAgB,KAAaC,GAAAN,EAAcM,CAAI,CAAC,EAGnDC,EAAqBF,GACrB,CAAC5B,GAAQ,CAACC,EAAmB,GAG7BwB,EAAqB,GAElBG,EAAgB,MAAcC,GAAAN,EAAcM,CAAI,CAAC,EAIpDE,EAAWC,GACV1B,EACEA,EAAK,OAAS0B,EADH,GAIdC,EAAcC,GACb5B,EACE4B,EAAU,SAAS5B,EAAK,IAAI,EADjB,GAKdmB,GAAenB,GAAA,YAAAA,EAAM,QAAS,gBAAiBN,GAAA,YAAAA,EAAM,WAAY,EAgBhE,MAAA,CACL,cAAAuB,EACA,iBAAAI,EACA,kBAAAG,EACA,QAAAC,EACA,WAAAE,EACA,aAAAR,EACA,cApBqBU,GACjB,CAACnC,GAAQ,CAACC,EAAmB,GAG7BwB,EAAqB,GAElBjB,EAAgB,KAAa4B,GAAAA,EAAK,YAAcD,CAAQ,EAe/D,YAAAhC,EACA,KAAAG,EACA,gBAAAE,EACA,QAAAE,EACA,MAAAE,EACA,QAjBc,SAAY,CAC1B,MAAME,EAAqB,CAC7B,CAgBA,CACF"}