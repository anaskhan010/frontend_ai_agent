{"version":3,"file":"Agents-BHv6EEI3.js","sources":["../../src/components/AgentGrid.tsx","../../src/components/FilterPopover.tsx","../../src/pages/Agents/Agents.tsx"],"sourcesContent":["import React from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Circle, MoreHorizontal, Activity, Share2 } from \"lucide-react\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface AgentGridProps {\n  data: any[];\n  onItemClick: (item: any) => void;\n  actions: {\n    label: string;\n    icon: React.ReactNode;\n    onClick: (item: any) => void;\n  }[];\n}\n\nconst AgentGrid: React.FC<AgentGridProps> = ({ data, onItemClick, actions }) => {\n  // Function to get initials from name\n  const getInitials = (name: string) => {\n    return name\n      .split(\" \")\n      .map((part) => part.charAt(0))\n      .join(\"\")\n      .toUpperCase();\n  };\n\n  // Function to get random metrics for demo\n  const getRandomMetric = (min: number, max: number) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mt-6\">\n      {data.map((item) => {\n        // Generate random data for demo\n        const price = `$${(Math.random() * 100).toFixed(2)}`;\n        const sales = getRandomMetric(0, 10000);\n        const revenue = getRandomMetric(0, 2000000);\n        const trend = Math.random() > 0.5 ? \"up\" : \"down\";\n        \n        // Random status\n        const statuses = [\"active\", \"inactive\", \"training\"];\n        const randomStatus = statuses[Math.floor(Math.random() * statuses.length)];\n        const statusColor = \n          randomStatus === \"active\" ? \"text-green-500\" :\n          randomStatus === \"inactive\" ? \"text-gray-400\" : \"text-yellow-500\";\n\n        return (\n          <Card \n            key={item.id} \n            className=\"overflow-hidden border border-gray-200 hover:border-gray-300 hover:shadow-md transition-all cursor-pointer\"\n            onClick={() => onItemClick(item)}\n          >\n            <div className=\"p-4\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <Avatar className=\"h-10 w-10 bg-gradient-to-br from-primary/20 to-primary/10\">\n                    <AvatarFallback className=\"text-primary font-medium\">\n                      {getInitials(String(item.name))}\n                    </AvatarFallback>\n                  </Avatar>\n                  <div>\n                    <div className=\"font-medium text-gray-900\">\n                      {String(item.name)}\n                    </div>\n                    <div className=\"text-xs text-gray-500\">\n                      ID: {String(item.id).substring(0, 8)}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-1\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-8 w-8 p-0 rounded-full hover:bg-gray-100\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      console.log(\"Share\", item);\n                    }}\n                  >\n                    <Share2 className=\"h-4 w-4 text-gray-500\" />\n                  </Button>\n                  <DropdownMenu>\n                    <DropdownMenuTrigger asChild onClick={(e) => e.stopPropagation()}>\n                      <Button\n                        variant=\"ghost\"\n                        className=\"h-8 w-8 p-0 rounded-full hover:bg-gray-100\"\n                      >\n                        <MoreHorizontal className=\"h-4 w-4 text-gray-500\" />\n                      </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent align=\"end\" className=\"w-[160px]\">\n                      {actions.map((action, index) => (\n                        <DropdownMenuItem\n                          key={index}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            action.onClick(item);\n                          }}\n                          className=\"cursor-pointer\"\n                        >\n                          <span className=\"mr-2 h-4 w-4 text-gray-500\">\n                            {action.icon}\n                          </span>\n                          <span>{action.label}</span>\n                        </DropdownMenuItem>\n                      ))}\n                    </DropdownMenuContent>\n                  </DropdownMenu>\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-3 mb-3\">\n                <div className=\"space-y-1\">\n                  <div className=\"text-xs text-gray-500\">Price</div>\n                  <div className=\"font-medium text-gray-900\">{price}</div>\n                </div>\n                <div className=\"space-y-1\">\n                  <div className=\"text-xs text-gray-500\">Status</div>\n                  <div className=\"flex items-center\">\n                    <Circle className={`h-2 w-2 mr-2 fill-current ${statusColor}`} />\n                    <span className=\"capitalize text-gray-700\">{randomStatus}</span>\n                  </div>\n                </div>\n                <div className=\"space-y-1\">\n                  <div className=\"text-xs text-gray-500\">Total Sales</div>\n                  <div className=\"font-medium text-gray-900\">\n                    {sales > 0 ? sales.toLocaleString() : \"—\"}\n                  </div>\n                </div>\n                <div className=\"space-y-1\">\n                  <div className=\"text-xs text-gray-500\">Total Revenue</div>\n                  <div className=\"flex items-center space-x-1\">\n                    <span className=\"font-medium text-gray-900\">\n                      {revenue > 0 ? `$${revenue.toLocaleString()}` : \"—\"}\n                    </span>\n                    {revenue > 0 && (\n                      <Activity className={`h-3 w-3 ${trend === \"up\" ? \"text-green-500\" : \"text-red-500\"}`} />\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Card>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default AgentGrid;\n","import React, { useState } from \"react\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { Button } from \"@/components/ui/button\";\nimport { SlidersHorizontal, Check } from \"lucide-react\";\nimport { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Badge } from \"@/components/ui/badge\";\n\ninterface FilterOption {\n  id: string;\n  label: string;\n}\n\ninterface FilterPopoverProps {\n  onFilterChange: (filters: any) => void;\n}\n\nconst FilterPopover: React.FC<FilterPopoverProps> = ({ onFilterChange }) => {\n  const [open, setOpen] = useState(false);\n  const [activeFilters, setActiveFilters] = useState<string[]>([]);\n  const [statusFilter, setStatusFilter] = useState<string | null>(null);\n  const [priceRange, setPriceRange] = useState([0, 100]);\n  \n  const statusOptions: FilterOption[] = [\n    { id: \"active\", label: \"Active\" },\n    { id: \"inactive\", label: \"Inactive\" },\n    { id: \"training\", label: \"Training\" },\n  ];\n\n  const handleApplyFilters = () => {\n    const filters = {\n      status: statusFilter,\n      priceRange,\n    };\n    \n    // Update active filters for badge display\n    const newActiveFilters = [];\n    if (statusFilter) newActiveFilters.push(`Status: ${statusFilter}`);\n    if (priceRange[0] > 0 || priceRange[1] < 100) \n      newActiveFilters.push(`Price: $${priceRange[0]} - $${priceRange[1]}`);\n    \n    setActiveFilters(newActiveFilters);\n    onFilterChange(filters);\n    setOpen(false);\n  };\n\n  const handleResetFilters = () => {\n    setStatusFilter(null);\n    setPriceRange([0, 100]);\n    setActiveFilters([]);\n    onFilterChange({});\n  };\n\n  const removeFilter = (filter: string) => {\n    const newActiveFilters = activeFilters.filter(f => f !== filter);\n    setActiveFilters(newActiveFilters);\n    \n    // Reset the corresponding filter\n    if (filter.startsWith(\"Status:\")) setStatusFilter(null);\n    if (filter.startsWith(\"Price:\")) setPriceRange([0, 100]);\n    \n    onFilterChange({\n      status: filter.startsWith(\"Status:\") ? null : statusFilter,\n      priceRange: filter.startsWith(\"Price:\") ? [0, 100] : priceRange,\n    });\n  };\n\n  return (\n    <div className=\"relative\">\n      <Popover open={open} onOpenChange={setOpen}>\n        <PopoverTrigger asChild>\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            className={`h-9 border-gray-200 text-gray-700 hover:bg-gray-50 ${activeFilters.length > 0 ? 'border-primary/50 bg-primary/5' : ''}`}\n          >\n            <SlidersHorizontal className=\"h-4 w-4 mr-1\" />\n            Filters\n            {activeFilters.length > 0 && (\n              <span className=\"ml-1 flex h-5 w-5 items-center justify-center rounded-full bg-primary text-[10px] font-medium text-white\">\n                {activeFilters.length}\n              </span>\n            )}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-[280px] p-4\" align=\"end\">\n          <div className=\"space-y-4\">\n            <h4 className=\"font-medium text-sm\">Filter Agents</h4>\n            \n            <div className=\"space-y-2\">\n              <Label className=\"text-xs font-medium\">Status</Label>\n              <RadioGroup \n                value={statusFilter || \"\"} \n                onValueChange={(value) => setStatusFilter(value || null)}\n              >\n                {statusOptions.map((option) => (\n                  <div key={option.id} className=\"flex items-center space-x-2\">\n                    <RadioGroupItem value={option.id} id={`status-${option.id}`} />\n                    <Label htmlFor={`status-${option.id}`} className=\"text-sm font-normal cursor-pointer\">\n                      {option.label}\n                    </Label>\n                  </div>\n                ))}\n              </RadioGroup>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between\">\n                <Label className=\"text-xs font-medium\">Price Range</Label>\n                <span className=\"text-xs text-gray-500\">\n                  ${priceRange[0]} - ${priceRange[1]}\n                </span>\n              </div>\n              <Slider\n                defaultValue={[0, 100]}\n                value={priceRange}\n                max={100}\n                step={1}\n                onValueChange={setPriceRange}\n                className=\"py-2\"\n              />\n            </div>\n            \n            <Separator />\n            \n            <div className=\"flex justify-between\">\n              <Button \n                variant=\"outline\" \n                size=\"sm\" \n                onClick={handleResetFilters}\n                className=\"text-xs h-8\"\n              >\n                Reset\n              </Button>\n              <Button \n                size=\"sm\" \n                onClick={handleApplyFilters}\n                className=\"text-xs h-8 bg-primary\"\n              >\n                Apply Filters\n              </Button>\n            </div>\n          </div>\n        </PopoverContent>\n      </Popover>\n      \n      {/* Active filters display */}\n      {activeFilters.length > 0 && (\n        <div className=\"flex flex-wrap gap-2 mt-2\">\n          {activeFilters.map((filter) => (\n            <Badge \n              key={filter} \n              variant=\"outline\" \n              className=\"px-2 py-1 text-xs bg-primary/5 border-primary/20 text-primary flex items-center gap-1\"\n            >\n              {filter}\n              <button \n                className=\"ml-1 text-primary hover:text-primary/80\"\n                onClick={() => removeFilter(filter)}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                  <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                </svg>\n              </button>\n            </Badge>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FilterPopover;\n","import { ModernTable } from \"@/components/ModernTable\";\r\nimport Header from \"@/components/Header\";\r\nimport Page from \"@/components/Page\";\r\nimport {\r\n  Edit,\r\n  Eye,\r\n  Trash,\r\n  Plus,\r\n  Users,\r\n  Activity,\r\n  Circle,\r\n} from \"lucide-react\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\r\nimport AgentGrid from \"@/components/AgentGrid\";\r\nimport FilterPopover from \"@/components/FilterPopover\";\r\n\r\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\n\r\n// apis\r\nimport { fetchAllAgents, deleteAssistant, getAssistantById } from \"@/api/services/agents/agentService\";\r\nimport { useAuth } from \"@/context/AuthContext\";\r\nimport CustomPagination from \"@/components/CustomPagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\r\n\r\nimport Loading from \"@/Loading\";\r\n\r\nconst Agents = () => {\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  const { user } = useAuth();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [debouncedSearch, setDebouncedSearch] = useState(\r\n    searchParams.get(\"search\") || \"\"\r\n  );\r\n  const [searchQuery, setSearchQuery] = useState(debouncedSearch);\r\n  const [viewMode, setViewMode] = useState<\"list\" | \"grid\">(\r\n    searchParams.get(\"view\") === \"grid\" ? \"grid\" : \"list\"\r\n  );\r\n  const [activeFilters, setActiveFilters] = useState<any>({});\r\n  const [showFilters, setShowFilters] = useState(false);\r\n\r\n  // Extract current page from searchParams\r\n  const currentPage = parseInt(searchParams.get(\"page\") || \"1\");\r\n\r\n  // Delete agent mutation\r\n  const deleteAgentMutation = useMutation({\r\n    mutationFn: deleteAssistant,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: [\"agents\", user?.id] });\r\n    },\r\n  });\r\n\r\n  // Debouncing effect for search\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setSearchQuery(debouncedSearch);\r\n      setSearchParams((prev) => {\r\n        const newParams = new URLSearchParams(prev);\r\n        if (debouncedSearch) {\r\n          newParams.set(\"search\", debouncedSearch);\r\n        } else {\r\n          newParams.delete(\"search\");\r\n        }\r\n        return newParams;\r\n      });\r\n    }, 500); // Reduced debounce time for better UX\r\n\r\n    return () => clearTimeout(handler);\r\n  }, [debouncedSearch, setSearchParams]);\r\n\r\n  // Update URL when view mode changes\r\n  useEffect(() => {\r\n    setSearchParams((prev) => {\r\n      const newParams = new URLSearchParams(prev);\r\n      if (viewMode === \"grid\") {\r\n        newParams.set(\"view\", \"grid\");\r\n      } else {\r\n        newParams.delete(\"view\");\r\n      }\r\n      return newParams;\r\n    });\r\n  }, [viewMode, setSearchParams]);\r\n\r\n  const { data, isLoading, error } = useQuery({\r\n    queryKey: [\"agents\", user?.id, currentPage, searchQuery, activeFilters],\r\n    queryFn: () => fetchAllAgents(currentPage, searchQuery),\r\n    enabled: !!user?.id, // Only fetch when user is authenticated\r\n    retry: (failureCount, error: any) => {\r\n      // Don't retry for expected scenarios (normal for new users)\r\n      const expectedStatuses = [404, 204, 402]; // 402 = Payment Required (no credits)\r\n      if (expectedStatuses.includes(error?.response?.status)) {\r\n        return false;\r\n      }\r\n      return failureCount < 2; // Retry up to 2 times for other errors\r\n    },\r\n  });\r\n\r\n  if (isLoading) return <Loading />;\r\n\r\n  if (error) {\r\n    console.error(\"Error fetching agents\", error);\r\n    return <div>Error loading agents</div>;\r\n  }\r\n\r\n  // Filter data based on activeFilters\r\n  let filteredData = [...data.data];\r\n  if (activeFilters.status) {\r\n    // This is just for demo - in a real app, you'd filter based on actual data\r\n    filteredData = filteredData.filter((_, index) => {\r\n      const statuses = [\"active\", \"inactive\", \"training\"];\r\n      const randomStatus = statuses[index % statuses.length];\r\n      return randomStatus === activeFilters.status;\r\n    });\r\n  }\r\n\r\n  const handlePageChange = (page: number) => {\r\n    setSearchParams((prev) => {\r\n      const newParams = new URLSearchParams(prev);\r\n      newParams.set(\"page\", page.toString());\r\n      return newParams;\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (value: string) => {\r\n    setDebouncedSearch(value);\r\n  };\r\n\r\n  const handleViewModeChange = (mode: \"list\" | \"grid\") => {\r\n    setViewMode(mode);\r\n  };\r\n\r\n  const handleFilterChange = (filters: any) => {\r\n    setActiveFilters(filters);\r\n    setShowFilters(\r\n      Object.keys(filters).some(\r\n        (key) =>\r\n          filters[key] !== null &&\r\n          (typeof filters[key] !== \"object\" ||\r\n            (Array.isArray(filters[key]) &&\r\n              (filters[key][0] > 0 || filters[key][1] < 100)))\r\n      )\r\n    );\r\n  };\r\n\r\n  // Function to get initials from name\r\n  const getInitials = (name: string) => {\r\n    return name\r\n      .split(\" \")\r\n      .map((part) => part.charAt(0))\r\n      .join(\"\")\r\n      .toUpperCase();\r\n  };\r\n\r\n\r\n\r\n  // Function to get random metrics for demo\r\n  const getRandomMetric = (min: number, max: number) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n  // Handle agent actions\r\n  const handleViewAgent = async (agent: any) => {\r\n    try {\r\n      const agentDetails = await getAssistantById(agent.id);\r\n      console.log(\"Agent details:\", agentDetails);\r\n      // You could open a modal or navigate to a details page here\r\n    } catch (error) {\r\n      console.error(\"Error fetching agent details:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditAgent = (agent: any) => {\r\n    navigate(`/agents/edit/${agent.id}`);\r\n  };\r\n\r\n  const handleDeleteAgent = async (agent: any) => {\r\n    if (confirm(`Are you sure you want to delete \"${agent.name}\"?`)) {\r\n      try {\r\n        await deleteAgentMutation.mutateAsync(agent.id);\r\n      } catch (error) {\r\n        console.error(\"Error deleting agent:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Common actions for both list and grid views\r\n  const agentActions = [\r\n    {\r\n      label: \"View Details\",\r\n      icon: <Eye className=\"h-4 w-4\" />,\r\n      onClick: handleViewAgent,\r\n    },\r\n    {\r\n      label: \"Edit Agent\",\r\n      icon: <Edit className=\"h-4 w-4\" />,\r\n      onClick: handleEditAgent,\r\n    },\r\n    {\r\n      label: \"Delete Agent\",\r\n      icon: <Trash className=\"h-4 w-4\" />,\r\n      onClick: handleDeleteAgent,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Page>\r\n      <Header\r\n        title=\"Voice AI Agents\"\r\n        buttonText=\"Agent\"\r\n        action={() => navigate(\"/agents/add\")}\r\n        filterByName={true}\r\n        filterWord={debouncedSearch}\r\n        onFilterChange={handleSearchChange}\r\n        useSheet={false}\r\n        viewMode={viewMode}\r\n        onViewModeChange={handleViewModeChange}\r\n        showViewToggle={true}\r\n        showFilters={false} // We'll use our custom filter component instead\r\n      />\r\n\r\n      <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between mb-4 gap-3\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Badge variant=\"secondary\" className=\"px-3 py-1\">\r\n            <Users className=\"h-3 w-3 mr-1\" />\r\n            <span>{filteredData.length || 0} Agents</span>\r\n          </Badge>\r\n        </div>\r\n\r\n        <FilterPopover onFilterChange={handleFilterChange} />\r\n      </div>\r\n\r\n      {showFilters && (\r\n        <div className=\"mb-4\">\r\n          {/* Active filters will be displayed by the FilterPopover component */}\r\n        </div>\r\n      )}\r\n\r\n      {viewMode === \"list\" ? (\r\n        <div className=\"w-full overflow-x-auto\">\r\n          \r\n          <ModernTable\r\n            data={filteredData}\r\n            isLoading={isLoading}\r\n            isSelectable={true}\r\n            showColumnSelection={true}\r\n            onRowClick={(item) => console.log(\"Row clicked\", item)}\r\n            columns={[\r\n              {\r\n                header: \"Name\",\r\n                accessor: \"name\",\r\n                className: \"min-w-[200px]\",\r\n                cell: (value, item) => (\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <Avatar className=\"h-9 w-9 bg-gradient-to-br from-primary/20 to-primary/10\">\r\n                      <AvatarFallback className=\"text-primary font-medium\">\r\n                        {getInitials(String(value))}\r\n                      </AvatarFallback>\r\n                    </Avatar>\r\n                    <div>\r\n                      <div className=\"font-medium text-gray-900\">\r\n                        {String(value)}\r\n                      </div>\r\n                      <div className=\"text-xs text-gray-500\">\r\n                        ID: {String(item.id).substring(0, 8)}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ),\r\n                sortable: true,\r\n              },\r\n              {\r\n                header: \"Price\",\r\n                accessor: \"id\", // Using id as a placeholder\r\n                className: \"min-w-[120px]\",\r\n                cell: () => {\r\n                  // Generate a random price for demo\r\n                  const price = `$${(Math.random() * 100).toFixed(2)}`;\r\n                  return (\r\n                    <div className=\"text-left font-medium text-gray-900\">\r\n                      {price}\r\n                    </div>\r\n                  );\r\n                },\r\n                sortable: true,\r\n              },\r\n              {\r\n                header: \"Status\",\r\n                accessor: \"user_id\",\r\n                className: \"min-w-[120px]\",\r\n                cell: (_, __, index) => {\r\n                  // This is just for demo - in a real app you'd have a proper status field\r\n                  const statuses = [\"active\", \"inactive\", \"training\"];\r\n                  const randomStatus = statuses[(index || 0) % statuses.length];\r\n  \r\n                  const statusColor =\r\n                    randomStatus === \"active\"\r\n                      ? \"text-green-500\"\r\n                      : randomStatus === \"inactive\"\r\n                      ? \"text-gray-400\"\r\n                      : \"text-yellow-500\";\r\n  \r\n                  return (\r\n                    <div className=\"flex items-center\">\r\n                      <Circle\r\n                        className={`h-2 w-2 mr-2 fill-current ${statusColor}`}\r\n                      />\r\n                      <span className=\"capitalize text-gray-700\">\r\n                        {randomStatus}\r\n                      </span>\r\n                    </div>\r\n                  );\r\n                },\r\n              },\r\n              {\r\n                header: \"Total Sales\",\r\n                accessor: \"created_at\", // Using created_at as a placeholder\r\n                className: \"min-w-[120px]\",\r\n                cell: () => {\r\n                  // Generate a random number for demo\r\n                  const sales = getRandomMetric(0, 10000);\r\n                  return (\r\n                    <div className=\"text-left font-medium text-gray-900\">\r\n                      {sales > 0 ? sales.toLocaleString() : \"—\"}\r\n                    </div>\r\n                  );\r\n                },\r\n                sortable: true,\r\n              },\r\n              {\r\n                header: \"Total Revenue\",\r\n                accessor: \"first_message\", // Using first_message as a placeholder\r\n                className: \"min-w-[150px]\",\r\n                cell: () => {\r\n                  // Generate a random revenue for demo\r\n                  const revenue = getRandomMetric(0, 2000000);\r\n                  const trend = Math.random() > 0.5 ? \"up\" : \"down\";\r\n\r\n                  return (\r\n                    <div className=\"flex items-start justify-start space-x-2\">\r\n                      <span className=\"font-medium text-gray-900\">\r\n                        {revenue > 0 ? `$${revenue.toLocaleString()}` : \"—\"}\r\n                      </span>\r\n                      {revenue > 0 && (\r\n                        <Activity\r\n                          className={`h-4 w-4 ${\r\n                            trend === \"up\" ? \"text-green-500\" : \"text-red-500\"\r\n                          }`}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  );\r\n                },\r\n                sortable: true,\r\n              },\r\n            ]}\r\n            actions={agentActions}\r\n            emptyState={\r\n              <div className=\"text-center p-8\">\r\n                <div className=\"h-16 w-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                  <Users className=\"h-8 w-8 text-primary\" />\r\n                </div>\r\n                <h3 className=\"text-lg font-medium mb-1\">No agents found</h3>\r\n                <p className=\"text-gray-500 mb-4\">\r\n                  Get started by creating your first voice AI agent\r\n                </p>\r\n                <button\r\n                  className=\"bg-primary px-4 py-2 rounded-md text-white flex items-center justify-center mx-auto\"\r\n                  onClick={() => console.log(\"Create agent\")}\r\n                >\r\n                  <Plus className=\"h-4 w-4 mr-2\" />\r\n                  Create Agent\r\n                </button>\r\n              </div>\r\n            }\r\n          />\r\n        </div>\r\n      ) : (\r\n        <AgentGrid\r\n          data={filteredData}\r\n          onItemClick={(item) => console.log(\"Grid item clicked\", item)}\r\n          actions={agentActions}\r\n        />\r\n      )}\r\n\r\n      <div className=\"mt-8 border-t border-gray-200 pt-4\">\r\n        <CustomPagination\r\n          currentPage={currentPage}\r\n          totalPages={data.totalPages}\r\n          onPageChange={handlePageChange}\r\n        />\r\n      </div>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Agents;\r\n"],"names":["AgentGrid","data","onItemClick","actions","getInitials","name","part","getRandomMetric","min","max","item","price","sales","revenue","trend","statuses","randomStatus","statusColor","jsx","Card","jsxs","Avatar","AvatarFallback","Button","e","Share2","DropdownMenu","DropdownMenuTrigger","MoreHorizontal","DropdownMenuContent","action","index","DropdownMenuItem","Circle","Activity","FilterPopover","onFilterChange","open","setOpen","useState","activeFilters","setActiveFilters","statusFilter","setStatusFilter","priceRange","setPriceRange","statusOptions","handleApplyFilters","filters","newActiveFilters","handleResetFilters","removeFilter","filter","f","Popover","PopoverTrigger","SlidersHorizontal","PopoverContent","Label","RadioGroup","value","option","RadioGroupItem","Slider","Separator","Badge","Agents","navigate","useNavigate","queryClient","useQueryClient","user","useAuth","searchParams","setSearchParams","useSearchParams","debouncedSearch","setDebouncedSearch","searchQuery","setSearchQuery","viewMode","setViewMode","showFilters","setShowFilters","currentPage","deleteAgentMutation","useMutation","deleteAssistant","useEffect","handler","prev","newParams","isLoading","error","useQuery","fetchAllAgents","failureCount","Loading","filteredData","_","handlePageChange","page","handleSearchChange","handleViewModeChange","mode","handleFilterChange","key","handleViewAgent","agent","agentDetails","getAssistantById","handleEditAgent","handleDeleteAgent","agentActions","Eye","Edit","Trash","Page","Header","Users","ModernTable","__","Plus","CustomPagination"],"mappings":"8tCAsBA,MAAMA,GAAsC,CAAC,CAAE,KAAAC,EAAM,YAAAC,EAAa,QAAAC,KAAc,CAExE,MAAAC,EAAeC,GACZA,EACJ,MAAM,GAAG,EACT,IAAKC,GAASA,EAAK,OAAO,CAAC,CAAC,EAC5B,KAAK,EAAE,EACP,YAAY,EAIXC,EAAkB,CAACC,EAAaC,IAC7B,KAAK,MAAM,KAAK,OAAA,GAAYA,EAAMD,EAAM,GAAKA,CAAG,EAGzD,aACG,MAAI,CAAA,UAAU,2EACZ,SAAKP,EAAA,IAAKS,GAAS,CAEZ,MAAAC,EAAQ,KAAK,KAAK,SAAW,KAAK,QAAQ,CAAC,CAAC,GAC5CC,EAAQL,EAAgB,EAAG,GAAK,EAChCM,EAAUN,EAAgB,EAAG,GAAO,EACpCO,EAAQ,KAAK,OAAO,EAAI,GAAM,KAAO,OAGrCC,EAAW,CAAC,SAAU,WAAY,UAAU,EAC5CC,EAAeD,EAAS,KAAK,MAAM,KAAK,OAAO,EAAIA,EAAS,MAAM,CAAC,EACnEE,EACJD,IAAiB,SAAW,iBAC5BA,IAAiB,WAAa,gBAAkB,kBAGhD,OAAAE,EAAA,IAACC,GAAA,CAEC,UAAU,6GACV,QAAS,IAAMjB,EAAYQ,CAAI,EAE/B,SAAAU,EAAA,KAAC,MAAI,CAAA,UAAU,MACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAF,EAAA,IAACG,EAAO,CAAA,UAAU,4DAChB,SAAAH,EAAAA,IAACI,EAAe,CAAA,UAAU,2BACvB,SAAAlB,EAAY,OAAOM,EAAK,IAAI,CAAC,CAChC,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAAAQ,MAAC,OAAI,UAAU,4BACZ,SAAO,OAAAR,EAAK,IAAI,EACnB,EACAU,EAAAA,KAAC,MAAI,CAAA,UAAU,wBAAwB,SAAA,CAAA,OAChC,OAAOV,EAAK,EAAE,EAAE,UAAU,EAAG,CAAC,CAAA,CACrC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACAU,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAF,EAAA,IAACK,EAAA,CACC,QAAQ,QACR,KAAK,KACL,UAAU,6CACV,QAAUC,GAAM,CACdA,EAAE,gBAAgB,EACV,QAAA,IAAI,QAASd,CAAI,CAC3B,EAEA,SAAAQ,EAAAA,IAACO,EAAO,CAAA,UAAU,uBAAwB,CAAA,CAAA,CAC5C,SACCC,GACC,CAAA,SAAA,CAACR,EAAAA,IAAAS,GAAA,CAAoB,QAAO,GAAC,QAAUH,GAAMA,EAAE,gBAC7C,EAAA,SAAAN,EAAA,IAACK,EAAA,CACC,QAAQ,QACR,UAAU,6CAEV,SAAAL,EAAAA,IAACU,EAAe,CAAA,UAAU,uBAAwB,CAAA,CAAA,CAAA,EAEtD,EACAV,EAAAA,IAACW,GAAoB,CAAA,MAAM,MAAM,UAAU,YACxC,SAAQ1B,EAAA,IAAI,CAAC2B,EAAQC,IACpBX,EAAA,KAACY,GAAA,CAEC,QAAUR,GAAM,CACdA,EAAE,gBAAgB,EAClBM,EAAO,QAAQpB,CAAI,CACrB,EACA,UAAU,iBAEV,SAAA,CAAAQ,EAAA,IAAC,OAAK,CAAA,UAAU,6BACb,SAAAY,EAAO,KACV,EACAZ,EAAAA,IAAC,OAAM,CAAA,SAAAY,EAAO,KAAM,CAAA,CAAA,CAAA,EAVfC,CAAA,CAYR,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAX,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACF,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAK,QAAA,EAC3CA,EAAA,IAAA,MAAA,CAAI,UAAU,4BAA6B,SAAMP,CAAA,CAAA,CAAA,EACpD,EACAS,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACF,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAM,SAAA,EAC7CE,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAF,EAAA,IAACe,EAAO,CAAA,UAAW,6BAA6BhB,CAAW,GAAI,EAC9DC,EAAA,IAAA,OAAA,CAAK,UAAU,2BAA4B,SAAaF,CAAA,CAAA,CAAA,CAC3D,CAAA,CAAA,EACF,EACAI,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACF,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAW,cAAA,EAClDA,EAAAA,IAAC,OAAI,UAAU,4BACZ,WAAQ,EAAIN,EAAM,eAAe,EAAI,GACxC,CAAA,CAAA,EACF,EACAQ,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACF,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAa,gBAAA,EACpDE,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACF,EAAAA,IAAA,OAAA,CAAK,UAAU,4BACb,SAAUL,EAAA,EAAI,IAAIA,EAAQ,eAAgB,CAAA,GAAK,GAClD,CAAA,EACCA,EAAU,GACTK,MAACgB,EAAS,CAAA,UAAW,WAAWpB,IAAU,KAAO,iBAAmB,cAAc,EAAI,CAAA,CAAA,CAE1F,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EA7FKJ,EAAK,EA8FZ,CAEH,CAAA,EACH,CAEJ,ECnIMyB,GAA8C,CAAC,CAAE,eAAAC,KAAqB,CAC1E,KAAM,CAACC,EAAMC,CAAO,EAAIC,EAAAA,SAAS,EAAK,EAChC,CAACC,EAAeC,CAAgB,EAAIF,EAAAA,SAAmB,CAAA,CAAE,EACzD,CAACG,EAAcC,CAAe,EAAIJ,EAAAA,SAAwB,IAAI,EAC9D,CAACK,EAAYC,CAAa,EAAIN,WAAS,CAAC,EAAG,GAAG,CAAC,EAE/CO,EAAgC,CACpC,CAAE,GAAI,SAAU,MAAO,QAAS,EAChC,CAAE,GAAI,WAAY,MAAO,UAAW,EACpC,CAAE,GAAI,WAAY,MAAO,UAAW,CACtC,EAEMC,EAAqB,IAAM,CAC/B,MAAMC,EAAU,CACd,OAAQN,EACR,WAAAE,CACF,EAGMK,EAAmB,CAAC,EACtBP,GAAcO,EAAiB,KAAK,WAAWP,CAAY,EAAE,GAC7DE,EAAW,CAAC,EAAI,GAAKA,EAAW,CAAC,EAAI,MACtBK,EAAA,KAAK,WAAWL,EAAW,CAAC,CAAC,OAAOA,EAAW,CAAC,CAAC,EAAE,EAEtEH,EAAiBQ,CAAgB,EACjCb,EAAeY,CAAO,EACtBV,EAAQ,EAAK,CACf,EAEMY,EAAqB,IAAM,CAC/BP,EAAgB,IAAI,EACNE,EAAA,CAAC,EAAG,GAAG,CAAC,EACtBJ,EAAiB,CAAA,CAAE,EACnBL,EAAe,CAAA,CAAE,CACnB,EAEMe,EAAgBC,GAAmB,CACvC,MAAMH,EAAmBT,EAAc,OAAOa,GAAKA,IAAMD,CAAM,EAC/DX,EAAiBQ,CAAgB,EAG7BG,EAAO,WAAW,SAAS,KAAmB,IAAI,EAClDA,EAAO,WAAW,QAAQ,KAAiB,CAAC,EAAG,GAAG,CAAC,EAExChB,EAAA,CACb,OAAQgB,EAAO,WAAW,SAAS,EAAI,KAAOV,EAC9C,WAAYU,EAAO,WAAW,QAAQ,EAAI,CAAC,EAAG,GAAG,EAAIR,CAAA,CACtD,CACH,EAGE,OAAAxB,EAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACA,EAAA,KAAAkC,GAAA,CAAQ,KAAAjB,EAAY,aAAcC,EACjC,SAAA,CAACpB,EAAAA,IAAAqC,GAAA,CAAe,QAAO,GACrB,SAAAnC,EAAA,KAACG,EAAA,CACC,QAAQ,UACR,KAAK,KACL,UAAW,sDAAsDiB,EAAc,OAAS,EAAI,iCAAmC,EAAE,GAEjI,SAAA,CAACtB,EAAAA,IAAAsC,EAAA,CAAkB,UAAU,cAAe,CAAA,EAAE,UAE7ChB,EAAc,OAAS,GACtBtB,EAAAA,IAAC,QAAK,UAAU,2GACb,WAAc,MACjB,CAAA,CAAA,CAAA,CAAA,EAGN,EACAA,EAAAA,IAACuC,IAAe,UAAU,gBAAgB,MAAM,MAC9C,SAAArC,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACF,EAAA,IAAA,KAAA,CAAG,UAAU,sBAAsB,SAAa,gBAAA,EAEjDE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACF,EAAA,IAAAwC,EAAA,CAAM,UAAU,sBAAsB,SAAM,SAAA,EAC7CxC,EAAA,IAACyC,GAAA,CACC,MAAOjB,GAAgB,GACvB,cAAgBkB,GAAUjB,EAAgBiB,GAAS,IAAI,EAEtD,WAAc,IAAKC,GACjBzC,OAAA,MAAA,CAAoB,UAAU,8BAC7B,SAAA,CAACF,EAAAA,IAAA4C,GAAA,CAAe,MAAOD,EAAO,GAAI,GAAI,UAAUA,EAAO,EAAE,EAAI,CAAA,EAC7D3C,EAAAA,IAACwC,EAAM,CAAA,QAAS,UAAUG,EAAO,EAAE,GAAI,UAAU,qCAC9C,SAAAA,EAAO,KACV,CAAA,CAAA,CAJQ,EAAAA,EAAO,EAKjB,CACD,CAAA,CAAA,CACH,EACF,EAEAzC,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACF,EAAA,IAAAwC,EAAA,CAAM,UAAU,sBAAsB,SAAW,cAAA,EAClDtC,EAAAA,KAAC,OAAK,CAAA,UAAU,wBAAwB,SAAA,CAAA,IACpCwB,EAAW,CAAC,EAAE,OAAKA,EAAW,CAAC,CAAA,CACnC,CAAA,CAAA,EACF,EACA1B,EAAA,IAAC6C,GAAA,CACC,aAAc,CAAC,EAAG,GAAG,EACrB,MAAOnB,EACP,IAAK,IACL,KAAM,EACN,cAAeC,EACf,UAAU,MAAA,CAAA,CACZ,EACF,QAECmB,GAAU,EAAA,EAEX5C,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAF,EAAA,IAACK,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS2B,EACT,UAAU,cACX,SAAA,OAAA,CAED,EACAhC,EAAA,IAACK,EAAA,CACC,KAAK,KACL,QAASwB,EACT,UAAU,yBACX,SAAA,eAAA,CAAA,CAED,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGCP,EAAc,OAAS,GACrBtB,EAAA,IAAA,MAAA,CAAI,UAAU,4BACZ,SAAAsB,EAAc,IAAKY,GAClBhC,EAAA,KAAC6C,EAAA,CAEC,QAAQ,UACR,UAAU,wFAET,SAAA,CAAAb,EACDlC,EAAA,IAAC,SAAA,CACC,UAAU,0CACV,QAAS,IAAMiC,EAAaC,CAAM,EAElC,gBAAC,MAAI,CAAA,MAAM,6BAA6B,MAAM,KAAK,OAAO,KAAK,QAAQ,YAAY,KAAK,OAAO,OAAO,eAAe,YAAY,IAAI,cAAc,QAAQ,eAAe,QACxK,SAAA,CAAClC,EAAAA,IAAA,OAAA,CAAK,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAK,CAAA,EACpCA,EAAAA,IAAC,QAAK,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,IAAK,CAAA,CAAA,CACtC,CAAA,CAAA,CAAA,CACF,CAAA,EAbKkC,CAAA,CAeR,CACH,CAAA,CAAA,EAEJ,CAEJ,ECrJMc,GAAS,IAAM,CACnB,MAAMC,EAAWC,GAAY,EACvBC,EAAcC,GAAe,EAC7B,CAAE,KAAAC,CAAK,EAAIC,GAAQ,EACnB,CAACC,EAAcC,CAAe,EAAIC,GAAgB,EAClD,CAACC,EAAiBC,CAAkB,EAAItC,EAAA,SAC5CkC,EAAa,IAAI,QAAQ,GAAK,EAChC,EACM,CAACK,EAAaC,CAAc,EAAIxC,EAAAA,SAASqC,CAAe,EACxD,CAACI,EAAUC,CAAW,EAAI1C,EAAA,SAC9BkC,EAAa,IAAI,MAAM,IAAM,OAAS,OAAS,MACjD,EACM,CAACjC,EAAeC,CAAgB,EAAIF,EAAAA,SAAc,CAAA,CAAE,EACpD,CAAC2C,EAAaC,CAAc,EAAI5C,EAAAA,SAAS,EAAK,EAG9C6C,EAAc,SAASX,EAAa,IAAI,MAAM,GAAK,GAAG,EAGtDY,EAAsBC,GAAY,CACtC,WAAYC,GACZ,UAAW,IAAM,CACHlB,EAAA,kBAAkB,CAAE,SAAU,CAAC,SAAUE,GAAA,YAAAA,EAAM,EAAE,EAAG,CAAA,CAClE,CACD,EAGDiB,EAAAA,UAAU,IAAM,CACR,MAAAC,EAAU,WAAW,IAAM,CAC/BV,EAAeH,CAAe,EAC9BF,EAAiBgB,GAAS,CAClB,MAAAC,EAAY,IAAI,gBAAgBD,CAAI,EAC1C,OAAId,EACQe,EAAA,IAAI,SAAUf,CAAe,EAEvCe,EAAU,OAAO,QAAQ,EAEpBA,CAAA,CACR,GACA,GAAG,EAEC,MAAA,IAAM,aAAaF,CAAO,CAAA,EAChC,CAACb,EAAiBF,CAAe,CAAC,EAGrCc,EAAAA,UAAU,IAAM,CACdd,EAAiBgB,GAAS,CAClB,MAAAC,EAAY,IAAI,gBAAgBD,CAAI,EAC1C,OAAIV,IAAa,OACLW,EAAA,IAAI,OAAQ,MAAM,EAE5BA,EAAU,OAAO,MAAM,EAElBA,CAAA,CACR,CAAA,EACA,CAACX,EAAUN,CAAe,CAAC,EAE9B,KAAM,CAAE,KAAAzE,EAAM,UAAA2F,EAAW,MAAAC,CAAA,EAAUC,GAAS,CAC1C,SAAU,CAAC,SAAUvB,GAAA,YAAAA,EAAM,GAAIa,EAAaN,EAAatC,CAAa,EACtE,QAAS,IAAMuD,GAAeX,EAAaN,CAAW,EACtD,QAAS,CAAC,EAACP,GAAA,MAAAA,EAAM,IACjB,MAAO,CAACyB,EAAcH,IAAe,OAGnC,MADyB,CAAC,IAAK,IAAK,GAAG,EAClB,UAASA,EAAAA,GAAAA,YAAAA,EAAO,WAAPA,YAAAA,EAAiB,MAAM,EAC5C,GAEFG,EAAe,CAAA,CACxB,CACD,EAEG,GAAAJ,EAAkB,OAAA1E,MAAC+E,GAAQ,CAAA,CAAA,EAE/B,GAAIJ,EACM,eAAA,MAAM,wBAAyBA,CAAK,EACrC3E,EAAA,IAAC,OAAI,SAAoB,sBAAA,CAAA,EAIlC,IAAIgF,EAAe,CAAC,GAAGjG,EAAK,IAAI,EAC5BuC,EAAc,SAEhB0D,EAAeA,EAAa,OAAO,CAACC,EAAGpE,IAAU,CAC/C,MAAMhB,EAAW,CAAC,SAAU,WAAY,UAAU,EAElD,OADqBA,EAASgB,EAAQhB,EAAS,MAAM,IAC7ByB,EAAc,MAAA,CACvC,GAGG,MAAA4D,EAAoBC,GAAiB,CACzC3B,EAAiBgB,GAAS,CAClB,MAAAC,EAAY,IAAI,gBAAgBD,CAAI,EAC1C,OAAAC,EAAU,IAAI,OAAQU,EAAK,SAAA,CAAU,EAC9BV,CAAA,CACR,CACH,EAEMW,EAAsB1C,GAAkB,CAC5CiB,EAAmBjB,CAAK,CAC1B,EAEM2C,EAAwBC,GAA0B,CACtDvB,EAAYuB,CAAI,CAClB,EAEMC,EAAsBzD,GAAiB,CAC3CP,EAAiBO,CAAO,EACxBmC,EACE,OAAO,KAAKnC,CAAO,EAAE,KAClB0D,GACC1D,EAAQ0D,CAAG,IAAM,OAChB,OAAO1D,EAAQ0D,CAAG,GAAM,UACtB,MAAM,QAAQ1D,EAAQ0D,CAAG,CAAC,IACxB1D,EAAQ0D,CAAG,EAAE,CAAC,EAAI,GAAK1D,EAAQ0D,CAAG,EAAE,CAAC,EAAI,KAAA,CAEpD,CACF,EAGMtG,EAAeC,GACZA,EACJ,MAAM,GAAG,EACT,IAAKC,GAASA,EAAK,OAAO,CAAC,CAAC,EAC5B,KAAK,EAAE,EACP,YAAY,EAMXC,EAAkB,CAACC,EAAaC,IAC7B,KAAK,MAAM,KAAK,OAAA,GAAYA,EAAMD,EAAM,GAAKA,CAAG,EAInDmG,EAAkB,MAAOC,GAAe,CACxC,GAAA,CACF,MAAMC,EAAe,MAAMC,GAAiBF,EAAM,EAAE,EAC5C,QAAA,IAAI,iBAAkBC,CAAY,QAEnChB,EAAO,CACN,QAAA,MAAM,gCAAiCA,CAAK,CAAA,CAExD,EAEMkB,EAAmBH,GAAe,CAC7BzC,EAAA,gBAAgByC,EAAM,EAAE,EAAE,CACrC,EAEMI,EAAoB,MAAOJ,GAAe,CAC9C,GAAI,QAAQ,oCAAoCA,EAAM,IAAI,IAAI,EACxD,GAAA,CACI,MAAAvB,EAAoB,YAAYuB,EAAM,EAAE,QACvCf,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,CAAA,CAGlD,EAGMoB,EAAe,CACnB,CACE,MAAO,eACP,KAAM/F,EAAAA,IAACgG,EAAI,CAAA,UAAU,SAAU,CAAA,EAC/B,QAASP,CACX,EACA,CACE,MAAO,aACP,KAAMzF,EAAAA,IAACiG,EAAK,CAAA,UAAU,SAAU,CAAA,EAChC,QAASJ,CACX,EACA,CACE,MAAO,eACP,KAAM7F,EAAAA,IAACkG,EAAM,CAAA,UAAU,SAAU,CAAA,EACjC,QAASJ,CAAA,CAEb,EAEA,cACGK,GACC,CAAA,SAAA,CAAAnG,EAAA,IAACoG,GAAA,CACC,MAAM,kBACN,WAAW,QACX,OAAQ,IAAMnD,EAAS,aAAa,EACpC,aAAc,GACd,WAAYS,EACZ,eAAgB0B,EAChB,SAAU,GACV,SAAAtB,EACA,iBAAkBuB,EAClB,eAAgB,GAChB,YAAa,EAAA,CACf,EAEAnF,EAAAA,KAAC,MAAI,CAAA,UAAU,mFACb,SAAA,CAACF,EAAAA,IAAA,MAAA,CAAI,UAAU,8BACb,SAAAE,EAAAA,KAAC6C,GAAM,QAAQ,YAAY,UAAU,YACnC,SAAA,CAAC/C,EAAAA,IAAAqG,EAAA,CAAM,UAAU,cAAe,CAAA,SAC/B,OAAM,CAAA,SAAA,CAAArB,EAAa,QAAU,EAAE,SAAA,CAAO,CAAA,CAAA,CAAA,CACzC,CACF,CAAA,EAEAhF,EAAAA,IAACiB,GAAc,CAAA,eAAgBsE,CAAoB,CAAA,CAAA,EACrD,EAECvB,GACChE,EAAAA,IAAC,MAAI,CAAA,UAAU,MAEf,CAAA,EAGD8D,IAAa,OACX9D,MAAA,MAAA,CAAI,UAAU,yBAEb,SAAAA,EAAA,IAACsG,GAAA,CACC,KAAMtB,EACN,UAAAN,EACA,aAAc,GACd,oBAAqB,GACrB,WAAalF,GAAS,QAAQ,IAAI,cAAeA,CAAI,EACrD,QAAS,CACP,CACE,OAAQ,OACR,SAAU,OACV,UAAW,gBACX,KAAM,CAACkD,EAAOlD,IACXU,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAF,EAAA,IAACG,EAAO,CAAA,UAAU,0DAChB,SAAAH,EAAA,IAACI,EAAe,CAAA,UAAU,2BACvB,SAAAlB,EAAY,OAAOwD,CAAK,CAAC,CAC5B,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAAA1C,MAAC,MAAI,CAAA,UAAU,4BACZ,SAAA,OAAO0C,CAAK,EACf,EACAxC,EAAAA,KAAC,MAAI,CAAA,UAAU,wBAAwB,SAAA,CAAA,OAChC,OAAOV,EAAK,EAAE,EAAE,UAAU,EAAG,CAAC,CAAA,CACrC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEF,SAAU,EACZ,EACA,CACE,OAAQ,QACR,SAAU,KACV,UAAW,gBACX,KAAM,IAAM,CAEJ,MAAAC,EAAQ,KAAK,KAAK,SAAW,KAAK,QAAQ,CAAC,CAAC,GAClD,OACGO,EAAAA,IAAA,MAAA,CAAI,UAAU,sCACZ,SACHP,EAAA,CAEJ,EACA,SAAU,EACZ,EACA,CACE,OAAQ,SACR,SAAU,UACV,UAAW,gBACX,KAAM,CAACwF,EAAGsB,EAAI1F,IAAU,CAEtB,MAAMhB,EAAW,CAAC,SAAU,WAAY,UAAU,EAC5CC,EAAeD,GAAUgB,GAAS,GAAKhB,EAAS,MAAM,EAEtDE,EACJD,IAAiB,SACb,iBACAA,IAAiB,WACjB,gBACA,kBAGJ,OAAAI,EAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAF,EAAA,IAACe,EAAA,CACC,UAAW,6BAA6BhB,CAAW,EAAA,CACrD,EACCC,EAAA,IAAA,OAAA,CAAK,UAAU,2BACb,SACHF,CAAA,CAAA,CAAA,EACF,CAAA,CAGN,EACA,CACE,OAAQ,cACR,SAAU,aACV,UAAW,gBACX,KAAM,IAAM,CAEJ,MAAAJ,EAAQL,EAAgB,EAAG,GAAK,EAEpC,OAAAW,MAAC,OAAI,UAAU,sCACZ,WAAQ,EAAIN,EAAM,eAAe,EAAI,GACxC,CAAA,CAEJ,EACA,SAAU,EACZ,EACA,CACE,OAAQ,gBACR,SAAU,gBACV,UAAW,gBACX,KAAM,IAAM,CAEJ,MAAAC,EAAUN,EAAgB,EAAG,GAAO,EACpCO,EAAQ,KAAK,OAAO,EAAI,GAAM,KAAO,OAGzC,OAAAM,EAAA,KAAC,MAAI,CAAA,UAAU,2CACb,SAAA,CAACF,EAAAA,IAAA,OAAA,CAAK,UAAU,4BACb,SAAUL,EAAA,EAAI,IAAIA,EAAQ,eAAgB,CAAA,GAAK,GAClD,CAAA,EACCA,EAAU,GACTK,EAAA,IAACgB,EAAA,CACC,UAAW,WACTpB,IAAU,KAAO,iBAAmB,cACtC,EAAA,CAAA,CACF,EAEJ,CAEJ,EACA,SAAU,EAAA,CAEd,EACA,QAASmG,EACT,WACE7F,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAF,EAAAA,IAAC,OAAI,UAAU,qFACb,eAACqG,EAAM,CAAA,UAAU,uBAAuB,CAC1C,CAAA,EACCrG,EAAA,IAAA,KAAA,CAAG,UAAU,2BAA2B,SAAe,kBAAA,EACvDA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAElC,oDAAA,EACAE,EAAA,KAAC,SAAA,CACC,UAAU,sFACV,QAAS,IAAM,QAAQ,IAAI,cAAc,EAEzC,SAAA,CAACF,EAAAA,IAAAwG,EAAA,CAAK,UAAU,cAAe,CAAA,EAAE,cAAA,CAAA,CAAA,CAEnC,CACF,CAAA,CAAA,GAGN,EAEAxG,EAAA,IAAClB,GAAA,CACC,KAAMkG,EACN,YAAcxF,GAAS,QAAQ,IAAI,oBAAqBA,CAAI,EAC5D,QAASuG,CAAA,CACX,EAGF/F,EAAAA,IAAC,MAAI,CAAA,UAAU,qCACb,SAAAA,EAAA,IAACyG,GAAA,CACC,YAAAvC,EACA,WAAYnF,EAAK,WACjB,aAAcmG,CAAA,CAAA,CAElB,CAAA,CAAA,EACF,CAEJ"}