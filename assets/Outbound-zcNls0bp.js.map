{"version":3,"file":"Outbound-zcNls0bp.js","sources":["../../src/pages/Outbound/CampaignDetailsModal.tsx","../../src/pages/Outbound/Outbound.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { DialogHeader, DialogTitle, DialogDescription } from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Loader2, Phone, Users, Clock, CheckCircle, BarChart3, Download, Play, Eye } from \"lucide-react\";\nimport { toast } from \"sonner\";\n\nimport {\n  getCampaignById,\n  getCampaignCalls,\n  type Campaign,\n  type CampaignCall\n} from \"@/api/services/outbound/campaignService\";\nimport { getPhoneNumberById } from \"@/api/services/phoneNumbers/phoneNumberService\";\nimport { getAssistantById } from \"@/api/services/agents/agentService\";\nimport { getCampaignCallRecording, getCampaignCallTranscript, formatDuration } from \"@/api/services/callHistory/callHistoryService\";\nimport { CallRecordingPlayer } from \"@/components/CallRecordingPlayer\";\n\ninterface CampaignDetailsModalProps {\n  campaignId: string;\n  onClose: () => void;\n}\n\nexport function CampaignDetailsModal({ campaignId, onClose }: CampaignDetailsModalProps) {\n  const [activeTab, setActiveTab] = useState(\"overview\");\n  const [selectedCallForRecording, setSelectedCallForRecording] = useState<CampaignCall | null>(null);\n  const [showRecordingPlayer, setShowRecordingPlayer] = useState(false);\n\n  // Fetch campaign details\n  const { data: campaignData, isLoading: campaignLoading } = useQuery({\n    queryKey: [\"campaign\", campaignId],\n    queryFn: () => getCampaignById(campaignId),\n    retry: 1,\n  });\n\n  // Fetch campaign calls\n  const { data: callsData, isLoading: callsLoading } = useQuery({\n    queryKey: [\"campaignCalls\", campaignId],\n    queryFn: () => getCampaignCalls(campaignId),\n    retry: 1,\n  });\n\n  const campaign: Campaign = campaignData?.data;\n  const calls: Record<string, CampaignCall> = callsData?.data || {};\n  const callsList = Object.values(calls);\n\n  // Debug: Log the actual call data structure\n  console.log('🔍 Campaign calls data:', calls);\n  console.log('🔍 Calls list:', callsList);\n  if (callsList.length > 0) {\n    console.log('🔍 First call structure:', callsList[0]);\n    console.log('🔍 First call customer:', callsList[0].customer);\n    console.log('🔍 First call status:', callsList[0].status);\n  }\n\n  // Helper function to format call data for display\n  const formatCallForDisplay = (call: CampaignCall) => {\n    // Calculate duration from timestamps if not provided\n    let duration = call.duration || 0;\n    if (!duration && call.startedAt && call.endedAt) {\n      const start = new Date(call.startedAt).getTime();\n      const end = new Date(call.endedAt).getTime();\n      duration = Math.round((end - start) / 1000); // duration in seconds\n    }\n\n    return {\n      ...call,\n      duration,\n      // Ensure customer data is accessible\n      customer: call.customer || { name: null, email: null, number: null }\n    };\n  };\n\n  // Debug the calls data structure\n  console.log('Raw calls data:', callsData?.data);\n  console.log('Calls object:', calls);\n  console.log('Calls list:', callsList);\n  console.log('First call in list:', callsList[0]);\n  if (callsList[0]) {\n    console.log('First call ID access:', callsList[0].id);\n    console.log('First call keys:', Object.keys(callsList[0]));\n  }\n\n  // Fetch phone number details\n  const { data: phoneNumberData } = useQuery({\n    queryKey: [\"phoneNumber\", campaign?.phoneNumberId],\n    queryFn: () => getPhoneNumberById(campaign.phoneNumberId),\n    enabled: !!campaign?.phoneNumberId,\n    retry: 1,\n  });\n\n  // Fetch assistant details\n  const { data: assistantData } = useQuery({\n    queryKey: [\"assistant\", campaign?.assistantId],\n    queryFn: () => getAssistantById(campaign.assistantId!),\n    enabled: !!campaign?.assistantId,\n    retry: 1,\n  });\n\n  // Convert CampaignCall to CallHistoryItem for recording player\n  const convertToCallHistoryItem = (call: CampaignCall) => {\n    console.log('Converting campaign call to CallHistoryItem:', call);\n\n    // Since the backend now properly parses the JSON strings, we can access properties directly\n    const callId = call.id;\n\n    const converted = {\n      id: callId,\n      call_id: callId, // Use the same ID for call_id\n      customer_number: call.customer?.number || '',\n      status: call.status as any,\n      type: 'outbound' as const,\n      duration: call.duration || 0,\n      cost: call.cost || 0,\n      transcript: call.transcript || call.analysis?.summary || '',\n      recording_url: call.recording,\n      recordingUrl: call.recording,\n      recording: call.recording,\n      assistant_id: campaign?.assistantId,\n      assistant_name: assistantData?.data?.name,\n      end_reason: call.endedReason,\n      started_at: call.startedAt,\n      ended_at: call.endedAt,\n      created_at: call.startedAt || new Date().toISOString(),\n      updated_at: call.endedAt || new Date().toISOString(),\n      metadata: { customer: call.customer }\n    };\n\n    console.log('Converted CallHistoryItem:', converted);\n    return converted;\n  };\n\n  const getStatusBadge = (status: string) => {\n    const variants: Record<string, { variant: \"default\" | \"secondary\" | \"destructive\" | \"outline\", icon: React.ReactNode }> = {\n      scheduled: { variant: \"outline\", icon: <Clock className=\"h-3 w-3 mr-1\" /> },\n      \"in-progress\": { variant: \"default\", icon: <Play className=\"h-3 w-3 mr-1\" /> },\n      ended: { variant: \"secondary\", icon: <CheckCircle className=\"h-3 w-3 mr-1\" /> },\n    };\n    \n    const config = variants[status] || { variant: \"outline\", icon: null };\n    \n    return (\n      <Badge variant={config.variant} className=\"flex items-center\">\n        {config.icon}\n        {status === \"in-progress\" ? \"Running\" : status.charAt(0).toUpperCase() + status.slice(1)}\n      </Badge>\n    );\n  };\n\n  const getCallStatusBadge = (status: string) => {\n    const variants: Record<string, \"default\" | \"secondary\" | \"destructive\" | \"outline\"> = {\n      queued: \"outline\",\n      ringing: \"secondary\",\n      \"in-progress\": \"default\",\n      ended: \"secondary\",\n      failed: \"destructive\",\n    };\n    return <Badge variant={variants[status] || \"outline\"}>{status}</Badge>;\n  };\n\n  const formatDuration = (seconds?: number) => {\n    if (!seconds) return \"0:00\";\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  if (campaignLoading) {\n    return (\n      <>\n        <DialogHeader>\n          <DialogTitle>Campaign Details</DialogTitle>\n        </DialogHeader>\n        <div className=\"flex items-center justify-center h-32\">\n          <Loader2 className=\"h-8 w-8 animate-spin\" />\n        </div>\n      </>\n    );\n  }\n\n  if (!campaign) {\n    return (\n      <>\n        <DialogHeader>\n          <DialogTitle>Campaign Details</DialogTitle>\n        </DialogHeader>\n        <div className=\"text-center py-8\">\n          <p className=\"text-muted-foreground\">Campaign not found</p>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <DialogHeader>\n        <DialogTitle className=\"flex items-center gap-2\">\n          {campaign.name}\n          {getStatusBadge(campaign.status)}\n        </DialogTitle>\n        <DialogDescription>\n          Created on {new Date(campaign.createdAt).toLocaleDateString()}\n        </DialogDescription>\n      </DialogHeader>\n\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n          <TabsTrigger value=\"calls\">Calls</TabsTrigger>\n          <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"overview\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n                  <Users className=\"h-4 w-4\" />\n                  Total Calls\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {callsList.length}\n                </div>\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  Actual calls made\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n                  <CheckCircle className=\"h-4 w-4\" />\n                  Completed\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{campaign.callsCounterEnded || 0}</div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n                  <BarChart3 className=\"h-4 w-4\" />\n                  Pick Up\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {campaign.callsCounterEnded > 0 \n                    ? `${Math.round(((campaign.callsCounterEnded - campaign.callsCounterEndedVoicemail) / campaign.callsCounterEnded) * 100)}%`\n                    : \"0%\"\n                  }\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n                  <Phone className=\"h-4 w-4\" />\n                  Voicemail\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{campaign.callsCounterEndedVoicemail || 0}</div>\n              </CardContent>\n            </Card>\n          </div>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Campaign Information</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm font-medium text-muted-foreground\">Phone Number</p>\n                  <p className=\"text-sm font-mono\">\n                    {phoneNumberData?.data?.number || phoneNumberData?.data?.friendlyName || campaign.phoneNumberId}\n                  </p>\n                  {phoneNumberData?.data?.number && (\n                    <p className=\"text-xs text-muted-foreground\">\n                      {phoneNumberData.data.friendlyName || 'AI CRUITMENT Number'}\n                    </p>\n                  )}\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-muted-foreground\">Assistant</p>\n                  <p className=\"text-sm\">\n                    {assistantData?.data?.name || campaign.assistantId || campaign.workflowId || \"N/A\"}\n                  </p>\n                  {assistantData?.data?.name && (\n                    <p className=\"text-xs text-muted-foreground\">\n                      ID: {campaign.assistantId}\n                    </p>\n                  )}\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-muted-foreground\">Created</p>\n                  <p className=\"text-sm\">{new Date(campaign.createdAt).toLocaleString()}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-muted-foreground\">Last Updated</p>\n                  <p className=\"text-sm\">{new Date(campaign.updatedAt).toLocaleString()}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"calls\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Phone className=\"h-5 w-5\" />\n                Campaign Calls\n              </CardTitle>\n              <CardDescription>\n                Individual call details and outcomes\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {callsLoading ? (\n                <div className=\"flex items-center justify-center h-32\">\n                  <Loader2 className=\"h-8 w-8 animate-spin\" />\n                </div>\n              ) : (\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Customer</TableHead>\n                      <TableHead>Phone Number</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead>Duration</TableHead>\n                      <TableHead>Started</TableHead>\n                      <TableHead>Recording</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {callsList.length === 0 ? (\n                      <TableRow>\n                        <TableCell colSpan={6} className=\"text-center text-muted-foreground py-8\">\n                          No calls found for this campaign\n                        </TableCell>\n                      </TableRow>\n                    ) : (\n                      callsList.map((call) => {\n                        const formattedCall = formatCallForDisplay(call);\n                        return (\n                        <TableRow key={call.id}>\n                          <TableCell>\n                            <div>\n                              <div className=\"font-medium\">{formattedCall.customer?.name || \"Unknown Customer\"}</div>\n                              <div className=\"text-xs text-muted-foreground\">{formattedCall.customer?.email || \"-\"}</div>\n                            </div>\n                          </TableCell>\n                          <TableCell className=\"font-mono\">{formattedCall.customer?.number || \"-\"}</TableCell>\n                          <TableCell>{getCallStatusBadge(formattedCall.status)}</TableCell>\n                          <TableCell>{formatDuration(formattedCall.duration)}</TableCell>\n                          <TableCell>\n                            {formattedCall.startedAt ? new Date(formattedCall.startedAt).toLocaleString() : \"-\"}\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"flex gap-2\">\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={() => {\n                                  setSelectedCallForRecording(call);\n                                  setShowRecordingPlayer(true);\n                                }}\n                                title=\"Play Recording & View Transcript\"\n                              >\n                                <Play className=\"h-3 w-3 mr-1\" />\n                                Recording\n                              </Button>\n                            </div>\n                          </TableCell>\n                        </TableRow>\n                        );\n                      })\n                    )}\n                  </TableBody>\n                </Table>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"analytics\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Call Status Distribution</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm\">Scheduled</span>\n                    <span className=\"text-sm font-medium\">{campaign.callsCounterScheduled || 0}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm\">Queued</span>\n                    <span className=\"text-sm font-medium\">{campaign.callsCounterQueued || 0}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm\">In Progress</span>\n                    <span className=\"text-sm font-medium\">{campaign.callsCounterInProgress || 0}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm\">Completed</span>\n                    <span className=\"text-sm font-medium\">{campaign.callsCounterEnded || 0}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm\">Voicemail</span>\n                    <span className=\"text-sm font-medium\">{campaign.callsCounterEndedVoicemail || 0}</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Performance Metrics</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm\">Success Rate</span>\n                    <span className=\"text-sm font-medium\">\n                      {campaign.callsCounterEnded > 0 \n                        ? `${Math.round(((campaign.callsCounterEnded - campaign.callsCounterEndedVoicemail) / campaign.callsCounterEnded) * 100)}%`\n                        : \"0%\"\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm\">Completion Rate</span>\n                    <span className=\"text-sm font-medium\">\n                      {campaign.customers?.length > 0 \n                        ? `${Math.round((campaign.callsCounterEnded / campaign.customers.length) * 100)}%`\n                        : \"0%\"\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm\">Avg Duration</span>\n                    <span className=\"text-sm font-medium\">\n                      {callsList.length > 0\n                        ? formatDuration(Math.round(callsList.reduce((sum, call) => sum + (call.duration || 0), 0) / callsList.length))\n                        : \"0:00\"\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm\">Total Cost</span>\n                    <span className=\"text-sm font-medium\">\n                      ${callsList.reduce((sum, call) => sum + (call.cost || 0), 0).toFixed(2)}\n                    </span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"md:col-span-2\">\n              <CardHeader>\n                <CardTitle>Call Outcomes</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-green-600\">\n                      {callsList.filter(call => call.status === 'ended' && call.duration && call.duration > 30).length}\n                    </div>\n                    <div className=\"text-xs text-muted-foreground\">Successful Calls</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-yellow-600\">\n                      {callsList.filter(call => call.status === 'ended' && (!call.duration || call.duration <= 30)).length}\n                    </div>\n                    <div className=\"text-xs text-muted-foreground\">Short Calls</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-orange-600\">\n                      {campaign.callsCounterEndedVoicemail || 0}\n                    </div>\n                    <div className=\"text-xs text-muted-foreground\">Voicemails</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-red-600\">\n                      {callsList.filter(call => call.status !== 'ended').length}\n                    </div>\n                    <div className=\"text-xs text-muted-foreground\">Failed Calls</div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n      </Tabs>\n\n      <div className=\"flex justify-end pt-4 border-t\">\n        <Button onClick={onClose}>Close</Button>\n      </div>\n\n      {/* Call Recording Player Modal */}\n      {showRecordingPlayer && selectedCallForRecording && (\n        <CallRecordingPlayer\n          call={convertToCallHistoryItem(selectedCallForRecording)}\n          isOpen={showRecordingPlayer}\n          onClose={() => {\n            setShowRecordingPlayer(false);\n            setSelectedCallForRecording(null);\n          }}\n          customGetRecording={getCampaignCallRecording}\n          customGetTranscript={getCampaignCallTranscript}\n        />\n      )}\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Loader2, Plus, Play, Pause, Square, BarChart3, Phone, Users, Clock, CheckCircle, AlertCircle, Trash2, Eye, RefreshCw } from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport Page from \"@/components/Page\";\nimport { CampaignDetailsModal } from \"./CampaignDetailsModal\";\nimport axiosInstance from \"@/api/axios/axiosInstance\";\nimport { useAuth } from \"@/context/AuthContext\";\nimport { usePermissions } from \"@/context/PermissionContext\";\n\nimport {\n  getAllCampaigns,\n  launchCampaign,\n  pauseCampaign,\n  resumeCampaign,\n  cancelCampaign,\n  deleteCampaign,\n  testVapiConnection,\n  type Campaign\n} from \"@/api/services/outbound/campaignService\";\n\nconst Outbound = () => {\n  const navigate = useNavigate();\n  const [isDetailsModalOpen, setIsDetailsModalOpen] = useState(false);\n  const [selectedCampaign, setSelectedCampaign] = useState<Campaign | null>(null);\n  const [showInsufficientCreditsModal, setShowInsufficientCreditsModal] = useState(false);\n  const [currentBalance, setCurrentBalance] = useState(0);\n\n  const queryClient = useQueryClient();\n  const { user } = useAuth();\n  const { isSuperAdmin } = usePermissions();\n\n  // Fetch campaigns\n  const { data: campaignsData, isLoading: campaignsLoading, error: campaignsError } = useQuery({\n    queryKey: [\"outboundCampaigns\"],\n    queryFn: () => getAllCampaigns(),\n    retry: (failureCount, error: any) => {\n      // Don't retry for expected scenarios (normal for new users)\n      const expectedStatuses = [404, 204, 402]; // 402 = Payment Required (no credits)\n      if (expectedStatuses.includes(error?.response?.status)) {\n        return false;\n      }\n      return failureCount < 1; // Retry once for other errors\n    },\n  });\n\n  // Launch campaign mutation\n  const launchMutation = useMutation({\n    mutationFn: launchCampaign,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"outboundCampaigns\"] });\n      toast.success(\"Campaign launched successfully\");\n    },\n    onError: (error: any) => {\n      const message = error.response?.data?.message || \"Failed to launch campaign\";\n      const currentStatus = error.response?.data?.currentStatus;\n\n      if (currentStatus === \"in-progress\") {\n        toast.info(\"Campaign is already running\");\n      } else {\n        toast.error(message);\n      }\n\n      // Refresh data to show current status\n      queryClient.invalidateQueries({ queryKey: [\"outboundCampaigns\"] });\n    },\n  });\n\n  // Pause campaign mutation\n  const pauseMutation = useMutation({\n    mutationFn: pauseCampaign,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"outboundCampaigns\"] });\n    },\n  });\n\n  // Resume campaign mutation\n  const resumeMutation = useMutation({\n    mutationFn: resumeCampaign,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"outboundCampaigns\"] });\n    },\n  });\n\n  // Cancel campaign mutation\n  const cancelMutation = useMutation({\n    mutationFn: cancelCampaign,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"outboundCampaigns\"] });\n    },\n  });\n\n  // Delete campaign mutation\n  const deleteMutation = useMutation({\n    mutationFn: deleteCampaign,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"outboundCampaigns\"] });\n    },\n  });\n\n  const handleLaunchCampaign = (campaignId: string) => {\n    launchMutation.mutate(campaignId);\n  };\n\n  const handlePauseCampaign = (campaignId: string) => {\n    pauseMutation.mutate(campaignId);\n  };\n\n  const handleResumeCampaign = (campaignId: string) => {\n    resumeMutation.mutate(campaignId);\n  };\n\n  const handleCancelCampaign = (campaignId: string) => {\n    if (confirm(\"Are you sure you want to cancel this campaign?\")) {\n      cancelMutation.mutate(campaignId);\n    }\n  };\n\n  const handleDeleteCampaign = (campaignId: string) => {\n    if (confirm(\"Are you sure you want to delete this campaign? This action cannot be undone.\")) {\n      deleteMutation.mutate(campaignId);\n    }\n  };\n\n  const handleViewCampaign = (campaign: Campaign) => {\n    setSelectedCampaign(campaign);\n    setIsDetailsModalOpen(true);\n  };\n\n  const handleTestVapi = async (campaignId?: string) => {\n    try {\n      const result = await testVapiConnection(campaignId);\n      console.log(\"VAPI Test Result:\", result);\n      toast.success(\"VAPI connection test successful\");\n    } catch (error) {\n      console.error(\"VAPI Test Error:\", error);\n      toast.error(\"VAPI connection test failed\");\n    }\n  };\n\n  const handleRefresh = () => {\n    queryClient.invalidateQueries({ queryKey: [\"outboundCampaigns\"] });\n    toast.success(\"Campaigns refreshed\");\n  };\n\n  const handleCreateCampaign = async () => {\n    // Super admins have unlimited access\n    if (isSuperAdmin) {\n      navigate(\"/outbound/create-campaign\");\n      return;\n    }\n\n    try {\n      // Check credit balance for regular users\n      const response = await axiosInstance.get('/api/credits/balance');\n      const balance = response.data.data;\n\n      if (!balance || parseFloat(balance.available_credits) < 1) {\n        // Store current balance and show insufficient credits modal\n        setCurrentBalance(balance?.available_credits || 0);\n        setShowInsufficientCreditsModal(true);\n        return;\n      }\n\n      // User has sufficient credits, proceed to create campaign page\n      navigate(\"/outbound/create-campaign\");\n    } catch (error) {\n      console.error('Error checking credit balance:', error);\n      toast.error('Unable to verify credit balance. Please try again.');\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    const variants: Record<string, { variant: \"default\" | \"secondary\" | \"destructive\" | \"outline\", icon: React.ReactNode, label: string }> = {\n      scheduled: { variant: \"outline\", icon: <Clock className=\"h-3 w-3 mr-1\" />, label: \"Scheduled\" },\n      \"in-progress\": { variant: \"default\", icon: <Play className=\"h-3 w-3 mr-1\" />, label: \"Running\" },\n      ended: { variant: \"secondary\", icon: <CheckCircle className=\"h-3 w-3 mr-1\" />, label: \"Ended\" },\n    };\n\n    const config = variants[status] || {\n      variant: \"outline\",\n      icon: <AlertCircle className=\"h-3 w-3 mr-1\" />,\n      label: status.charAt(0).toUpperCase() + status.slice(1)\n    };\n\n    return (\n      <Badge variant={config.variant} className=\"flex items-center\">\n        {config.icon}\n        {config.label}\n      </Badge>\n    );\n  };\n\n  const campaigns = Array.isArray(campaignsData?.data) ? campaignsData.data : [];\n\n  if (campaignsError) {\n    const errorStatus = (campaignsError as any)?.response?.status;\n    const isInsufficientCredits = errorStatus === 402;\n\n    return (\n      <Page>\n        <div className=\"space-y-6\">\n          <div>\n            <h1 className=\"text-3xl font-bold tracking-tight\">Outbound</h1>\n            <p className=\"text-muted-foreground\">\n              Create and manage outbound campaigns\n            </p>\n          </div>\n          <Card>\n            <CardContent className=\"pt-6\">\n              <div className=\"text-center\">\n                {isInsufficientCredits ? (\n                  <>\n                    <AlertCircle className=\"h-12 w-12 text-orange-500 mx-auto mb-4\" />\n                    <h3 className=\"text-lg font-semibold mb-2\">Insufficient Credits</h3>\n                    <p className=\"text-muted-foreground mb-4\">\n                      You need credits to access campaign features. Please purchase credits to continue.\n                    </p>\n                    <div className=\"flex gap-2 justify-center\">\n                      <Button onClick={() => navigate('/credits/purchase')} className=\"bg-orange-500 hover:bg-orange-600\">\n                        Purchase Credits\n                      </Button>\n                      <Button variant=\"outline\" onClick={() => window.location.reload()}>\n                        <RefreshCw className=\"h-4 w-4 mr-2\" />\n                        Refresh\n                      </Button>\n                    </div>\n                  </>\n                ) : (\n                  <>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Unable to connect to the backend API. Please ensure the backend server is running.\n                    </p>\n                    <Button onClick={() => window.location.reload()}>\n                      Retry Connection\n                    </Button>\n                  </>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </Page>\n    );\n  }\n\n  return (\n    <Page>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold tracking-tight\">Outbound</h1>\n            <p className=\"text-muted-foreground\">\n              Create and manage outbound campaigns\n            </p>\n          </div>\n          <div className=\"flex gap-2\">\n            <Button\n              variant=\"outline\"\n              onClick={handleRefresh}\n              title=\"Refresh Campaigns\"\n            >\n              <RefreshCw className=\"h-4 w-4 mr-2\" />\n              Refresh\n            </Button>\n           \n            <Button\n              className=\"bg-teal-600 hover:bg-teal-700 text-white\"\n              onClick={handleCreateCampaign}\n            >\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Create Campaign\n            </Button>\n          </div>\n        </div>\n\n        {/* Campaigns Section */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Phone className=\"h-5 w-5\" />\n              Campaigns\n            </CardTitle>\n            <CardDescription>\n              Manage your outbound call campaigns\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {campaignsLoading ? (\n              <div className=\"flex items-center justify-center h-32\">\n                <Loader2 className=\"h-8 w-8 animate-spin\" />\n              </div>\n            ) : (\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>Campaign Name</TableHead>\n                    <TableHead>Status</TableHead>\n                    <TableHead>Total Calls</TableHead>\n                    <TableHead>Completed</TableHead>\n                    <TableHead>Pick Up</TableHead>\n                    {/* <TableHead>Voicemail</TableHead> */}\n                    <TableHead>Actions</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {campaigns.length === 0 ? (\n                    <TableRow>\n                      <TableCell colSpan={7} className=\"text-center text-muted-foreground py-8\">\n                        No campaigns found. Create your first campaign to get started.\n                      </TableCell>\n                    </TableRow>\n                  ) : (\n                    campaigns.map((campaign: Campaign) => (\n                      <TableRow key={campaign.id}>\n                        <TableCell>\n                          <div>\n                            <div className=\"font-medium\">{campaign.name}</div>\n                            <div className=\"text-xs text-muted-foreground\">\n                              Created on {new Date(campaign.createdAt).toLocaleDateString()}\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>{getStatusBadge(campaign.status)}</TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center gap-1\">\n                            <Users className=\"h-3 w-3\" />\n                            {/* Show actual calls count - use customers length or ended calls */}\n                            {campaign.customers?.length || campaign.callsCounterEnded || 0}\n                            {campaign.status === \"in-progress\" && (\n                              <span className=\"ml-2 text-xs text-green-600 font-medium\">\n                                ({campaign.callsCounterInProgress || 0} active)\n                              </span>\n                            )}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center gap-1\">\n                            <CheckCircle className=\"h-3 w-3\" />\n                            {campaign.callsCounterEnded || 0}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center gap-1\">\n                            <BarChart3 className=\"h-3 w-3\" />\n                            {campaign.callsCounterEnded > 0 \n                              ? `${Math.round(((campaign.callsCounterEnded - campaign.callsCounterEndedVoicemail) / campaign.callsCounterEnded) * 100)}%`\n                              : \"0%\"\n                            }\n                          </div>\n                        </TableCell>\n                        {/* <TableCell>\n                          <div className=\"flex items-center gap-1\">\n                            <Phone className=\"h-3 w-3\" />\n                            {campaign.callsCounterEndedVoicemail || 0}\n                          </div>\n                        </TableCell> */}\n                        <TableCell>\n                          <div className=\"flex gap-2\">\n                            {campaign.status === \"scheduled\" && (\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={() => handleLaunchCampaign(campaign.id)}\n                                disabled={launchMutation.isPending}\n                                title=\"Launch Campaign\"\n                              >\n                                {launchMutation.isPending ? <Loader2 className=\"h-3 w-3 animate-spin\" /> : <Play className=\"h-3 w-3\" />}\n                              </Button>\n                            )}\n                            {campaign.status === \"in-progress\" && (\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={() => handlePauseCampaign(campaign.id)}\n                                disabled={pauseMutation.isPending}\n                                title=\"Pause Campaign\"\n                              >\n                                {pauseMutation.isPending ? <Loader2 className=\"h-3 w-3 animate-spin\" /> : <Pause className=\"h-3 w-3\" />}\n                              </Button>\n                            )}\n                            {(campaign.status === \"scheduled\" || campaign.status === \"in-progress\") && (\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={() => handleCancelCampaign(campaign.id)}\n                                disabled={cancelMutation.isPending}\n                                title=\"Cancel Campaign\"\n                              >\n                                {cancelMutation.isPending ? <Loader2 className=\"h-3 w-3 animate-spin\" /> : <Square className=\"h-3 w-3\" />}\n                              </Button>\n                            )}\n                            \n                            <Button\n                              size=\"sm\"\n                              variant=\"outline\"\n                              onClick={() => handleViewCampaign(campaign)}\n                              title=\"View Details\"\n                            >\n                              <Eye className=\"h-3 w-3\" />\n                            </Button>\n                            {campaign.status === \"ended\" && (\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={() => handleDeleteCampaign(campaign.id)}\n                                disabled={deleteMutation.isPending}\n                                title=\"Delete Campaign\"\n                              >\n                                {deleteMutation.isPending ? <Loader2 className=\"h-3 w-3 animate-spin\" /> : <Trash2 className=\"h-3 w-3\" />}\n                              </Button>\n                            )}\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  )}\n                </TableBody>\n              </Table>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Campaign Details Modal */}\n        {selectedCampaign && (\n          <Dialog open={isDetailsModalOpen} onOpenChange={setIsDetailsModalOpen}>\n            <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n              <CampaignDetailsModal\n                campaignId={selectedCampaign.id}\n                onClose={() => setIsDetailsModalOpen(false)}\n              />\n            </DialogContent>\n          </Dialog>\n        )}\n\n        {/* Insufficient Credits Modal */}\n        <Dialog open={showInsufficientCreditsModal} onOpenChange={setShowInsufficientCreditsModal}>\n          <DialogContent className=\"max-w-md\">\n            <div className=\"text-center p-6\">\n              <div className=\"flex justify-center mb-4\">\n                <div className=\"p-3 bg-orange-100 rounded-full\">\n                  <AlertCircle className=\"h-8 w-8 text-orange-600\" />\n                </div>\n              </div>\n\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                Insufficient Credits\n              </h3>\n\n              <p className=\"text-gray-600 mb-6\">\n                You need at least 1 credit to use campaign creation.\n                <span className=\"block mt-1\">\n                  Current balance: {currentBalance} credits\n                </span>\n              </p>\n\n              <div className=\"space-y-3\">\n                {/* <Button\n                  onClick={() => {\n                    setShowInsufficientCreditsModal(false);\n                    navigate('/credits/purchase');\n                  }}\n                  className=\"w-full bg-blue-600 hover:bg-blue-700 text-white\"\n                >\n                  <RefreshCw className=\"h-4 w-4 mr-2\" />\n                  Purchase Credits\n                </Button> */}\n\n                {/* <Button\n                  variant=\"outline\"\n                  onClick={() => setShowInsufficientCreditsModal(false)}\n                  className=\"w-full\"\n                >\n                  Cancel\n                </Button> */}\n\n                <p className=\"text-xs text-gray-500\">\n                  Credits are added instantly after purchase\n                </p>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </div>\n    </Page>\n  );\n};\n\nexport default Outbound;\n"],"names":["CampaignDetailsModal","campaignId","onClose","activeTab","setActiveTab","useState","selectedCallForRecording","setSelectedCallForRecording","showRecordingPlayer","setShowRecordingPlayer","campaignData","campaignLoading","useQuery","getCampaignById","callsData","callsLoading","getCampaignCalls","campaign","calls","callsList","formatCallForDisplay","call","duration","start","end","phoneNumberData","getPhoneNumberById","assistantData","getAssistantById","convertToCallHistoryItem","callId","converted","_a","_b","_c","getStatusBadge","status","config","jsx","Clock","Play","CheckCircle","Badge","getCallStatusBadge","variants","formatDuration","seconds","mins","secs","jsxs","Fragment","DialogHeader","DialogTitle","Loader2","DialogDescription","Tabs","TabsList","TabsTrigger","TabsContent","Card","CardHeader","CardTitle","Users","CardContent","BarChart3","Phone","_d","_e","CardDescription","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","formattedCall","Button","_f","sum","CallRecordingPlayer","getCampaignCallRecording","getCampaignCallTranscript","Outbound","navigate","useNavigate","isDetailsModalOpen","setIsDetailsModalOpen","selectedCampaign","setSelectedCampaign","showInsufficientCreditsModal","setShowInsufficientCreditsModal","currentBalance","setCurrentBalance","queryClient","useQueryClient","user","useAuth","isSuperAdmin","usePermissions","campaignsData","campaignsLoading","campaignsError","getAllCampaigns","failureCount","error","launchMutation","useMutation","launchCampaign","toast","message","pauseMutation","pauseCampaign","resumeCampaign","cancelMutation","cancelCampaign","deleteMutation","deleteCampaign","handleLaunchCampaign","handlePauseCampaign","handleCancelCampaign","handleDeleteCampaign","handleViewCampaign","handleRefresh","handleCreateCampaign","balance","axiosInstance","AlertCircle","campaigns","isInsufficientCredits","Page","RefreshCw","Plus","Pause","Square","Eye","Trash2","Dialog","DialogContent"],"mappings":"kqCA2BO,SAASA,GAAqB,CAAE,WAAAC,EAAY,QAAAC,GAAsC,iBACvF,KAAM,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAS,UAAU,EAC/C,CAACC,EAA0BC,CAA2B,EAAIF,EAAAA,SAA8B,IAAI,EAC5F,CAACG,EAAqBC,CAAsB,EAAIJ,EAAAA,SAAS,EAAK,EAG9D,CAAE,KAAMK,EAAc,UAAWC,CAAA,EAAoBC,EAAS,CAClE,SAAU,CAAC,WAAYX,CAAU,EACjC,QAAS,IAAMY,GAAgBZ,CAAU,EACzC,MAAO,CAAA,CACR,EAGK,CAAE,KAAMa,EAAW,UAAWC,CAAA,EAAiBH,EAAS,CAC5D,SAAU,CAAC,gBAAiBX,CAAU,EACtC,QAAS,IAAMe,GAAiBf,CAAU,EAC1C,MAAO,CAAA,CACR,EAEKgB,EAAqBP,GAAA,YAAAA,EAAc,KACnCQ,GAAsCJ,GAAA,YAAAA,EAAW,OAAQ,CAAC,EAC1DK,EAAY,OAAO,OAAOD,CAAK,EAG7B,QAAA,IAAI,0BAA2BA,CAAK,EACpC,QAAA,IAAI,iBAAkBC,CAAS,EACnCA,EAAU,OAAS,IACrB,QAAQ,IAAI,2BAA4BA,EAAU,CAAC,CAAC,EACpD,QAAQ,IAAI,0BAA2BA,EAAU,CAAC,EAAE,QAAQ,EAC5D,QAAQ,IAAI,wBAAyBA,EAAU,CAAC,EAAE,MAAM,GAIpD,MAAAC,EAAwBC,GAAuB,CAE/C,IAAAC,EAAWD,EAAK,UAAY,EAChC,GAAI,CAACC,GAAYD,EAAK,WAAaA,EAAK,QAAS,CAC/C,MAAME,EAAQ,IAAI,KAAKF,EAAK,SAAS,EAAE,QAAQ,EACzCG,EAAM,IAAI,KAAKH,EAAK,OAAO,EAAE,QAAQ,EAC3CC,EAAW,KAAK,OAAOE,EAAMD,GAAS,GAAI,CAAA,CAGrC,MAAA,CACL,GAAGF,EACH,SAAAC,EAEA,SAAUD,EAAK,UAAY,CAAE,KAAM,KAAM,MAAO,KAAM,OAAQ,IAAK,CACrE,CACF,EAGQ,QAAA,IAAI,kBAAmBP,GAAA,YAAAA,EAAW,IAAI,EACtC,QAAA,IAAI,gBAAiBI,CAAK,EAC1B,QAAA,IAAI,cAAeC,CAAS,EACpC,QAAQ,IAAI,sBAAuBA,EAAU,CAAC,CAAC,EAC3CA,EAAU,CAAC,IACb,QAAQ,IAAI,wBAAyBA,EAAU,CAAC,EAAE,EAAE,EACpD,QAAQ,IAAI,mBAAoB,OAAO,KAAKA,EAAU,CAAC,CAAC,CAAC,GAI3D,KAAM,CAAE,KAAMM,CAAgB,EAAIb,EAAS,CACzC,SAAU,CAAC,cAAeK,GAAA,YAAAA,EAAU,aAAa,EACjD,QAAS,IAAMS,GAAmBT,EAAS,aAAa,EACxD,QAAS,CAAC,EAACA,GAAA,MAAAA,EAAU,eACrB,MAAO,CAAA,CACR,EAGK,CAAE,KAAMU,CAAc,EAAIf,EAAS,CACvC,SAAU,CAAC,YAAaK,GAAA,YAAAA,EAAU,WAAW,EAC7C,QAAS,IAAMW,GAAiBX,EAAS,WAAY,EACrD,QAAS,CAAC,EAACA,GAAA,MAAAA,EAAU,aACrB,MAAO,CAAA,CACR,EAGKY,EAA4BR,GAAuB,WAC/C,QAAA,IAAI,+CAAgDA,CAAI,EAGhE,MAAMS,EAAST,EAAK,GAEdU,EAAY,CAChB,GAAID,EACJ,QAASA,EACT,kBAAiBE,EAAAX,EAAK,WAAL,YAAAW,EAAe,SAAU,GAC1C,OAAQX,EAAK,OACb,KAAM,WACN,SAAUA,EAAK,UAAY,EAC3B,KAAMA,EAAK,MAAQ,EACnB,WAAYA,EAAK,cAAcY,EAAAZ,EAAK,WAAL,YAAAY,EAAe,UAAW,GACzD,cAAeZ,EAAK,UACpB,aAAcA,EAAK,UACnB,UAAWA,EAAK,UAChB,aAAcJ,GAAA,YAAAA,EAAU,YACxB,gBAAgBiB,EAAAP,GAAA,YAAAA,EAAe,OAAf,YAAAO,EAAqB,KACrC,WAAYb,EAAK,YACjB,WAAYA,EAAK,UACjB,SAAUA,EAAK,QACf,WAAYA,EAAK,WAAiB,IAAA,KAAA,EAAO,YAAY,EACrD,WAAYA,EAAK,SAAe,IAAA,KAAA,EAAO,YAAY,EACnD,SAAU,CAAE,SAAUA,EAAK,QAAS,CACtC,EAEQ,eAAA,IAAI,6BAA8BU,CAAS,EAC5CA,CACT,EAEMI,EAAkBC,GAAmB,CAOnC,MAAAC,EANoH,CACxH,UAAW,CAAE,QAAS,UAAW,KAAOC,MAAAC,GAAA,CAAM,UAAU,cAAA,CAAe,CAAG,EAC1E,cAAe,CAAE,QAAS,UAAW,KAAOD,MAAAE,EAAA,CAAK,UAAU,cAAA,CAAe,CAAG,EAC7E,MAAO,CAAE,QAAS,YAAa,KAAOF,EAAA,IAAAG,EAAA,CAAY,UAAU,eAAe,CAAG,CAChF,EAEwBL,CAAM,GAAK,CAAE,QAAS,UAAW,KAAM,IAAK,EAEpE,cACGM,GAAM,CAAA,QAASL,EAAO,QAAS,UAAU,oBACvC,SAAA,CAAOA,EAAA,KACPD,IAAW,cAAgB,UAAYA,EAAO,OAAO,CAAC,EAAE,YAAY,EAAIA,EAAO,MAAM,CAAC,CAAA,EACzF,CAEJ,EAEMO,EAAsBP,GAAmB,CAC7C,MAAMQ,EAAgF,CACpF,OAAQ,UACR,QAAS,YACT,cAAe,UACf,MAAO,YACP,OAAQ,aACV,EACA,aAAQF,GAAM,CAAA,QAASE,EAASR,CAAM,GAAK,UAAY,SAAOA,EAAA,CAChE,EAEMS,EAAkBC,GAAqB,CACvC,GAAA,CAACA,EAAgB,MAAA,OACrB,MAAMC,EAAO,KAAK,MAAMD,EAAU,EAAE,EAC9BE,EAAOF,EAAU,GAChB,MAAA,GAAGC,CAAI,IAAIC,EAAK,SAAW,EAAA,SAAS,EAAG,GAAG,CAAC,EACpD,EAEA,OAAIrC,EAGEsC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAZ,MAACa,EACC,CAAA,SAAAb,EAAA,IAACc,EAAY,CAAA,SAAA,kBAAgB,CAAA,EAC/B,EACAd,EAAAA,IAAC,OAAI,UAAU,wCACb,eAACe,EAAQ,CAAA,UAAU,sBAAuB,CAAA,CAC5C,CAAA,CAAA,EACF,EAICpC,EAeDgC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAD,OAACE,EACC,CAAA,SAAA,CAACF,EAAAA,KAAAG,EAAA,CAAY,UAAU,0BACpB,SAAA,CAASnC,EAAA,KACTkB,EAAelB,EAAS,MAAM,CAAA,EACjC,SACCqC,GAAkB,CAAA,SAAA,CAAA,cACL,IAAI,KAAKrC,EAAS,SAAS,EAAE,mBAAmB,CAAA,CAC9D,CAAA,CAAA,EACF,SAECsC,GAAK,CAAA,MAAOpD,EAAW,cAAeC,EAAc,UAAU,SAC7D,SAAA,CAAC6C,EAAAA,KAAAO,GAAA,CAAS,UAAU,0BAClB,SAAA,CAAClB,EAAA,IAAAmB,EAAA,CAAY,MAAM,WAAW,SAAQ,WAAA,EACrCnB,EAAA,IAAAmB,EAAA,CAAY,MAAM,QAAQ,SAAK,QAAA,EAC/BnB,EAAA,IAAAmB,EAAA,CAAY,MAAM,YAAY,SAAS,WAAA,CAAA,CAAA,EAC1C,EAECR,EAAA,KAAAS,GAAA,CAAY,MAAM,WAAW,UAAU,YACtC,SAAA,CAACT,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAACU,EACC,CAAA,SAAA,CAAArB,EAAAA,IAACsB,GAAW,UAAU,OACpB,SAACX,EAAA,KAAAY,EAAA,CAAU,UAAU,8CACnB,SAAA,CAACvB,EAAAA,IAAAwB,GAAA,CAAM,UAAU,SAAU,CAAA,EAAE,aAAA,CAAA,CAE/B,CACF,CAAA,SACCC,EACC,CAAA,SAAA,CAAAzB,EAAA,IAAC,MAAI,CAAA,UAAU,qBACZ,SAAAnB,EAAU,OACb,EACCmB,EAAA,IAAA,IAAA,CAAE,UAAU,qCAAqC,SAElD,mBAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAECqB,EACC,CAAA,SAAA,CAAArB,EAAAA,IAACsB,GAAW,UAAU,OACpB,SAACX,EAAA,KAAAY,EAAA,CAAU,UAAU,8CACnB,SAAA,CAACvB,EAAAA,IAAAG,EAAA,CAAY,UAAU,SAAU,CAAA,EAAE,WAAA,CAAA,CAErC,CACF,CAAA,EACAH,EAAAA,IAACyB,GACC,SAACzB,EAAAA,IAAA,MAAA,CAAI,UAAU,qBAAsB,SAAArB,EAAS,mBAAqB,CAAE,CAAA,CACvE,CAAA,CAAA,EACF,SAEC0C,EACC,CAAA,SAAA,CAAArB,EAAAA,IAACsB,GAAW,UAAU,OACpB,SAACX,EAAA,KAAAY,EAAA,CAAU,UAAU,8CACnB,SAAA,CAACvB,EAAAA,IAAA0B,GAAA,CAAU,UAAU,SAAU,CAAA,EAAE,SAAA,CAAA,CAEnC,CACF,CAAA,EACA1B,EAAAA,IAACyB,GACC,SAACzB,EAAAA,IAAA,MAAA,CAAI,UAAU,qBACZ,SAAArB,EAAS,kBAAoB,EAC1B,GAAG,KAAK,OAAQA,EAAS,kBAAoBA,EAAS,4BAA8BA,EAAS,kBAAqB,GAAG,CAAC,IACtH,IAEN,CAAA,CACF,CAAA,CAAA,EACF,SAEC0C,EACC,CAAA,SAAA,CAAArB,EAAAA,IAACsB,GAAW,UAAU,OACpB,SAACX,EAAA,KAAAY,EAAA,CAAU,UAAU,8CACnB,SAAA,CAACvB,EAAAA,IAAA2B,GAAA,CAAM,UAAU,SAAU,CAAA,EAAE,WAAA,CAAA,CAE/B,CACF,CAAA,EACA3B,EAAAA,IAACyB,GACC,SAACzB,EAAAA,IAAA,MAAA,CAAI,UAAU,qBAAsB,SAAArB,EAAS,4BAA8B,CAAE,CAAA,CAChF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAEC0C,EACC,CAAA,SAAA,CAAArB,MAACsB,EACC,CAAA,SAAAtB,EAAA,IAACuB,EAAU,CAAA,SAAA,sBAAoB,CAAA,EACjC,QACCE,EAAY,CAAA,UAAU,YACrB,SAACd,EAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACX,EAAA,IAAA,IAAA,CAAE,UAAU,4CAA4C,SAAY,eAAA,EACrEA,EAAAA,IAAC,IAAE,CAAA,UAAU,oBACV,WAAAN,EAAAP,GAAA,YAAAA,EAAiB,OAAjB,YAAAO,EAAuB,WAAUC,EAAAR,GAAA,YAAAA,EAAiB,OAAjB,YAAAQ,EAAuB,eAAgBhB,EAAS,aACpF,CAAA,IACCiB,EAAAT,GAAA,YAAAA,EAAiB,OAAjB,YAAAS,EAAuB,SACrBI,EAAA,IAAA,IAAA,CAAE,UAAU,gCACV,SAAAb,EAAgB,KAAK,cAAgB,qBACxC,CAAA,CAAA,EAEJ,SACC,MACC,CAAA,SAAA,CAACa,EAAA,IAAA,IAAA,CAAE,UAAU,4CAA4C,SAAS,YAAA,EAClEA,EAAAA,IAAC,IAAE,CAAA,UAAU,UACV,WAAA4B,EAAAvC,GAAA,YAAAA,EAAe,OAAf,YAAAuC,EAAqB,OAAQjD,EAAS,aAAeA,EAAS,YAAc,KAC/E,CAAA,IACCkD,EAAAxC,GAAA,YAAAA,EAAe,OAAf,YAAAwC,EAAqB,OACnBlB,EAAA,KAAA,IAAA,CAAE,UAAU,gCAAgC,SAAA,CAAA,OACtChC,EAAS,WAAA,CAChB,CAAA,CAAA,EAEJ,SACC,MACC,CAAA,SAAA,CAACqB,EAAA,IAAA,IAAA,CAAE,UAAU,4CAA4C,SAAO,UAAA,EAChEA,EAAAA,IAAC,IAAE,CAAA,UAAU,UAAW,SAAA,IAAI,KAAKrB,EAAS,SAAS,EAAE,eAAA,CAAiB,CAAA,CAAA,EACxE,SACC,MACC,CAAA,SAAA,CAACqB,EAAA,IAAA,IAAA,CAAE,UAAU,4CAA4C,SAAY,eAAA,EACrEA,EAAAA,IAAC,IAAE,CAAA,UAAU,UAAW,SAAA,IAAI,KAAKrB,EAAS,SAAS,EAAE,eAAA,CAAiB,CAAA,CAAA,CACxE,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,QAECyC,GAAY,CAAA,MAAM,QAAQ,UAAU,YACnC,gBAACC,EACC,CAAA,SAAA,CAAAV,OAACW,EACC,CAAA,SAAA,CAACX,EAAAA,KAAAY,EAAA,CAAU,UAAU,0BACnB,SAAA,CAACvB,EAAAA,IAAA2B,GAAA,CAAM,UAAU,SAAU,CAAA,EAAE,gBAAA,EAE/B,EACA3B,EAAAA,IAAC8B,IAAgB,SAEjB,sCAAA,CAAA,CAAA,EACF,EACC9B,MAAAyB,EAAA,CACE,SACChD,EAAAuB,EAAAA,IAAC,OAAI,UAAU,wCACb,SAACA,EAAAA,IAAAe,EAAA,CAAQ,UAAU,sBAAuB,CAAA,CAC5C,CAAA,SAECgB,GACC,CAAA,SAAA,CAAC/B,EAAA,IAAAgC,GAAA,CACC,gBAACC,EACC,CAAA,SAAA,CAAAjC,EAAAA,IAACkC,GAAU,SAAQ,UAAA,CAAA,EACnBlC,EAAAA,IAACkC,GAAU,SAAY,cAAA,CAAA,EACvBlC,EAAAA,IAACkC,GAAU,SAAM,QAAA,CAAA,EACjBlC,EAAAA,IAACkC,GAAU,SAAQ,UAAA,CAAA,EACnBlC,EAAAA,IAACkC,GAAU,SAAO,SAAA,CAAA,EAClBlC,EAAAA,IAACkC,GAAU,SAAS,WAAA,CAAA,CAAA,CAAA,CACtB,CACF,CAAA,QACCC,GACE,CAAA,SAAAtD,EAAU,SAAW,EACpBmB,MAACiC,GACC,SAACjC,EAAAA,IAAAoC,EAAA,CAAU,QAAS,EAAG,UAAU,yCAAyC,SAE1E,mCAAA,CAAA,CACF,EAEAvD,EAAU,IAAKE,GAAS,WAChB,MAAAsD,EAAgBvD,EAAqBC,CAAI,EAC/C,cACCkD,EACC,CAAA,SAAA,CAACjC,EAAA,IAAAoC,EAAA,CACC,gBAAC,MACC,CAAA,SAAA,CAAApC,MAAC,OAAI,UAAU,cAAe,WAAcN,EAAA2C,EAAA,WAAA,YAAA3C,EAAU,OAAQ,mBAAmB,QAChF,MAAI,CAAA,UAAU,gCAAiC,WAAcC,EAAA0C,EAAA,WAAA,YAAA1C,EAAU,QAAS,GAAI,CAAA,CAAA,CAAA,CACvF,CACF,CAAA,QACCyC,EAAU,CAAA,UAAU,YAAa,WAAcxC,EAAAyC,EAAA,WAAA,YAAAzC,EAAU,SAAU,IAAI,EACvEI,EAAA,IAAAoC,EAAA,CAAW,SAAmB/B,EAAAgC,EAAc,MAAM,EAAE,QACpDD,EAAW,CAAA,SAAA7B,EAAe8B,EAAc,QAAQ,EAAE,EACnDrC,EAAAA,IAACoC,EACE,CAAA,SAAAC,EAAc,UAAY,IAAI,KAAKA,EAAc,SAAS,EAAE,eAAe,EAAI,GAClF,CAAA,EACCrC,MAAAoC,EAAA,CACC,SAACpC,EAAA,IAAA,MAAA,CAAI,UAAU,aACb,SAAAW,EAAA,KAAC2B,EAAA,CACC,KAAK,KACL,QAAQ,UACR,QAAS,IAAM,CACbrE,EAA4Bc,CAAI,EAChCZ,EAAuB,EAAI,CAC7B,EACA,MAAM,mCAEN,SAAA,CAAC6B,EAAAA,IAAAE,EAAA,CAAK,UAAU,cAAe,CAAA,EAAE,WAAA,CAAA,GAGrC,CACF,CAAA,CAAA,CAAA,EA5BanB,EAAK,EA6BpB,CAAA,CAED,CAEL,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAEAiB,EAAAA,IAACoB,IAAY,MAAM,YAAY,UAAU,YACvC,SAAAT,EAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAA,OAACU,EACC,CAAA,SAAA,CAAArB,MAACsB,EACC,CAAA,SAAAtB,EAAA,IAACuB,EAAU,CAAA,SAAA,0BAAwB,CAAA,EACrC,EACCvB,MAAAyB,EAAA,CACC,SAACd,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAACX,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAS,YAAA,QAClC,OAAK,CAAA,UAAU,sBAAuB,SAAArB,EAAS,uBAAyB,CAAE,CAAA,CAAA,EAC7E,EACAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAACX,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAM,SAAA,QAC/B,OAAK,CAAA,UAAU,sBAAuB,SAAArB,EAAS,oBAAsB,CAAE,CAAA,CAAA,EAC1E,EACAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAACX,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAW,cAAA,QACpC,OAAK,CAAA,UAAU,sBAAuB,SAAArB,EAAS,wBAA0B,CAAE,CAAA,CAAA,EAC9E,EACAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAACX,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAS,YAAA,QAClC,OAAK,CAAA,UAAU,sBAAuB,SAAArB,EAAS,mBAAqB,CAAE,CAAA,CAAA,EACzE,EACAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAACX,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAS,YAAA,QAClC,OAAK,CAAA,UAAU,sBAAuB,SAAArB,EAAS,4BAA8B,CAAE,CAAA,CAAA,CAClF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,SAEC0C,EACC,CAAA,SAAA,CAAArB,MAACsB,EACC,CAAA,SAAAtB,EAAA,IAACuB,EAAU,CAAA,SAAA,qBAAmB,CAAA,EAChC,EACCvB,MAAAyB,EAAA,CACC,SAACd,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAACX,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAY,eAAA,QACrC,OAAK,CAAA,UAAU,sBACb,SAASrB,EAAA,kBAAoB,EAC1B,GAAG,KAAK,OAAQA,EAAS,kBAAoBA,EAAS,4BAA8BA,EAAS,kBAAqB,GAAG,CAAC,IACtH,IAEN,CAAA,CAAA,EACF,EACAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAACX,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAe,kBAAA,QACxC,OAAK,CAAA,UAAU,sBACb,WAASuC,EAAA5D,EAAA,YAAA,YAAA4D,EAAW,QAAS,EAC1B,GAAG,KAAK,MAAO5D,EAAS,kBAAoBA,EAAS,UAAU,OAAU,GAAG,CAAC,IAC7E,IAEN,CAAA,CAAA,EACF,EACAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAACX,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAY,eAAA,EACtCA,EAAAA,IAAC,OAAK,CAAA,UAAU,sBACb,SAAAnB,EAAU,OAAS,EAChB0B,EAAe,KAAK,MAAM1B,EAAU,OAAO,CAAC2D,EAAKzD,IAASyD,GAAOzD,EAAK,UAAY,GAAI,CAAC,EAAIF,EAAU,MAAM,CAAC,EAC5G,MAEN,CAAA,CAAA,EACF,EACA8B,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAACX,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAU,aAAA,EACpCW,EAAAA,KAAC,OAAK,CAAA,UAAU,sBAAsB,SAAA,CAAA,IAClC9B,EAAU,OAAO,CAAC2D,EAAKzD,IAASyD,GAAOzD,EAAK,MAAQ,GAAI,CAAC,EAAE,QAAQ,CAAC,CAAA,CACxE,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAEA4B,EAAAA,KAACU,EAAK,CAAA,UAAU,gBACd,SAAA,CAAArB,MAACsB,EACC,CAAA,SAAAtB,EAAA,IAACuB,EAAU,CAAA,SAAA,eAAa,CAAA,EAC1B,EACCvB,MAAAyB,EAAA,CACC,SAACd,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAAAX,MAAC,MAAI,CAAA,UAAU,oCACZ,SAAAnB,EAAU,OAAeE,GAAAA,EAAK,SAAW,SAAWA,EAAK,UAAYA,EAAK,SAAW,EAAE,EAAE,OAC5F,EACCiB,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAAgB,kBAAA,CAAA,CAAA,EACjE,EACAW,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAX,MAAC,OAAI,UAAU,qCACZ,SAAUnB,EAAA,UAAeE,EAAK,SAAW,UAAY,CAACA,EAAK,UAAYA,EAAK,UAAY,GAAG,EAAE,OAChG,EACCiB,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAAW,aAAA,CAAA,CAAA,EAC5D,EACAW,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAX,MAAC,MAAI,CAAA,UAAU,qCACZ,SAAArB,EAAS,4BAA8B,EAC1C,EACCqB,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAAU,YAAA,CAAA,CAAA,EAC3D,EACAW,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACX,EAAAA,IAAA,MAAA,CAAI,UAAU,kCACZ,SAAUnB,EAAA,UAAeE,EAAK,SAAW,OAAO,EAAE,MACrD,CAAA,EACCiB,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAAY,cAAA,CAAA,CAAA,CAC7D,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,OAAI,UAAU,iCACb,eAACsC,EAAO,CAAA,QAAS1E,EAAS,SAAA,OAAA,CAAK,CACjC,CAAA,EAGCM,GAAuBF,GACtBgC,EAAA,IAACyC,GAAA,CACC,KAAMlD,EAAyBvB,CAAwB,EACvD,OAAQE,EACR,QAAS,IAAM,CACbC,EAAuB,EAAK,EAC5BF,EAA4B,IAAI,CAClC,EACA,mBAAoByE,GACpB,oBAAqBC,EAAA,CAAA,CACvB,EAEJ,EAnVIhC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAZ,MAACa,EACC,CAAA,SAAAb,EAAA,IAACc,EAAY,CAAA,SAAA,kBAAgB,CAAA,EAC/B,EACAd,EAAAA,IAAC,OAAI,UAAU,mBACb,eAAC,IAAE,CAAA,UAAU,wBAAwB,SAAA,oBAAkB,CAAA,CACzD,CAAA,CAAA,EACF,CA+UN,CCrfA,MAAM4C,GAAW,IAAM,OACrB,MAAMC,EAAWC,GAAY,EACvB,CAACC,EAAoBC,CAAqB,EAAIjF,EAAAA,SAAS,EAAK,EAC5D,CAACkF,EAAkBC,CAAmB,EAAInF,EAAAA,SAA0B,IAAI,EACxE,CAACoF,EAA8BC,CAA+B,EAAIrF,EAAAA,SAAS,EAAK,EAChF,CAACsF,EAAgBC,CAAiB,EAAIvF,EAAAA,SAAS,CAAC,EAEhDwF,EAAcC,GAAe,EAC7B,CAAE,KAAAC,CAAK,EAAIC,GAAQ,EACnB,CAAE,aAAAC,CAAa,EAAIC,GAAe,EAGlC,CAAE,KAAMC,EAAe,UAAWC,EAAkB,MAAOC,GAAmBzF,EAAS,CAC3F,SAAU,CAAC,mBAAmB,EAC9B,QAAS,IAAM0F,GAAgB,EAC/B,MAAO,CAACC,EAAcC,IAAe,OAGnC,MADyB,CAAC,IAAK,IAAK,GAAG,EAClB,UAASxE,EAAAwE,GAAA,YAAAA,EAAO,WAAP,YAAAxE,EAAiB,MAAM,EAC5C,GAEFuE,EAAe,CAAA,CACxB,CACD,EAGKE,EAAiBC,EAAY,CACjC,WAAYC,GACZ,UAAW,IAAM,CACfd,EAAY,kBAAkB,CAAE,SAAU,CAAC,mBAAmB,EAAG,EACjEe,EAAM,QAAQ,gCAAgC,CAChD,EACA,QAAUJ,GAAe,eACvB,MAAMK,IAAU5E,GAAAD,EAAAwE,EAAM,WAAN,YAAAxE,EAAgB,OAAhB,YAAAC,EAAsB,UAAW,8BAC3BiC,IAAAhC,GAAAsE,EAAM,WAAN,YAAAtE,GAAgB,OAAhB,YAAAgC,GAAsB,iBAEtB,cACpB0C,EAAM,KAAK,6BAA6B,EAExCA,EAAM,MAAMC,CAAO,EAIrBhB,EAAY,kBAAkB,CAAE,SAAU,CAAC,mBAAmB,EAAG,CAAA,CACnE,CACD,EAGKiB,EAAgBJ,EAAY,CAChC,WAAYK,GACZ,UAAW,IAAM,CACflB,EAAY,kBAAkB,CAAE,SAAU,CAAC,mBAAmB,EAAG,CAAA,CACnE,CACD,EAGsBa,EAAY,CACjC,WAAYM,GACZ,UAAW,IAAM,CACfnB,EAAY,kBAAkB,CAAE,SAAU,CAAC,mBAAmB,EAAG,CAAA,CAEpE,CAAA,EAGD,MAAMoB,EAAiBP,EAAY,CACjC,WAAYQ,GACZ,UAAW,IAAM,CACfrB,EAAY,kBAAkB,CAAE,SAAU,CAAC,mBAAmB,EAAG,CAAA,CACnE,CACD,EAGKsB,EAAiBT,EAAY,CACjC,WAAYU,GACZ,UAAW,IAAM,CACfvB,EAAY,kBAAkB,CAAE,SAAU,CAAC,mBAAmB,EAAG,CAAA,CACnE,CACD,EAEKwB,EAAwBpH,GAAuB,CACnDwG,EAAe,OAAOxG,CAAU,CAClC,EAEMqH,EAAuBrH,GAAuB,CAClD6G,EAAc,OAAO7G,CAAU,CACjC,EAMMsH,EAAwBtH,GAAuB,CAC/C,QAAQ,gDAAgD,GAC1DgH,EAAe,OAAOhH,CAAU,CAEpC,EAEMuH,EAAwBvH,GAAuB,CAC/C,QAAQ,8EAA8E,GACxFkH,EAAe,OAAOlH,CAAU,CAEpC,EAEMwH,EAAsBxG,GAAuB,CACjDuE,EAAoBvE,CAAQ,EAC5BqE,EAAsB,EAAI,CAC5B,EAaMoC,EAAgB,IAAM,CAC1B7B,EAAY,kBAAkB,CAAE,SAAU,CAAC,mBAAmB,EAAG,EACjEe,EAAM,QAAQ,qBAAqB,CACrC,EAEMe,EAAuB,SAAY,CAEvC,GAAI1B,EAAc,CAChBd,EAAS,2BAA2B,EACpC,MAAA,CAGE,GAAA,CAGI,MAAAyC,GADW,MAAMC,GAAc,IAAI,sBAAsB,GACtC,KAAK,KAE9B,GAAI,CAACD,GAAW,WAAWA,EAAQ,iBAAiB,EAAI,EAAG,CAEvChC,GAAAgC,GAAA,YAAAA,EAAS,oBAAqB,CAAC,EACjDlC,EAAgC,EAAI,EACpC,MAAA,CAIFP,EAAS,2BAA2B,QAC7BqB,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,EACrDI,EAAM,MAAM,oDAAoD,CAAA,CAEpE,EAEMzE,EAAkBC,GAAmB,CAOnC,MAAAC,EANmI,CACvI,UAAW,CAAE,QAAS,UAAW,KAAOC,EAAA,IAAAC,GAAA,CAAM,UAAU,cAAA,CAAe,EAAI,MAAO,WAAY,EAC9F,cAAe,CAAE,QAAS,UAAW,KAAOD,EAAA,IAAAE,EAAA,CAAK,UAAU,cAAA,CAAe,EAAI,MAAO,SAAU,EAC/F,MAAO,CAAE,QAAS,YAAa,KAAOF,EAAA,IAAAG,EAAA,CAAY,UAAU,eAAe,EAAI,MAAO,OAAQ,CAChG,EAEwBL,CAAM,GAAK,CACjC,QAAS,UACT,KAAME,EAAAA,IAACwF,EAAY,CAAA,UAAU,cAAe,CAAA,EAC5C,MAAO1F,EAAO,OAAO,CAAC,EAAE,cAAgBA,EAAO,MAAM,CAAC,CACxD,EAEA,cACGM,GAAM,CAAA,QAASL,EAAO,QAAS,UAAU,oBACvC,SAAA,CAAOA,EAAA,KACPA,EAAO,KAAA,EACV,CAEJ,EAEM0F,EAAY,MAAM,QAAQ5B,GAAA,YAAAA,EAAe,IAAI,EAAIA,EAAc,KAAO,CAAC,EAE7E,GAAIE,EAAgB,CAElB,MAAM2B,IADehG,EAAAqE,GAAA,YAAAA,EAAwB,WAAxB,YAAArE,EAAkC,UACT,IAE9C,OACGM,EAAA,IAAA2F,GAAA,CACC,SAAChF,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACX,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAQ,WAAA,EACzDA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAErC,sCAAA,CAAA,CAAA,EACF,EACAA,MAACqB,EACC,CAAA,SAAArB,EAAAA,IAACyB,EAAY,CAAA,UAAU,OACrB,SAAAzB,EAAA,IAAC,MAAI,CAAA,UAAU,cACZ,SAAA0F,EAEG/E,EAAA,KAAAC,WAAA,CAAA,SAAA,CAACZ,EAAAA,IAAAwF,EAAA,CAAY,UAAU,wCAAyC,CAAA,EAC/DxF,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA6B,SAAoB,uBAAA,EAC9DA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAE1C,qFAAA,EACAW,EAAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAACX,EAAAA,IAAAsC,EAAA,CAAO,QAAS,IAAMO,EAAS,mBAAmB,EAAG,UAAU,oCAAoC,SAEpG,kBAAA,CAAA,EACAlC,EAAAA,KAAC2B,GAAO,QAAQ,UAAU,QAAS,IAAM,OAAO,SAAS,OACvD,EAAA,SAAA,CAACtC,EAAAA,IAAA4F,GAAA,CAAU,UAAU,cAAe,CAAA,EAAE,SAAA,CAExC,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EAGEjF,EAAAA,KAAAC,EAAA,SAAA,CAAA,SAAA,CAACZ,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAE1C,qFAAA,EACAA,MAACsC,GAAO,QAAS,IAAM,OAAO,SAAS,OAAA,EAAU,SAEjD,kBAAA,CAAA,CAAA,EACF,CAAA,CAEJ,EACF,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAIJ,OACGtC,EAAA,IAAA2F,GAAA,CACC,SAAChF,EAAAA,KAAA,MAAA,CAAI,UAAU,YAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACX,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAQ,WAAA,EACzDA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAErC,sCAAA,CAAA,CAAA,EACF,EACAW,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAA,EAAA,KAAC2B,EAAA,CACC,QAAQ,UACR,QAAS8C,EACT,MAAM,oBAEN,SAAA,CAACpF,EAAAA,IAAA4F,GAAA,CAAU,UAAU,cAAe,CAAA,EAAE,SAAA,CAAA,CAExC,EAEAjF,EAAA,KAAC2B,EAAA,CACC,UAAU,2CACV,QAAS+C,EAET,SAAA,CAACrF,EAAAA,IAAA6F,GAAA,CAAK,UAAU,cAAe,CAAA,EAAE,iBAAA,CAAA,CAAA,CAEnC,CACF,CAAA,CAAA,EACF,SAGCxE,EACC,CAAA,SAAA,CAAAV,OAACW,EACC,CAAA,SAAA,CAACX,EAAAA,KAAAY,EAAA,CAAU,UAAU,0BACnB,SAAA,CAACvB,EAAAA,IAAA2B,GAAA,CAAM,UAAU,SAAU,CAAA,EAAE,WAAA,EAE/B,EACA3B,EAAAA,IAAC8B,IAAgB,SAEjB,qCAAA,CAAA,CAAA,EACF,EACC9B,MAAAyB,EAAA,CACE,SACCqC,EAAA9D,EAAAA,IAAC,OAAI,UAAU,wCACb,SAACA,EAAAA,IAAAe,EAAA,CAAQ,UAAU,sBAAuB,CAAA,CAC5C,CAAA,SAECgB,GACC,CAAA,SAAA,CAAC/B,EAAA,IAAAgC,GAAA,CACC,gBAACC,EACC,CAAA,SAAA,CAAAjC,EAAAA,IAACkC,GAAU,SAAa,eAAA,CAAA,EACxBlC,EAAAA,IAACkC,GAAU,SAAM,QAAA,CAAA,EACjBlC,EAAAA,IAACkC,GAAU,SAAW,aAAA,CAAA,EACtBlC,EAAAA,IAACkC,GAAU,SAAS,WAAA,CAAA,EACpBlC,EAAAA,IAACkC,GAAU,SAAO,SAAA,CAAA,EAElBlC,EAAAA,IAACkC,GAAU,SAAO,SAAA,CAAA,CAAA,CAAA,CACpB,CACF,CAAA,EACAlC,EAAAA,IAACmC,IACE,SAAUsD,EAAA,SAAW,EACnBzF,EAAA,IAAAiC,EAAA,CACC,eAACG,EAAU,CAAA,QAAS,EAAG,UAAU,yCAAyC,0EAE1E,CACF,CAAA,EAEAqD,EAAU,IAAK9G,GACb,OAAAgC,OAAAA,EAAA,KAACsB,EACC,CAAA,SAAA,CAACjC,EAAA,IAAAoC,EAAA,CACC,gBAAC,MACC,CAAA,SAAA,CAAApC,EAAA,IAAC,MAAI,CAAA,UAAU,cAAe,SAAArB,EAAS,KAAK,EAC5CgC,EAAAA,KAAC,MAAI,CAAA,UAAU,gCAAgC,SAAA,CAAA,cACjC,IAAI,KAAKhC,EAAS,SAAS,EAAE,mBAAmB,CAAA,CAC9D,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EACCqB,EAAA,IAAAoC,EAAA,CAAW,SAAevC,EAAAlB,EAAS,MAAM,EAAE,EAC3CqB,MAAAoC,EAAA,CACC,SAACzB,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACX,EAAAA,IAAAwB,GAAA,CAAM,UAAU,SAAU,CAAA,IAE1B9B,EAAAf,EAAS,YAAT,YAAAe,EAAoB,SAAUf,EAAS,mBAAqB,EAC5DA,EAAS,SAAW,eAClBgC,EAAA,KAAA,OAAA,CAAK,UAAU,0CAA0C,SAAA,CAAA,IACtDhC,EAAS,wBAA0B,EAAE,UAAA,CACzC,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,EACCqB,MAAAoC,EAAA,CACC,SAACzB,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACX,EAAAA,IAAAG,EAAA,CAAY,UAAU,SAAU,CAAA,EAChCxB,EAAS,mBAAqB,CAAA,CAAA,CACjC,CACF,CAAA,EACCqB,MAAAoC,EAAA,CACC,SAACzB,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACX,EAAAA,IAAA0B,GAAA,CAAU,UAAU,SAAU,CAAA,EAC9B/C,EAAS,kBAAoB,EAC1B,GAAG,KAAK,OAAQA,EAAS,kBAAoBA,EAAS,4BAA8BA,EAAS,kBAAqB,GAAG,CAAC,IACtH,IAAA,CAAA,CAEN,CACF,CAAA,EAOCqB,MAAAoC,EAAA,CACC,SAACzB,EAAAA,KAAA,MAAA,CAAI,UAAU,aACZ,SAAA,CAAAhC,EAAS,SAAW,aACnBqB,EAAA,IAACsC,EAAA,CACC,KAAK,KACL,QAAQ,UACR,QAAS,IAAMyC,EAAqBpG,EAAS,EAAE,EAC/C,SAAUwF,EAAe,UACzB,MAAM,kBAEL,SAAAA,EAAe,UAAYnE,EAAA,IAACe,EAAQ,CAAA,UAAU,uBAAuB,EAAKf,EAAA,IAACE,EAAK,CAAA,UAAU,SAAU,CAAA,CAAA,CACvG,EAEDvB,EAAS,SAAW,eACnBqB,EAAA,IAACsC,EAAA,CACC,KAAK,KACL,QAAQ,UACR,QAAS,IAAM0C,EAAoBrG,EAAS,EAAE,EAC9C,SAAU6F,EAAc,UACxB,MAAM,iBAEL,SAAAA,EAAc,UAAYxE,EAAA,IAACe,EAAQ,CAAA,UAAU,uBAAuB,EAAKf,EAAA,IAAC8F,GAAM,CAAA,UAAU,SAAU,CAAA,CAAA,CACvG,GAEAnH,EAAS,SAAW,aAAeA,EAAS,SAAW,gBACvDqB,EAAA,IAACsC,EAAA,CACC,KAAK,KACL,QAAQ,UACR,QAAS,IAAM2C,EAAqBtG,EAAS,EAAE,EAC/C,SAAUgG,EAAe,UACzB,MAAM,kBAEL,SAAAA,EAAe,UAAY3E,EAAA,IAACe,EAAQ,CAAA,UAAU,uBAAuB,EAAKf,EAAA,IAAC+F,GAAO,CAAA,UAAU,SAAU,CAAA,CAAA,CACzG,EAGF/F,EAAA,IAACsC,EAAA,CACC,KAAK,KACL,QAAQ,UACR,QAAS,IAAM6C,EAAmBxG,CAAQ,EAC1C,MAAM,eAEN,SAAAqB,EAAAA,IAACgG,GAAI,CAAA,UAAU,SAAU,CAAA,CAAA,CAC3B,EACCrH,EAAS,SAAW,SACnBqB,EAAA,IAACsC,EAAA,CACC,KAAK,KACL,QAAQ,UACR,QAAS,IAAM4C,EAAqBvG,EAAS,EAAE,EAC/C,SAAUkG,EAAe,UACzB,MAAM,kBAEL,SAAAA,EAAe,UAAY7E,EAAA,IAACe,EAAQ,CAAA,UAAU,uBAAuB,EAAKf,EAAA,IAACiG,GAAO,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CACzG,CAAA,CAEJ,CACF,CAAA,CAAA,GAnGatH,EAAS,EAoGxB,EACD,CAEL,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,EACF,EAGCsE,GACEjD,EAAA,IAAAkG,GAAA,CAAO,KAAMnD,EAAoB,aAAcC,EAC9C,SAAAhD,EAAAA,IAACmG,GAAc,CAAA,UAAU,yCACvB,SAAAnG,EAAA,IAACtC,GAAA,CACC,WAAYuF,EAAiB,GAC7B,QAAS,IAAMD,EAAsB,EAAK,CAAA,GAE9C,CACF,CAAA,EAIDhD,MAAAkG,GAAA,CAAO,KAAM/C,EAA8B,aAAcC,EACxD,SAACpD,MAAAmG,GAAA,CAAc,UAAU,WACvB,SAACxF,EAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAX,EAAA,IAAC,MAAI,CAAA,UAAU,2BACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,iCACb,SAAAA,EAAA,IAACwF,EAAY,CAAA,UAAU,yBAA0B,CAAA,CACnD,CAAA,EACF,EAECxF,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAEzD,uBAAA,EAEAW,EAAAA,KAAC,IAAE,CAAA,UAAU,qBAAqB,SAAA,CAAA,uDAEhCA,EAAAA,KAAC,OAAK,CAAA,UAAU,aAAa,SAAA,CAAA,oBACT0C,EAAe,UAAA,CACnC,CAAA,CAAA,EACF,EAEArD,EAAAA,IAAC,OAAI,UAAU,YAoBb,eAAC,IAAE,CAAA,UAAU,wBAAwB,SAAA,4CAErC,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ"}