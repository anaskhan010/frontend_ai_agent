{"version":3,"file":"VoicePreviewTest-CBqCG4gv.js","sources":["../../src/components/VoicePreviewTest.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport secureLocalStorage from 'react-secure-storage';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Play, Pause, Loader2, Volume2 } from 'lucide-react';\nimport { toast } from 'sonner';\nimport { VOICE_PROVIDERS } from '@/config/vapiProviders';\nimport axiosInstance from '@/api/axios/axiosInstance';\n\ninterface VoicePreviewButtonProps {\n  previewUrl: string;\n  voiceName: string;\n  provider: string;\n}\n\nconst VoicePreviewButton: React.FC<VoicePreviewButtonProps> = ({ previewUrl, voiceName, provider }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [audio, setAudio] = useState<HTMLAudioElement | null>(null);\n  const [hasError, setHasError] = useState(false);\n\n  // Cleanup function\n  const cleanup = () => {\n    if (audio) {\n      audio.pause();\n      audio.removeEventListener('loadstart', handleLoadStart);\n      audio.removeEventListener('canplay', handleCanPlay);\n      audio.removeEventListener('ended', handleEnded);\n      audio.removeEventListener('error', handleError);\n      audio.removeEventListener('loadeddata', handleLoadedData);\n      setAudio(null);\n    }\n  };\n\n  // Event handlers\n  const handleLoadStart = () => setIsLoading(true);\n  const handleCanPlay = () => setIsLoading(false);\n  const handleLoadedData = () => setIsLoading(false);\n  const handleEnded = () => {\n    setIsPlaying(false);\n    setIsLoading(false);\n  };\n  const handleError = (e: Event) => {\n    console.error('Audio error for', voiceName, 'from', provider, ':', e);\n    setIsLoading(false);\n    setIsPlaying(false);\n    setHasError(true);\n    toast.error(`Preview not available for ${voiceName} (${provider})`);\n  };\n\n  const handlePlayPause = async () => {\n    if (isPlaying && audio) {\n      audio.pause();\n      setIsPlaying(false);\n      return;\n    }\n\n    // Reset error state\n    setHasError(false);\n\n    try {\n      setIsLoading(true);\n\n      // Cleanup previous audio\n      cleanup();\n\n      // Validate URL\n      if (!previewUrl || previewUrl.trim() === '') {\n        throw new Error('No preview URL available');\n      }\n\n      // Check if this is a dynamic preview URL (starts with /api/voices/preview)\n      if (previewUrl.startsWith('/api/voices/preview')) {\n        // Handle dynamic preview generation\n        await handleDynamicPreview(previewUrl);\n      } else {\n        // Handle static preview URLs\n        await handleStaticPreview(previewUrl);\n      }\n\n    } catch (error) {\n      console.error('Error playing voice preview:', error);\n      setIsLoading(false);\n      setIsPlaying(false);\n      setHasError(true);\n\n      // More specific error messages\n      if (error instanceof Error) {\n        if (error.message.includes('timeout')) {\n          toast.error(`Preview timeout for ${voiceName}`);\n        } else if (error.message.includes('No preview URL')) {\n          toast.error(`No preview available for ${voiceName}`);\n        } else if (error.message.includes('Voice preview not available')) {\n          toast.error(`${voiceName} preview is currently unavailable`);\n        } else {\n          toast.error(`Preview unavailable for ${voiceName}`);\n        }\n      } else {\n        toast.error(`Failed to play preview for ${voiceName}`);\n      }\n    }\n  };\n\n  // Handle dynamic preview generation\n  const handleDynamicPreview = async (previewUrl: string) => {\n    try {\n      // Use axiosInstance which already has proper authentication setup\n      const response = await axiosInstance.get(previewUrl);\n\n      console.log('🎵 Voice preview response:', response.data);\n\n      if (response.data.success && response.data.audioUrl) {\n        // Play the generated audio\n        console.log('✅ Playing audio from:', response.data.audioUrl);\n        await handleStaticPreview(response.data.audioUrl);\n        toast.success(`Playing ${voiceName} from ${provider}`);\n      } else if (response.data.note) {\n        // Show informative message about preview status (don't throw error)\n        console.log('ℹ️ Showing note:', response.data.note);\n        toast.info(response.data.note);\n        setIsLoading(false);\n        return; // Exit gracefully without throwing error\n      } else if (response.data.message && !response.data.audioUrl) {\n        // Show backend message when no audio URL\n        console.log('ℹ️ Showing message:', response.data.message);\n        toast.info(response.data.message);\n        setIsLoading(false);\n        return; // Exit gracefully without throwing error\n      } else {\n        // Fallback error\n        console.log('❌ No audio URL or note found in response');\n        throw new Error('Voice preview not available');\n      }\n    } catch (error: any) {\n      if (error.response?.status === 401) {\n        throw new Error('Authentication failed - please log in again');\n      }\n      throw error;\n    }\n  };\n\n  // Handle static preview URLs\n  const handleStaticPreview = async (audioUrl: string) => {\n    const newAudio = new Audio();\n\n    // Set up event listeners before setting src\n    newAudio.addEventListener('loadstart', handleLoadStart);\n    newAudio.addEventListener('canplay', handleCanPlay);\n    newAudio.addEventListener('loadeddata', handleLoadedData);\n    newAudio.addEventListener('ended', handleEnded);\n    newAudio.addEventListener('error', handleError);\n\n    // Configure audio settings\n    newAudio.preload = 'metadata';\n    newAudio.crossOrigin = 'anonymous';\n\n    setAudio(newAudio);\n\n    // Set source and load\n    newAudio.src = audioUrl;\n    newAudio.load();\n\n    // Wait for audio to be ready\n    await new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        reject(new Error('Audio load timeout'));\n      }, 10000); // 10 second timeout\n\n      newAudio.addEventListener('canplay', () => {\n        clearTimeout(timeout);\n        resolve(void 0);\n      }, { once: true });\n\n      newAudio.addEventListener('error', () => {\n        clearTimeout(timeout);\n        reject(new Error('Audio load failed'));\n      }, { once: true });\n    });\n\n    // Play the audio\n    await newAudio.play();\n    setIsPlaying(true);\n    setIsLoading(false);\n    toast.success(`Playing ${voiceName} from ${provider}`);\n  };\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return cleanup;\n  }, []);\n\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"sm\"\n      onClick={handlePlayPause}\n      disabled={isLoading || hasError}\n      className=\"w-full\"\n    >\n      {isLoading ? (\n        <Loader2 className=\"h-3 w-3 mr-1 animate-spin\" />\n      ) : isPlaying ? (\n        <Pause className=\"h-3 w-3 mr-1\" />\n      ) : hasError ? (\n        <Volume2 className=\"h-3 w-3 mr-1 opacity-50\" />\n      ) : (\n        <Play className=\"h-3 w-3 mr-1\" />\n      )}\n      {isLoading ? 'Loading...' : isPlaying ? 'Pause' : hasError ? 'Unavailable' : 'Preview'}\n    </Button>\n  );\n};\n\nconst VoicePreviewTest: React.FC = () => {\n  return (\n    <div className=\"p-6 space-y-6\">\n      <div className=\"text-center\">\n        <h1 className=\"text-3xl font-bold\">VAPI Voice Preview Test</h1>\n        <p className=\"text-muted-foreground mt-2\">Test all voice previews from VAPI providers</p>\n      </div>\n\n      {VOICE_PROVIDERS.map((provider) => (\n        <Card key={provider.id} className=\"w-full\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              {provider.name}\n              <Badge variant=\"secondary\">{provider.voices.length} voices</Badge>\n            </CardTitle>\n            <CardDescription>{provider.description}</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n              {provider.voices.map((voice) => (\n                <Card key={voice.id} className=\"p-4\">\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center justify-between\">\n                      <h4 className=\"font-medium\">{voice.name}</h4>\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        {voice.gender}\n                      </Badge>\n                    </div>\n                    <p className=\"text-sm text-muted-foreground\">{voice.description}</p>\n                    <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\n                      <span>{voice.language}</span>\n                      {voice.accent && <span>• {voice.accent}</span>}\n                    </div>\n                    {voice.preview ? (\n                      <VoicePreviewButton\n                        previewUrl={voice.preview}\n                        voiceName={voice.name}\n                        provider={provider.name}\n                      />\n                    ) : (\n                      <Button variant=\"outline\" size=\"sm\" disabled className=\"w-full\">\n                        No Preview Available\n                      </Button>\n                    )}\n                  </div>\n                </Card>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nexport default VoicePreviewTest;\n"],"names":["VoicePreviewButton","previewUrl","voiceName","provider","isPlaying","setIsPlaying","useState","isLoading","setIsLoading","audio","setAudio","hasError","setHasError","cleanup","handleLoadStart","handleCanPlay","handleEnded","handleError","handleLoadedData","e","toast","handlePlayPause","handleDynamicPreview","handleStaticPreview","error","response","axiosInstance","_a","audioUrl","newAudio","resolve","reject","timeout","useEffect","jsxs","Button","jsx","Loader2","Pause","Volume2","Play","VoicePreviewTest","VOICE_PROVIDERS","Card","CardHeader","CardTitle","Badge","CardDescription","CardContent","voice"],"mappings":"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"}