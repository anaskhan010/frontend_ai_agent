{"version":3,"file":"ClinicalUsers-Dwfh9lk_.js","sources":["../../src/pages/Clinical/ClinicalUsers.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Button } from '../../components/ui/button';\nimport { Input } from '../../components/ui/input';\nimport { Badge } from '../../components/ui/badge';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '../../components/ui/dialog';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';\nimport { Label } from '../../components/ui/label';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { toast } from 'sonner';\nimport {\n  Users,\n  Plus,\n  Search,\n  Filter,\n  UserPlus,\n  Mail,\n  Phone,\n  MapPin,\n  Shield,\n  Calendar,\n  Edit,\n  Trash2,\n  AlertCircle,\n  Loader2\n} from 'lucide-react';\nimport {\n  getAllClinicalUsers,\n  getClinicalUserStats,\n  createClinicalUser,\n  assignClinicalRole,\n  getAvailableUsers\n} from '../../api/services/clinicalUser/clinicalUserService';\nimport { getAllClinicalRoles } from '../../api/services/clinicalRole/clinicalRoleService';\nimport { getAllClinicalSites } from '../../api/services/clinicalSite/clinicalSiteService';\n\nconst ClinicalUsers = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const [selectedRole, setSelectedRole] = useState('');\n  const [selectedSite, setSelectedSite] = useState('');\n  const queryClient = useQueryClient();\n\n  // Form state for creating user\n  const [createFormData, setCreateFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    clinical_role: '',\n    clinical_site: ''\n  });\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  // Fetch clinical users\n  const { data: usersData, isLoading: usersLoading, error: usersError } = useQuery({\n    queryKey: ['clinicalUsers'],\n    queryFn: getAllClinicalUsers,\n    retry: 1,\n  });\n\n  // Fetch user statistics\n  const { data: statsData, isLoading: statsLoading } = useQuery({\n    queryKey: ['clinicalUserStats'],\n    queryFn: getClinicalUserStats,\n    retry: 1,\n  });\n\n  // Fetch clinical roles for assignment\n  const { data: rolesData, isLoading: rolesLoading, error: rolesError } = useQuery({\n    queryKey: ['clinicalRoles'],\n    queryFn: getAllClinicalRoles,\n    retry: 1,\n  });\n\n  // Fetch clinical sites for assignment\n  const { data: sitesData } = useQuery({\n    queryKey: ['clinicalSites'],\n    queryFn: getAllClinicalSites,\n    retry: 1,\n  });\n\n  const clinicalUsers = usersData?.data || [];\n  const userStats = statsData?.data || {\n    total_users: 0,\n    active_users: 0,\n    inactive_users: 0,\n    users_with_roles: 0\n  };\n  const availableRoles = rolesData?.data || [];\n  const clinicalRoles = rolesData?.data || [];\n  const clinicalSites = sitesData?.data || [];\n\n  // Create user mutation\n  const createUserMutation = useMutation({\n    mutationFn: createClinicalUser,\n    onSuccess: () => {\n      toast.success('Clinical user created successfully');\n      queryClient.invalidateQueries({ queryKey: ['clinicalUsers'] });\n      queryClient.invalidateQueries({ queryKey: ['clinicalUserStats'] });\n      setIsCreateDialogOpen(false);\n      setCreateFormData({\n        name: '',\n        email: '',\n        phone: '',\n        clinical_role: '',\n        clinical_site: ''\n      });\n    },\n    onError: (error) => {\n      toast.error('Failed to create clinical user');\n      console.error('Create user error:', error);\n    }\n  });\n\n  // Role assignment mutation\n  const assignRoleMutation = useMutation({\n    mutationFn: ({ userId, roleData }) => assignClinicalRole(userId, roleData),\n    onSuccess: () => {\n      toast.success('Role assigned successfully');\n      queryClient.invalidateQueries({ queryKey: ['clinicalUsers'] });\n      queryClient.invalidateQueries({ queryKey: ['clinicalUserStats'] });\n      setIsCreateDialogOpen(false);\n      setSelectedRole('');\n    },\n    onError: (error) => {\n      toast.error(error.response?.data?.message || 'Failed to assign role');\n    },\n  });\n\n  // Form handlers\n  const handleCreateFormChange = (field, value) => {\n    setCreateFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleCreateUser = () => {\n    if (!createFormData.name || !createFormData.email) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n    createUserMutation.mutate(createFormData);\n  };\n\n  // Additional handler functions for button functionality\n  const handleEditUser = (user) => {\n    setSelectedUser(user);\n    toast.info(`Opening edit form for ${user.first_name} ${user.last_name}`);\n    // TODO: Implement edit user functionality\n  };\n\n  const handleAssignStudies = (user) => {\n    toast.info(`Opening study assignment for ${user.first_name} ${user.last_name}`);\n    // TODO: Implement study assignment functionality\n  };\n\n  const handleViewProfile = (user) => {\n    toast.info(`Viewing profile for ${user.first_name} ${user.last_name}`);\n    // TODO: Navigate to user profile page or open profile modal\n  };\n\n  const toggleFilters = () => {\n    setShowFilters(!showFilters);\n  };\n\n  const filteredUsers = clinicalUsers.filter(user => {\n    const fullName = `${user.first_name || ''} ${user.last_name || ''}`.trim();\n    const email = user.email || '';\n    const role = user.clinical_role_display || '';\n    const site = user.site_name || '';\n    const phone = user.phone_number || user.phone || '';\n\n    return fullName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n           email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n           role.toLowerCase().includes(searchTerm.toLowerCase()) ||\n           site.toLowerCase().includes(searchTerm.toLowerCase()) ||\n           phone.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n  const getStatusBadge = (status) => {\n    return status === 'Active' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800';\n  };\n\n  const getRoleBadge = (role) => {\n    const roleColors = {\n      'Principal Investigator': 'bg-purple-100 text-purple-800',\n      'Study Coordinator': 'bg-blue-100 text-blue-800',\n      'Site Manager': 'bg-green-100 text-green-800',\n      'Recruiter': 'bg-orange-100 text-orange-800',\n      'Data Entry Specialist': 'bg-gray-100 text-gray-800',\n      'Biostatistician': 'bg-indigo-100 text-indigo-800',\n      'Regulatory Affairs': 'bg-red-100 text-red-800',\n      'Data Manager': 'bg-cyan-100 text-cyan-800',\n      'Clinical Research Associate (CRA)': 'bg-yellow-100 text-yellow-800',\n      'Clinical Research Coordinator (CRC)': 'bg-pink-100 text-pink-800',\n      'Sub Investigator': 'bg-violet-100 text-violet-800'\n    };\n    return roleColors[role] || 'bg-gray-100 text-gray-800';\n  };\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Clinical Users</h1>\n          <p className=\"text-gray-600 mt-1\">Manage clinical research staff and role assignments</p>\n        </div>\n        \n        <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n          <DialogTrigger asChild>\n            <Button>\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Add Clinical User\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"max-w-md\" aria-describedby=\"user-form-description\">\n            <DialogHeader>\n              <DialogTitle>Add New Clinical User</DialogTitle>\n              <DialogDescription id=\"user-form-description\">\n                Fill out the form below to add a new clinical staff member. All required fields must be completed.\n              </DialogDescription>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"name\">Full Name *</Label>\n                <Input\n                  id=\"name\"\n                  placeholder=\"Dr. John Smith\"\n                  value={createFormData.name}\n                  onChange={(e) => handleCreateFormChange('name', e.target.value)}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"email\">Email *</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"john.smith@hospital.org\"\n                  value={createFormData.email}\n                  onChange={(e) => handleCreateFormChange('email', e.target.value)}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"phone\">Phone</Label>\n                <Input\n                  id=\"phone\"\n                  placeholder=\"+1-555-0123\"\n                  value={createFormData.phone}\n                  onChange={(e) => handleCreateFormChange('phone', e.target.value)}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"role\">Clinical Role</Label>\n                <Select value={createFormData.clinical_role} onValueChange={(value) => handleCreateFormChange('clinical_role', value)}>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select clinical role\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {rolesLoading ? (\n                      <SelectItem value=\"loading\" disabled>Loading roles...</SelectItem>\n                    ) : clinicalRoles.length === 0 ? (\n                      <SelectItem value=\"no-roles\" disabled>No roles available</SelectItem>\n                    ) : (\n                      clinicalRoles.map((role) => (\n                        <SelectItem key={role.id} value={role.name}>\n                          {role.display_name}\n                        </SelectItem>\n                      ))\n                    )}\n                  </SelectContent>\n                </Select>\n              </div>\n              <div>\n                <Label htmlFor=\"site\">Clinical Site</Label>\n                <Select value={createFormData.clinical_site} onValueChange={(value) => handleCreateFormChange('clinical_site', value)}>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select clinical site\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {clinicalSites.map((site) => (\n                      <SelectItem key={site.id} value={site.id.toString()}>\n                        {site.site_name || site.name}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"flex justify-end space-x-2 pt-4\">\n                <Button variant=\"outline\" onClick={() => setIsCreateDialogOpen(false)}>\n                  Cancel\n                </Button>\n                <Button\n                  onClick={handleCreateUser}\n                  disabled={createUserMutation.isPending}\n                >\n                  {createUserMutation.isPending ? 'Creating...' : 'Create User'}\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Statistics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Users</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <div className=\"text-2xl font-bold\">--</div>\n            ) : (\n              <div className=\"text-2xl font-bold\">{userStats.total_users}</div>\n            )}\n            <p className=\"text-xs text-muted-foreground\">Active clinical staff</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Users</CardTitle>\n            <Shield className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <div className=\"text-2xl font-bold\">--</div>\n            ) : (\n              <div className=\"text-2xl font-bold\">{userStats.active_users}</div>\n            )}\n            <p className=\"text-xs text-muted-foreground\">Currently active</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Users with Roles</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <div className=\"text-2xl font-bold\">--</div>\n            ) : (\n              <div className=\"text-2xl font-bold\">{userStats.users_with_roles}</div>\n            )}\n            <p className=\"text-xs text-muted-foreground\">Assigned roles</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Inactive Users</CardTitle>\n            <MapPin className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <div className=\"text-2xl font-bold\">--</div>\n            ) : (\n              <div className=\"text-2xl font-bold\">{userStats.inactive_users}</div>\n            )}\n            <p className=\"text-xs text-muted-foreground\">Need attention</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Search and Filter */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex justify-between items-center\">\n            <CardTitle>Clinical Staff Directory</CardTitle>\n            <div className=\"flex space-x-2\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  placeholder=\"Search users...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-8 w-64\"\n                />\n              </div>\n              <Button variant=\"outline\" size=\"sm\" onClick={toggleFilters}>\n                <Filter className=\"h-4 w-4 mr-2\" />\n                Filter\n              </Button>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          {usersLoading ? (\n            <div className=\"flex items-center justify-center py-12\">\n              <Loader2 className=\"h-8 w-8 animate-spin text-gray-400\" />\n              <span className=\"ml-2 text-gray-600\">Loading clinical users...</span>\n            </div>\n          ) : usersError ? (\n            <div className=\"text-center py-12\">\n              <AlertCircle className=\"h-12 w-12 text-red-300 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Error Loading Users</h3>\n              <p className=\"text-gray-600 mb-4\">Failed to load clinical users. Please try again.</p>\n            </div>\n          ) : filteredUsers.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <Users className=\"h-12 w-12 text-gray-300 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">No Users Found</h3>\n              <p className=\"text-gray-600 mb-4\">\n                {searchTerm ? 'No users match your search criteria.' : 'No clinical users have been added yet.'}\n              </p>\n              <Button onClick={() => setIsCreateDialogOpen(true)}>\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Add First User\n              </Button>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {filteredUsers.map((user) => (\n              <div key={user.id} className=\"border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow\">\n                <div className=\"flex justify-between items-start mb-4\">\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900\">\n                      {`${user.first_name || ''} ${user.last_name || ''}`.trim()}\n                    </h3>\n                    <p className=\"text-sm text-gray-500\">ID: {user.id}</p>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Badge className={getStatusBadge('Active')}>\n                      Active\n                    </Badge>\n                    <Badge className={getRoleBadge(user.clinical_role_display)}>\n                      {user.clinical_role_display}\n                    </Badge>\n                    <Button variant=\"outline\" size=\"sm\" onClick={() => handleEditUser(user)}>\n                      <Edit className=\"h-4 w-4 mr-1\" />\n                      Edit\n                    </Button>\n                  </div>\n                </div>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-4\">\n                  <div className=\"flex items-start space-x-2\">\n                    <Mail className=\"h-4 w-4 text-gray-400 mt-0.5\" />\n                    <div>\n                      <p className=\"text-sm font-medium\">Email</p>\n                      <p className=\"text-sm text-gray-600\">{user.email}</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start space-x-2\">\n                    <Phone className=\"h-4 w-4 text-gray-400 mt-0.5\" />\n                    <div>\n                      <p className=\"text-sm font-medium\">Phone</p>\n                      <p className=\"text-sm text-gray-600\">{user.phone_number || user.phone || 'No phone provided'}</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start space-x-2\">\n                    <MapPin className=\"h-4 w-4 text-gray-400 mt-0.5\" />\n                    <div>\n                      <p className=\"text-sm font-medium\">Site</p>\n                      <p className=\"text-sm text-gray-600\">{user.site_name || 'No site assigned'}</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start space-x-2\">\n                    <Calendar className=\"h-4 w-4 text-gray-400 mt-0.5\" />\n                    <div>\n                      <p className=\"text-sm font-medium\">Last Login</p>\n                      <p className=\"text-sm text-gray-600\">\n                        {user.last_login ? new Date(user.last_login).toLocaleDateString() : 'Never logged in'}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"pt-4 border-t border-gray-100\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium\">Assigned Studies:</p>\n                      <div className=\"flex flex-wrap gap-1 mt-1\">\n                        {user.assigned_studies > 0 ? (\n                          <Badge variant=\"outline\" className=\"text-xs\">\n                            {user.assigned_studies} studies assigned\n                          </Badge>\n                        ) : (\n                          <span className=\"text-xs text-gray-500\">No studies assigned</span>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"flex space-x-2\">\n                      <Button variant=\"outline\" size=\"sm\" onClick={() => handleAssignStudies(user)}>\n                        Assign Studies\n                      </Button>\n                      <Button variant=\"outline\" size=\"sm\" onClick={() => handleViewProfile(user)}>\n                        View Profile\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Development Notice */}\n      <Card className=\"border-yellow-200 bg-yellow-50\">\n        <CardContent className=\"flex items-center space-x-3 pt-6\">\n          <AlertCircle className=\"h-5 w-5 text-yellow-600\" />\n          <div>\n            <h3 className=\"font-medium text-yellow-800\">Clinical Users Management</h3>\n            <p className=\"text-sm text-yellow-700\">\n              This is a preview of the Clinical Users management system. Full functionality including \n              user creation, role assignment, study assignment, and profile management will be \n              implemented in the next phase.\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default ClinicalUsers;\n"],"names":["ClinicalUsers","searchTerm","setSearchTerm","useState","isCreateDialogOpen","setIsCreateDialogOpen","selectedRole","setSelectedRole","selectedSite","setSelectedSite","queryClient","useQueryClient","createFormData","setCreateFormData","showFilters","setShowFilters","selectedUser","setSelectedUser","usersData","usersLoading","usersError","useQuery","getAllClinicalUsers","statsData","statsLoading","getClinicalUserStats","rolesData","rolesLoading","rolesError","getAllClinicalRoles","sitesData","getAllClinicalSites","clinicalUsers","userStats","clinicalRoles","clinicalSites","createUserMutation","useMutation","createClinicalUser","toast","error","userId","roleData","assignClinicalRole","_b","_a","handleCreateFormChange","field","value","prev","handleCreateUser","handleEditUser","user","handleAssignStudies","handleViewProfile","toggleFilters","filteredUsers","fullName","email","role","site","phone","getStatusBadge","status","getRoleBadge","jsxs","jsx","Dialog","DialogTrigger","Button","Plus","DialogContent","DialogHeader","DialogTitle","DialogDescription","Label","Input","e","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Card","CardHeader","CardTitle","Users","CardContent","Shield","MapPin","Search","Filter","Loader2","AlertCircle","Badge","Edit","Mail","Phone","Calendar"],"mappings":"g5BAoCA,MAAMA,GAAgB,IAAM,CAC1B,KAAM,CAACC,EAAYC,CAAa,EAAIC,EAAAA,SAAS,EAAE,EACzC,CAACC,EAAoBC,CAAqB,EAAIF,EAAAA,SAAS,EAAK,EAC5D,CAACG,GAAcC,CAAe,EAAIJ,EAAAA,SAAS,EAAE,EAC7C,CAACK,GAAcC,EAAe,EAAIN,EAAAA,SAAS,EAAE,EAC7CO,EAAcC,GAAe,EAG7B,CAACC,EAAgBC,CAAiB,EAAIV,WAAS,CACnD,KAAM,GACN,MAAO,GACP,MAAO,GACP,cAAe,GACf,cAAe,EAAA,CAChB,EACK,CAACW,EAAaC,CAAc,EAAIZ,EAAAA,SAAS,EAAK,EAC9C,CAACa,GAAcC,CAAe,EAAId,EAAAA,SAAS,IAAI,EAG/C,CAAE,KAAMe,EAAW,UAAWC,EAAc,MAAOC,GAAeC,EAAS,CAC/E,SAAU,CAAC,eAAe,EAC1B,QAASC,GACT,MAAO,CAAA,CACR,EAGK,CAAE,KAAMC,EAAW,UAAWC,CAAA,EAAiBH,EAAS,CAC5D,SAAU,CAAC,mBAAmB,EAC9B,QAASI,GACT,MAAO,CAAA,CACR,EAGK,CAAE,KAAMC,EAAW,UAAWC,EAAc,MAAOC,IAAeP,EAAS,CAC/E,SAAU,CAAC,eAAe,EAC1B,QAASQ,GACT,MAAO,CAAA,CACR,EAGK,CAAE,KAAMC,CAAU,EAAIT,EAAS,CACnC,SAAU,CAAC,eAAe,EAC1B,QAASU,GACT,MAAO,CAAA,CACR,EAEKC,GAAgBd,GAAA,YAAAA,EAAW,OAAQ,CAAC,EACpCe,GAAYV,GAAA,YAAAA,EAAW,OAAQ,CACnC,YAAa,EACb,aAAc,EACd,eAAgB,EAChB,iBAAkB,CACpB,EACuBG,GAAA,MAAAA,EAAW,KAC5B,MAAAQ,GAAgBR,GAAA,YAAAA,EAAW,OAAQ,CAAC,EACpCS,GAAgBL,GAAA,YAAAA,EAAW,OAAQ,CAAC,EAGpCM,EAAqBC,EAAY,CACrC,WAAYC,GACZ,UAAW,IAAM,CACfC,EAAM,QAAQ,oCAAoC,EAClD7B,EAAY,kBAAkB,CAAE,SAAU,CAAC,eAAe,EAAG,EAC7DA,EAAY,kBAAkB,CAAE,SAAU,CAAC,mBAAmB,EAAG,EACjEL,EAAsB,EAAK,EACTQ,EAAA,CAChB,KAAM,GACN,MAAO,GACP,MAAO,GACP,cAAe,GACf,cAAe,EAAA,CAChB,CACH,EACA,QAAU2B,GAAU,CAClBD,EAAM,MAAM,gCAAgC,EACpC,QAAA,MAAM,qBAAsBC,CAAK,CAAA,CAC3C,CACD,EAG0BH,EAAY,CACrC,WAAY,CAAC,CAAE,OAAAI,EAAQ,SAAAC,CAAe,IAAAC,GAAmBF,EAAQC,CAAQ,EACzE,UAAW,IAAM,CACfH,EAAM,QAAQ,4BAA4B,EAC1C7B,EAAY,kBAAkB,CAAE,SAAU,CAAC,eAAe,EAAG,EAC7DA,EAAY,kBAAkB,CAAE,SAAU,CAAC,mBAAmB,EAAG,EACjEL,EAAsB,EAAK,EAC3BE,EAAgB,EAAE,CACpB,EACA,QAAUiC,GAAU,SAClBD,EAAM,QAAMK,GAAAC,EAAAL,EAAM,WAAN,YAAAK,EAAgB,OAAhB,YAAAD,EAAsB,UAAW,uBAAuB,CAAA,CAEvE,CAAA,EAGK,MAAAE,EAAyB,CAACC,EAAOC,IAAU,CAC/CnC,EAA2BoC,IAAA,CACzB,GAAGA,EACH,CAACF,CAAK,EAAGC,CAAA,EACT,CACJ,EAEME,EAAmB,IAAM,CAC7B,GAAI,CAACtC,EAAe,MAAQ,CAACA,EAAe,MAAO,CACjD2B,EAAM,MAAM,oCAAoC,EAChD,MAAA,CAEFH,EAAmB,OAAOxB,CAAc,CAC1C,EAGMuC,EAAkBC,GAAS,CAC/BnC,EAAgBmC,CAAI,EACpBb,EAAM,KAAK,yBAAyBa,EAAK,UAAU,IAAIA,EAAK,SAAS,EAAE,CAEzE,EAEMC,EAAuBD,GAAS,CACpCb,EAAM,KAAK,gCAAgCa,EAAK,UAAU,IAAIA,EAAK,SAAS,EAAE,CAEhF,EAEME,GAAqBF,GAAS,CAClCb,EAAM,KAAK,uBAAuBa,EAAK,UAAU,IAAIA,EAAK,SAAS,EAAE,CAEvE,EAEMG,GAAgB,IAAM,CAC1BxC,EAAe,CAACD,CAAW,CAC7B,EAEM0C,EAAgBxB,EAAc,OAAeoB,GAAA,CAC3C,MAAAK,EAAW,GAAGL,EAAK,YAAc,EAAE,IAAIA,EAAK,WAAa,EAAE,GAAG,KAAK,EACnEM,EAAQN,EAAK,OAAS,GACtBO,GAAOP,EAAK,uBAAyB,GACrCQ,GAAOR,EAAK,WAAa,GACzBS,GAAQT,EAAK,cAAgBA,EAAK,OAAS,GAEjD,OAAOK,EAAS,YAAY,EAAE,SAASxD,EAAW,aAAa,GACxDyD,EAAM,cAAc,SAASzD,EAAW,aAAa,GACrD0D,GAAK,YAAY,EAAE,SAAS1D,EAAW,aAAa,GACpD2D,GAAK,YAAA,EAAc,SAAS3D,EAAW,YAAY,CAAC,GACpD4D,GAAM,YAAA,EAAc,SAAS5D,EAAW,aAAa,CAAA,CAC7D,EAEK6D,GAAkBC,GACfA,IAAW,SAAW,8BAAgC,0BAGzDC,GAAgBL,IACD,CACjB,yBAA0B,gCAC1B,oBAAqB,4BACrB,eAAgB,8BAChB,UAAa,gCACb,wBAAyB,4BACzB,gBAAmB,gCACnB,qBAAsB,0BACtB,eAAgB,4BAChB,oCAAqC,gCACrC,sCAAuC,4BACvC,mBAAoB,+BACtB,GACkBA,CAAI,GAAK,4BAI3B,OAAAM,EAAA,KAAC,MAAI,CAAA,UAAU,gBAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAc,iBAAA,EAC9DA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAAmD,qDAAA,CAAA,CAAA,EACvF,EAECD,EAAA,KAAAE,GAAA,CAAO,KAAM/D,EAAoB,aAAcC,EAC9C,SAAA,CAAA6D,MAACE,GAAc,CAAA,QAAO,GACpB,SAAAH,EAAA,KAACI,EACC,CAAA,SAAA,CAACH,EAAAA,IAAAI,EAAA,CAAK,UAAU,cAAe,CAAA,EAAE,mBAAA,CAAA,CAEnC,CACF,CAAA,EACCL,EAAA,KAAAM,GAAA,CAAc,UAAU,WAAW,mBAAiB,wBACnD,SAAA,CAAAN,OAACO,GACC,CAAA,SAAA,CAAAN,EAAAA,IAACO,IAAY,SAAqB,uBAAA,CAAA,EACjCP,EAAA,IAAAQ,GAAA,CAAkB,GAAG,wBAAwB,SAE9C,oGAAA,CAAA,CAAA,EACF,EACAT,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACC,EAAA,IAAAS,EAAA,CAAM,QAAQ,OAAO,SAAW,cAAA,EACjCT,EAAA,IAACU,EAAA,CACC,GAAG,OACH,YAAY,iBACZ,MAAOhE,EAAe,KACtB,SAAWiE,GAAM/B,EAAuB,OAAQ+B,EAAE,OAAO,KAAK,CAAA,CAAA,CAChE,EACF,SACC,MACC,CAAA,SAAA,CAACX,EAAA,IAAAS,EAAA,CAAM,QAAQ,QAAQ,SAAO,UAAA,EAC9BT,EAAA,IAACU,EAAA,CACC,GAAG,QACH,KAAK,QACL,YAAY,0BACZ,MAAOhE,EAAe,MACtB,SAAWiE,GAAM/B,EAAuB,QAAS+B,EAAE,OAAO,KAAK,CAAA,CAAA,CACjE,EACF,SACC,MACC,CAAA,SAAA,CAACX,EAAA,IAAAS,EAAA,CAAM,QAAQ,QAAQ,SAAK,QAAA,EAC5BT,EAAA,IAACU,EAAA,CACC,GAAG,QACH,YAAY,cACZ,MAAOhE,EAAe,MACtB,SAAWiE,GAAM/B,EAAuB,QAAS+B,EAAE,OAAO,KAAK,CAAA,CAAA,CACjE,EACF,SACC,MACC,CAAA,SAAA,CAACX,EAAA,IAAAS,EAAA,CAAM,QAAQ,OAAO,SAAa,gBAAA,EACnCV,EAAAA,KAACa,EAAO,CAAA,MAAOlE,EAAe,cAAe,cAAgBoC,GAAUF,EAAuB,gBAAiBE,CAAK,EAClH,SAAA,CAAAkB,MAACa,EACC,CAAA,SAAAb,EAAA,IAACc,EAAY,CAAA,YAAY,sBAAuB,CAAA,EAClD,QACCC,EACE,CAAA,SAAAtD,EACEuC,EAAAA,IAAAgB,EAAA,CAAW,MAAM,UAAU,SAAQ,GAAC,SAAA,kBAAgB,CAAA,EACnDhD,EAAc,SAAW,EAC3BgC,EAAAA,IAACgB,GAAW,MAAM,WAAW,SAAQ,GAAC,6BAAkB,CAAA,EAExDhD,EAAc,IAAKyB,GAChBO,MAAAgB,EAAA,CAAyB,MAAOvB,EAAK,KACnC,SAAKA,EAAA,cADSA,EAAK,EAEtB,CACD,CAEL,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACO,EAAA,IAAAS,EAAA,CAAM,QAAQ,OAAO,SAAa,gBAAA,EACnCV,EAAAA,KAACa,EAAO,CAAA,MAAOlE,EAAe,cAAe,cAAgBoC,GAAUF,EAAuB,gBAAiBE,CAAK,EAClH,SAAA,CAAAkB,MAACa,EACC,CAAA,SAAAb,EAAA,IAACc,EAAY,CAAA,YAAY,sBAAuB,CAAA,EAClD,EACAd,EAAAA,IAACe,GACE,SAAc9C,EAAA,IAAKyB,GAClBM,EAAA,IAACgB,GAAyB,MAAOtB,EAAK,GAAG,SAAS,EAC/C,WAAK,WAAaA,EAAK,MADTA,EAAK,EAEtB,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACAK,EAAAA,KAAC,MAAI,CAAA,UAAU,kCACb,SAAA,CAACC,EAAAA,IAAAG,EAAA,CAAO,QAAQ,UAAU,QAAS,IAAMhE,EAAsB,EAAK,EAAG,SAEvE,QAAA,CAAA,EACA6D,EAAA,IAACG,EAAA,CACC,QAASnB,EACT,SAAUd,EAAmB,UAE5B,SAAAA,EAAmB,UAAY,cAAgB,aAAA,CAAA,CAClD,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGA6B,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAA,OAACkB,EACC,CAAA,SAAA,CAAClB,EAAAA,KAAAmB,EAAA,CAAW,UAAU,4DACpB,SAAA,CAAClB,EAAA,IAAAmB,EAAA,CAAU,UAAU,sBAAsB,SAAW,cAAA,EACtDnB,EAAAA,IAACoB,EAAM,CAAA,UAAU,+BAAgC,CAAA,CAAA,EACnD,SACCC,EACE,CAAA,SAAA,CACC/D,EAAA0C,EAAA,IAAC,MAAI,CAAA,UAAU,qBAAqB,SAAA,IAAE,CAAA,EAEtCA,EAAAA,IAAC,MAAI,CAAA,UAAU,qBAAsB,SAAAjC,EAAU,YAAY,EAE5DiC,EAAA,IAAA,IAAA,CAAE,UAAU,gCAAgC,SAAqB,uBAAA,CAAA,CAAA,CACpE,CAAA,CAAA,EACF,SAECiB,EACC,CAAA,SAAA,CAAClB,EAAAA,KAAAmB,EAAA,CAAW,UAAU,4DACpB,SAAA,CAAClB,EAAA,IAAAmB,EAAA,CAAU,UAAU,sBAAsB,SAAY,eAAA,EACvDnB,EAAAA,IAACsB,GAAO,CAAA,UAAU,+BAAgC,CAAA,CAAA,EACpD,SACCD,EACE,CAAA,SAAA,CACC/D,EAAA0C,EAAA,IAAC,MAAI,CAAA,UAAU,qBAAqB,SAAA,IAAE,CAAA,EAEtCA,EAAAA,IAAC,MAAI,CAAA,UAAU,qBAAsB,SAAAjC,EAAU,aAAa,EAE7DiC,EAAA,IAAA,IAAA,CAAE,UAAU,gCAAgC,SAAgB,kBAAA,CAAA,CAAA,CAC/D,CAAA,CAAA,EACF,SAECiB,EACC,CAAA,SAAA,CAAClB,EAAAA,KAAAmB,EAAA,CAAW,UAAU,4DACpB,SAAA,CAAClB,EAAA,IAAAmB,EAAA,CAAU,UAAU,sBAAsB,SAAgB,mBAAA,EAC3DnB,EAAAA,IAACoB,EAAM,CAAA,UAAU,+BAAgC,CAAA,CAAA,EACnD,SACCC,EACE,CAAA,SAAA,CACC/D,EAAA0C,EAAA,IAAC,MAAI,CAAA,UAAU,qBAAqB,SAAA,IAAE,CAAA,EAEtCA,EAAAA,IAAC,MAAI,CAAA,UAAU,qBAAsB,SAAAjC,EAAU,iBAAiB,EAEjEiC,EAAA,IAAA,IAAA,CAAE,UAAU,gCAAgC,SAAc,gBAAA,CAAA,CAAA,CAC7D,CAAA,CAAA,EACF,SAECiB,EACC,CAAA,SAAA,CAAClB,EAAAA,KAAAmB,EAAA,CAAW,UAAU,4DACpB,SAAA,CAAClB,EAAA,IAAAmB,EAAA,CAAU,UAAU,sBAAsB,SAAc,iBAAA,EACzDnB,EAAAA,IAACuB,EAAO,CAAA,UAAU,+BAAgC,CAAA,CAAA,EACpD,SACCF,EACE,CAAA,SAAA,CACC/D,EAAA0C,EAAA,IAAC,MAAI,CAAA,UAAU,qBAAqB,SAAA,IAAE,CAAA,EAEtCA,EAAAA,IAAC,MAAI,CAAA,UAAU,qBAAsB,SAAAjC,EAAU,eAAe,EAE/DiC,EAAA,IAAA,IAAA,CAAE,UAAU,gCAAgC,SAAc,gBAAA,CAAA,CAAA,CAC7D,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAGCiB,EACC,CAAA,SAAA,CAAAjB,MAACkB,EACC,CAAA,SAAAnB,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAC,EAAAA,IAACmB,GAAU,SAAwB,0BAAA,CAAA,EACnCpB,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAACC,EAAAA,IAAAwB,GAAA,CAAO,UAAU,uDAAwD,CAAA,EAC1ExB,EAAA,IAACU,EAAA,CACC,YAAY,kBACZ,MAAO3E,EACP,SAAW4E,GAAM3E,EAAc2E,EAAE,OAAO,KAAK,EAC7C,UAAU,WAAA,CAAA,CACZ,EACF,SACCR,EAAO,CAAA,QAAQ,UAAU,KAAK,KAAK,QAASd,GAC3C,SAAA,CAACW,EAAAA,IAAAyB,GAAA,CAAO,UAAU,cAAe,CAAA,EAAE,QAAA,CAErC,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QACCJ,EACE,CAAA,SAAApE,EACE8C,OAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACC,EAAAA,IAAA0B,GAAA,CAAQ,UAAU,oCAAqC,CAAA,EACvD1B,EAAA,IAAA,OAAA,CAAK,UAAU,qBAAqB,SAAyB,2BAAA,CAAA,CAAA,CAChE,CAAA,EACE9C,EACD6C,EAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAACC,EAAAA,IAAA2B,EAAA,CAAY,UAAU,qCAAsC,CAAA,EAC5D3B,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAAmB,sBAAA,EAC3EA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAAgD,kDAAA,CAAA,CAAA,EACpF,EACEV,EAAc,SAAW,EAC1BS,OAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAACC,EAAAA,IAAAoB,EAAA,CAAM,UAAU,sCAAuC,CAAA,EACvDpB,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAAc,iBAAA,QACtE,IAAE,CAAA,UAAU,qBACV,SAAAjE,EAAa,uCAAyC,yCACzD,SACCoE,EAAO,CAAA,QAAS,IAAMhE,EAAsB,EAAI,EAC/C,SAAA,CAAC6D,EAAAA,IAAAI,EAAA,CAAK,UAAU,cAAe,CAAA,EAAE,gBAAA,CAEnC,CAAA,CAAA,CACF,CAAA,EAEAJ,EAAAA,IAAC,MAAI,CAAA,UAAU,YACZ,SAAAV,EAAc,IAAKJ,GACpBa,OAAC,MAAkB,CAAA,UAAU,0EAC3B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAC,EAAA,IAAC,KAAG,CAAA,UAAU,sCACX,SAAA,GAAGd,EAAK,YAAc,EAAE,IAAIA,EAAK,WAAa,EAAE,GAAG,OACtD,EACAa,EAAAA,KAAC,IAAE,CAAA,UAAU,wBAAwB,SAAA,CAAA,OAAKb,EAAK,EAAA,CAAG,CAAA,CAAA,EACpD,EACAa,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAC,MAAC4B,EAAM,CAAA,UAAWhC,GAAe,QAAQ,EAAG,SAE5C,SAAA,EACAI,EAAAA,IAAC4B,GAAM,UAAW9B,GAAaZ,EAAK,qBAAqB,EACtD,WAAK,sBACR,EACAa,EAAAA,KAACI,EAAO,CAAA,QAAQ,UAAU,KAAK,KAAK,QAAS,IAAMlB,EAAeC,CAAI,EACpE,SAAA,CAACc,EAAAA,IAAA6B,GAAA,CAAK,UAAU,cAAe,CAAA,EAAE,MAAA,CAEnC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEA9B,EAAAA,KAAC,MAAI,CAAA,UAAU,4DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,6BACb,SAAA,CAACC,EAAAA,IAAA8B,GAAA,CAAK,UAAU,8BAA+B,CAAA,SAC9C,MACC,CAAA,SAAA,CAAC9B,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAAK,QAAA,EACvCA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAyB,WAAK,KAAM,CAAA,CAAA,CACnD,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAACC,EAAAA,IAAA+B,GAAA,CAAM,UAAU,8BAA+B,CAAA,SAC/C,MACC,CAAA,SAAA,CAAC/B,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAAK,QAAA,EACxCA,EAAAA,IAAC,KAAE,UAAU,wBAAyB,WAAK,cAAgBd,EAAK,OAAS,mBAAoB,CAAA,CAAA,CAC/F,CAAA,CAAA,EACF,EAEAa,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAACC,EAAAA,IAAAuB,EAAA,CAAO,UAAU,8BAA+B,CAAA,SAChD,MACC,CAAA,SAAA,CAACvB,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAAI,OAAA,QACtC,IAAE,CAAA,UAAU,wBAAyB,SAAAd,EAAK,WAAa,kBAAmB,CAAA,CAAA,CAC7E,CAAA,CAAA,EACF,EAEAa,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAACC,EAAAA,IAAAgC,GAAA,CAAS,UAAU,8BAA+B,CAAA,SAClD,MACC,CAAA,SAAA,CAAChC,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAAU,aAAA,EAC5CA,EAAAA,IAAA,IAAA,CAAE,UAAU,wBACV,SAAKd,EAAA,WAAa,IAAI,KAAKA,EAAK,UAAU,EAAE,mBAAA,EAAuB,iBACtE,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,QAEC,MAAI,CAAA,UAAU,gCACb,SAACa,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACC,EAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAAiB,oBAAA,EACnDA,EAAA,IAAA,MAAA,CAAI,UAAU,4BACZ,SAAKd,EAAA,iBAAmB,EACvBa,EAAA,KAAC6B,EAAM,CAAA,QAAQ,UAAU,UAAU,UAChC,SAAA,CAAK1C,EAAA,iBAAiB,mBAAA,EACzB,EAECc,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,+BAAmB,CAE/D,CAAA,CAAA,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACC,EAAAA,IAAAG,EAAA,CAAO,QAAQ,UAAU,KAAK,KAAK,QAAS,IAAMhB,EAAoBD,CAAI,EAAG,SAE9E,gBAAA,CAAA,EACAc,EAAAA,IAACG,EAAO,CAAA,QAAQ,UAAU,KAAK,KAAK,QAAS,IAAMf,GAAkBF,CAAI,EAAG,SAE5E,cAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,EAjFQA,EAAK,EAkFf,CACD,CACD,CAAA,CAEJ,CAAA,CAAA,EACF,QAGC+B,EAAK,CAAA,UAAU,iCACd,SAAClB,EAAA,KAAAsB,EAAA,CAAY,UAAU,mCACrB,SAAA,CAACrB,EAAAA,IAAA2B,EAAA,CAAY,UAAU,yBAA0B,CAAA,SAChD,MACC,CAAA,SAAA,CAAC3B,EAAA,IAAA,KAAA,CAAG,UAAU,8BAA8B,SAAyB,4BAAA,EACpEA,EAAA,IAAA,IAAA,CAAE,UAAU,0BAA0B,SAIvC,yMAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAEJ"}