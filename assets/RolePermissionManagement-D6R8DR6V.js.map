{"version":3,"file":"RolePermissionManagement-D6R8DR6V.js","sources":["../../src/pages/Roles/RolePermissionManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport Page from \"@/components/Page\";\nimport Header from \"@/components/Header\";\n// Removed Loading import - using skeleton loading instead\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Shield, Users, Settings, Plus, Edit, Trash2, Save, RefreshCw, Key, CheckCircle, Eye, UserPlus, Edit3, Trash } from \"lucide-react\";\nimport ProtectedRoute from \"@/components/ProtectedRoute\";\nimport PermissionRoute from \"@/components/permissions/PermissionRoute\";\nimport axiosInstance from \"@/api/axios/axiosInstance\";\nimport { toast } from \"sonner\";\n\ninterface Role {\n  id: number;\n  name: string;\n  display_name: string;\n  description: string;\n  is_system_role: boolean;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface PagePermission {\n  id: number;\n  page_id: number;\n  page_path: string;\n  page_name: string;\n  page_category: string;\n  icon: string | null;\n  sort_order: number;\n  is_public: boolean;\n  can_view: boolean;\n  can_add: boolean;\n  can_update: boolean;\n  can_delete: boolean;\n  has_permission: boolean;\n}\n\n// API Functions\nconst fetchRoles = async (): Promise<Role[]> => {\n  const response = await axiosInstance.get(\"/api/roles\");\n  // Handle both old and new API response formats\n  if (response.data.success && response.data.data) {\n    return response.data.data;\n  }\n  // Fallback for old format\n  return Array.isArray(response.data) ? response.data : [];\n};\n\nconst fetchPagesForRole = async (roleId: number): Promise<PagePermission[]> => {\n  const response = await axiosInstance.get(`/api/role-page-permissions/role/${roleId}`);\n  return response.data.success ? response.data.data : [];\n};\n\nconst fetchAllPages = async (): Promise<PagePermission[]> => {\n  const response = await axiosInstance.get(\"/api/role-page-permissions/pages\");\n  return response.data.success ? response.data.data : [];\n};\n\nconst RolePermissionManagement: React.FC = () => {\n  const [selectedRole, setSelectedRole] = useState<Role | null>(null);\n  const [pagePermissions, setPagePermissions] = useState<PagePermission[]>([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const [newRole, setNewRole] = useState({\n    name: \"\",\n    display_name: \"\",\n    description: \"\"\n  });\n\n  const queryClient = useQueryClient();\n\n  // Queries\n  const { data: roles, isLoading: rolesLoading } = useQuery({\n    queryKey: [\"roles\"],\n    queryFn: fetchRoles,\n  });\n\n  const { data: allPages, isLoading: pagesLoading } = useQuery({\n    queryKey: [\"allPages\"],\n    queryFn: fetchAllPages,\n  });\n\n  // Load role permissions when role is selected\n  useEffect(() => {\n    if (selectedRole && allPages) {\n      const loadRolePermissions = async () => {\n        try {\n          const rolePages = await fetchPagesForRole(selectedRole.id);\n          \n          // Merge with all pages to show complete list\n          const mergedPages = allPages.map(page => {\n\n           \n            const rolePage = rolePages.find(rp => rp.page_id === page.id);\n            const hasAnyPermission = rolePage && (rolePage.can_view || rolePage.can_add || rolePage.can_update || rolePage.can_delete);\n            return {\n              ...page,\n              page_id: page.id,\n              can_view: rolePage?.can_view || false,\n              can_add: rolePage?.can_add || false,\n              can_update: rolePage?.can_update || false,\n              can_delete: rolePage?.can_delete || false,\n              has_permission: !!hasAnyPermission\n            };\n          });\n          \n          setPagePermissions(mergedPages);\n        } catch (error) {\n          console.error(\"Error loading role permissions:\", error);\n          toast.error(\"Failed to load role permissions\");\n        }\n      };\n\n      loadRolePermissions();\n    }\n  }, [selectedRole, allPages]);\n\n  // Mutations\n  const updateRolePermissionsMutation = useMutation({\n    mutationFn: async ({ roleId, permissions }: { roleId: number; permissions: any[] }) => {\n      const response = await axiosInstance.put(`/api/role-page-permissions/role/${roleId}`, {\n        pagePermissions: permissions\n      });\n      return response.data;\n    },\n    onSuccess: () => {\n      toast.success(\"Role permissions updated successfully\");\n      queryClient.invalidateQueries({ queryKey: [\"rolePermissions\"] });\n    },\n    onError: (error: any) => {\n      toast.error(error.response?.data?.message || \"Failed to update role permissions\");\n    }\n  });\n\n  const createRoleMutation = useMutation({\n    mutationFn: async (roleData: { name: string; display_name: string; description: string }) => {\n      const response = await axiosInstance.post(\"/api/roles\", roleData);\n      return response.data;\n    },\n    onSuccess: () => {\n      toast.success(\"Role created successfully\");\n      queryClient.invalidateQueries({ queryKey: [\"roles\"] });\n      setIsCreateDialogOpen(false);\n      setNewRole({ name: \"\", display_name: \"\", description: \"\" });\n    },\n    onError: (error: any) => {\n      toast.error(error.response?.data?.message || \"Failed to create role\");\n    }\n  });\n\n  // Handler functions\n  const handleRoleSelect = (role: Role) => {\n    setSelectedRole(role);\n  };\n\n  const handlePagePermissionToggle = (pageId: number, permissionType: 'can_view' | 'can_add' | 'can_update' | 'can_delete') => {\n    setPagePermissions(prev => prev.map(page => {\n      if (page.page_id === pageId) {\n        // Only allow permission changes if the page is enabled\n        if (!page.has_permission) {\n          return page;\n        }\n\n        // Simply toggle the specific permission\n        return {\n          ...page,\n          [permissionType]: !page[permissionType]\n        };\n      }\n      return page;\n    }));\n  };\n\n  const handlePageToggle = (pageId: number) => {\n    setPagePermissions(prev => prev.map(page => {\n      if (page.page_id === pageId) {\n        const isCurrentlyEnabled = page.has_permission || page.can_view;\n        if (isCurrentlyEnabled) {\n          // If disabling the page, disable all permissions\n          return {\n            ...page,\n            has_permission: false,\n            can_view: false,\n            can_add: false,\n            can_update: false,\n            can_delete: false,\n          };\n        } else {\n          // If enabling the page, just mark as having permission (don't auto-enable any specific permissions)\n          return {\n            ...page,\n            has_permission: true,\n            can_view: false,\n            can_add: false,\n            can_update: false,\n            can_delete: false,\n          };\n        }\n      }\n      return page;\n    }));\n  };\n\n  const handleUpdatePermissions = async () => {\n    if (!selectedRole) return;\n\n    setIsUpdating(true);\n    try {\n      const permissionsToUpdate = pagePermissions\n        .filter(page => page.has_permission)\n        .map(page => ({\n          pageId: page.page_id,\n          canView: page.can_view,\n          canAdd: page.can_add,\n          canUpdate: page.can_update,\n          canDelete: page.can_delete\n        }));\n\n      await updateRolePermissionsMutation.mutateAsync({\n        roleId: selectedRole.id,\n        permissions: permissionsToUpdate\n      });\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  const handleCreateRole = () => {\n    createRoleMutation.mutate(newRole);\n  };\n\n  const filteredRoles = Array.isArray(roles) ? roles.filter(role =>\n    role.display_name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    role.name.toLowerCase().includes(searchQuery.toLowerCase())\n  ) : [];\n\n  // Sort pages by sort_order for flat display\n  const sortedPages = (pagePermissions || []).sort((a, b) => (a.sort_order || 0) - (b.sort_order || 0));\n\n  // Removed loading screen for better UX\n\n  return (\n    <PermissionRoute requireSuperAdmin>\n      <Page>\n        <Header\n          title=\"Role & Permission Management\"\n          buttonText=\"Create Role\"\n          action={() => setIsCreateDialogOpen(true)}\n          filterByName={true}\n          filterWord={searchQuery}\n          onFilterChange={setSearchQuery}\n          useSheet={false}\n          showViewToggle={false}\n          showFilters={false}\n        />\n\n        {/* Split Layout Container */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 h-[calc(100vh-200px)]\">\n          {/* Left Panel - Roles List */}\n          <div className=\"lg:col-span-1\">\n            <Card className=\"h-full\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Shield className=\"h-5 w-5\" />\n                  Roles ({filteredRoles.length})\n                </CardTitle>\n                <CardDescription>\n                  Select a role to manage its page permissions\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"p-0\">\n                <div className=\"max-h-[calc(100vh-350px)] overflow-y-auto\">\n                  {rolesLoading ? (\n                    // Show skeleton loading for roles\n                    Array.from({ length: 4 }).map((_, index) => (\n                      <div key={`role-skeleton-${index}`} className=\"p-4 border-b\">\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex-1\">\n                            <Skeleton className=\"h-4 w-32 mb-2\" />\n                            <Skeleton className=\"h-3 w-24 mb-1\" />\n                            <Skeleton className=\"h-3 w-48\" />\n                          </div>\n                          <Skeleton className=\"h-6 w-16\" />\n                        </div>\n                      </div>\n                    ))\n                  ) : (\n                    filteredRoles.map((role) => (\n                    <div\n                      key={role.id}\n                      onClick={() => handleRoleSelect(role)}\n                      className={`p-4 border-b cursor-pointer hover:bg-gray-50 transition-colors ${\n                        selectedRole?.id === role.id ? 'bg-blue-50 border-l-4 border-l-blue-500' : ''\n                      }`}\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <h3 className=\"font-medium text-sm\">{role.display_name}</h3>\n                          <p className=\"text-xs text-gray-500\">{role.name}</p>\n                          {role.description && (\n                            <p className=\"text-xs text-gray-400 mt-1 line-clamp-2\">{role.description}</p>\n                          )}\n                        </div>\n                        <div className=\"flex flex-col items-end gap-1\">\n                          {role.is_system_role && (\n                            <Badge variant=\"secondary\" className=\"text-xs\">System</Badge>\n                          )}\n                          <Badge variant={role.is_active ? \"default\" : \"destructive\"} className=\"text-xs\">\n                            {role.is_active ? \"Active\" : \"Inactive\"}\n                          </Badge>\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Right Panel - Pages and Permissions */}\n          <div className=\"lg:col-span-2\">\n            {selectedRole ? (\n              <Card className=\"h-full\">\n                <CardHeader>\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Key className=\"h-5 w-5\" />\n                        Page Permissions for {selectedRole.display_name}\n                      </CardTitle>\n                      <CardDescription>\n                        Manage page-level permissions for this role\n                      </CardDescription>\n                    </div>\n                    <Button\n                      onClick={handleUpdatePermissions}\n                      disabled={isUpdating}\n                      className=\"flex items-center gap-2 bg-purple-600 hover:bg-purple-700 text-white\"\n                    >\n                      {isUpdating ? (\n                        <RefreshCw className=\"h-4 w-4 animate-spin\" />\n                      ) : (\n                        <Save className=\"h-4 w-4\" />\n                      )}\n                      {isUpdating ? 'Updating...' : 'Save Changes'}\n                    </Button>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"max-h-[calc(100vh-400px)] overflow-y-auto\">\n                    {/* Table Header */}\n                    <div className=\"sticky top-0 bg-white border-b border-gray-200 z-10\">\n                      <div className=\"grid grid-cols-6 gap-4 p-4 font-medium text-sm text-gray-700\">\n                        <div className=\"col-span-2\">Page</div>\n                        <div className=\"text-center flex items-center justify-center gap-1\">\n                          <Eye className=\"h-4 w-4\" />\n                          View\n                        </div>\n                        <div className=\"text-center flex items-center justify-center gap-1\">\n                          <UserPlus className=\"h-4 w-4\" />\n                          Add\n                        </div>\n                        <div className=\"text-center flex items-center justify-center gap-1\">\n                          <Edit3 className=\"h-4 w-4\" />\n                          Update\n                        </div>\n                        <div className=\"text-center flex items-center justify-center gap-1\">\n                          <Trash className=\"h-4 w-4\" />\n                          Delete\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Table Body */}\n                    <div className=\"divide-y divide-gray-200\">\n                      {pagesLoading ? (\n                        // Show skeleton loading for pages\n                        Array.from({ length: 6 }).map((_, index) => (\n                          <div key={`page-skeleton-${index}`} className=\"grid grid-cols-6 gap-4 p-4\">\n                            <div className=\"col-span-2 flex items-center gap-3\">\n                              <Skeleton className=\"h-4 w-4\" />\n                              <div className=\"min-w-0 flex-1\">\n                                <Skeleton className=\"h-4 w-32 mb-1\" />\n                                <Skeleton className=\"h-3 w-24\" />\n                              </div>\n                            </div>\n                            <div className=\"flex justify-center\">\n                              <Skeleton className=\"h-5 w-10\" />\n                            </div>\n                            <div className=\"flex justify-center\">\n                              <Skeleton className=\"h-5 w-10\" />\n                            </div>\n                            <div className=\"flex justify-center\">\n                              <Skeleton className=\"h-5 w-10\" />\n                            </div>\n                            <div className=\"flex justify-center\">\n                              <Skeleton className=\"h-5 w-10\" />\n                            </div>\n                          </div>\n                        ))\n                      ) : (\n                        sortedPages.map((page) => (\n                        <div key={page.page_id} className=\"grid grid-cols-6 gap-4 p-4 hover:bg-gray-50 transition-colors\">\n                              {/* Page Name Column */}\n                              <div className=\"col-span-2 flex items-center gap-3\">\n                                <Checkbox\n                                  checked={page.has_permission}\n                                  onCheckedChange={() => handlePageToggle(page.page_id)}\n                                  className=\"flex-shrink-0 data-[state=checked]:bg-purple-600 data-[state=checked]:border-purple-600\"\n                                />\n                                <div className=\"min-w-0\">\n                                  <div className=\"flex items-center gap-2\">\n                                    <div className=\"w-3 h-3 bg-purple-600 rounded-sm flex-shrink-0\"></div>\n                                    <h4 className=\"font-medium text-sm text-gray-900 truncate\">\n                                      {page.page_name}\n                                    </h4>\n                                  </div>\n                                  <p className=\"text-xs text-gray-500 truncate ml-5\">\n                                    {page.page_path}\n                                  </p>\n                               \n                                </div>\n                              </div>\n\n                              {/* View Permission */}\n                              <div className=\"flex items-center justify-center\">\n                                <Switch\n                                  checked={page.can_view}\n                                  onCheckedChange={() => handlePagePermissionToggle(page.page_id, 'can_view')}\n                                  disabled={!page.has_permission}\n                                  className=\"data-[state=checked]:bg-purple-600 data-[state=unchecked]:bg-gray-200 disabled:opacity-30 disabled:cursor-not-allowed\"\n                                />\n                              </div>\n\n                              {/* Add Permission */}\n                              <div className=\"flex items-center justify-center\">\n                                <Switch\n                                  checked={page.can_add}\n                                  onCheckedChange={() => handlePagePermissionToggle(page.page_id, 'can_add')}\n                                  disabled={!page.has_permission}\n                                  className=\"data-[state=checked]:bg-purple-600 data-[state=unchecked]:bg-gray-200 disabled:opacity-30 disabled:cursor-not-allowed\"\n                                />\n                              </div>\n\n                              {/* Update Permission */}\n                              <div className=\"flex items-center justify-center\">\n                                <Switch\n                                  checked={page.can_update}\n                                  onCheckedChange={() => handlePagePermissionToggle(page.page_id, 'can_update')}\n                                  disabled={!page.has_permission}\n                                  className=\"data-[state=checked]:bg-purple-600 data-[state=unchecked]:bg-gray-200 disabled:opacity-30 disabled:cursor-not-allowed\"\n                                />\n                              </div>\n\n                              {/* Delete Permission */}\n                              <div className=\"flex items-center justify-center\">\n                                <Switch\n                                  checked={page.can_delete}\n                                  onCheckedChange={() => handlePagePermissionToggle(page.page_id, 'can_delete')}\n                                  disabled={!page.has_permission}\n                                  className=\"data-[state=checked]:bg-purple-600 data-[state=unchecked]:bg-gray-200 disabled:opacity-30 disabled:cursor-not-allowed\"\n                                />\n                              </div>\n                        </div>\n                      ))\n                      )}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ) : (\n              <Card className=\"h-full flex items-center justify-center\">\n                <CardContent>\n                  <div className=\"text-center text-gray-500\">\n                    <Shield className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\n                    <h3 className=\"text-lg font-medium mb-2\">Select a Role</h3>\n                    <p className=\"text-sm\">Choose a role from the left panel to manage its page permissions</p>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n          </div>\n        </div>\n\n        {/* Create Role Dialog */}\n        <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>Create New Role</DialogTitle>\n              <DialogDescription>\n                Create a new role with custom permissions\n              </DialogDescription>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"role-name\">Role Name</Label>\n                <Input\n                  id=\"role-name\"\n                  placeholder=\"e.g., manager\"\n                  value={newRole.name}\n                  onChange={(e) => setNewRole(prev => ({ ...prev, name: e.target.value }))}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"role-display-name\">Display Name</Label>\n                <Input\n                  id=\"role-display-name\"\n                  placeholder=\"e.g., Manager\"\n                  value={newRole.display_name}\n                  onChange={(e) => setNewRole(prev => ({ ...prev, display_name: e.target.value }))}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"role-description\">Description</Label>\n                <Textarea\n                  id=\"role-description\"\n                  placeholder=\"Describe the role's responsibilities...\"\n                  value={newRole.description}\n                  onChange={(e) => setNewRole(prev => ({ ...prev, description: e.target.value }))}\n                />\n              </div>\n              <div className=\"flex justify-end gap-2\">\n                <Button variant=\"outline\" onClick={() => setIsCreateDialogOpen(false)}>\n                  Cancel\n                </Button>\n                <Button\n                  onClick={handleCreateRole}\n                  disabled={!newRole.name || !newRole.display_name || createRoleMutation.isPending}\n                >\n                  {createRoleMutation.isPending ? 'Creating...' : 'Create Role'}\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </Page>\n    </PermissionRoute>\n  );\n};\n\nexport default RolePermissionManagement;\n"],"names":["fetchRoles","response","axiosInstance","fetchPagesForRole","roleId","fetchAllPages","RolePermissionManagement","selectedRole","setSelectedRole","useState","pagePermissions","setPagePermissions","isUpdating","setIsUpdating","searchQuery","setSearchQuery","isCreateDialogOpen","setIsCreateDialogOpen","newRole","setNewRole","queryClient","useQueryClient","roles","rolesLoading","useQuery","allPages","pagesLoading","useEffect","rolePages","mergedPages","page","rolePage","rp","hasAnyPermission","error","toast","updateRolePermissionsMutation","useMutation","permissions","_b","_a","createRoleMutation","roleData","handleRoleSelect","role","handlePagePermissionToggle","pageId","permissionType","prev","handlePageToggle","handleUpdatePermissions","permissionsToUpdate","handleCreateRole","filteredRoles","sortedPages","a","b","jsx","PermissionRoute","Page","Header","jsxs","Card","CardHeader","CardTitle","Shield","CardDescription","CardContent","_","index","Skeleton","Badge","Key","Button","RefreshCw","Save","Eye","UserPlus","Edit3","Trash","Checkbox","Switch","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","Label","Input","e","Textarea"],"mappings":"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"}