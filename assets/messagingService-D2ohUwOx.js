import{d as g,t as c}from"./index-YNP4OU4_.js";async function l(t){var e,s,o,a,r;try{console.log("üì± Sending SMS to contact:",t);const n=await g.post(`/api/contact-messages/contacts/${t.contactId}/messages`,{content:t.message,fromPhoneNumber:t.fromPhoneNumber});if(n.data.success)return c.success("Message sent successfully"),{success:!0,messageId:(e=n.data.data)==null?void 0:e.messageId,twilioSid:(s=n.data.data)==null?void 0:s.twilioSid,status:(o=n.data.data)==null?void 0:o.status};throw new Error(n.data.message||"Failed to send message")}catch(n){console.error("Error sending SMS:",n);const i=((r=(a=n.response)==null?void 0:a.data)==null?void 0:r.message)||n.message||"Failed to send message";return c.error(i),{success:!1,error:i}}}async function m(t,e=1,s=50){var o,a;try{const r=await g.get(`/api/contact-messages/contacts/${t}/messages`,{params:{page:e,limit:s}});return{success:!0,messages:r.data.messages||[],totalCount:r.data.totalCount||0,page:r.data.page||1,totalPages:r.data.totalPages||1}}catch(r){console.error("Error fetching contact messages:",r);const n=((a=(o=r.response)==null?void 0:o.data)==null?void 0:a.message)||"Failed to fetch messages";return c.error(n),{success:!1,messages:[],totalCount:0,page:1,totalPages:1}}}async function d(t,e){var s;try{console.log(`üîç Checking new incoming messages for contact ${t}, after message ${e}`);const o={};e&&(o.lastMessageId=e);const a=await g.get(`/api/contact-messages/contacts/${t}/new-messages`,{params:o});return{success:!0,messages:a.data.data||[],hasNewMessages:a.data.hasNewMessages||!1,totalCount:((s=a.data.data)==null?void 0:s.length)||0,page:1,totalPages:1}}catch(o){return console.error("Error checking new incoming messages:",o),{success:!1,messages:[],hasNewMessages:!1,totalCount:0,page:1,totalPages:1}}}async function h(t=1,e=20){var s,o;try{const a=await g.get("/api/contact-messages/conversations",{params:{page:t,limit:e}});return{success:!0,conversations:a.data.conversations||[],totalCount:a.data.totalCount||0,page:a.data.page||1,totalPages:a.data.totalPages||1}}catch(a){console.error("Error fetching conversations:",a);const r=((o=(s=a.response)==null?void 0:s.data)==null?void 0:o.message)||"Failed to fetch conversations";return c.error(r),{success:!1,conversations:[],totalCount:0,page:1,totalPages:1}}}function f(t){const e=t.replace(/[^\d+]/g,"");return e.startsWith("+")?e:e.length===10?`+1${e}`:e.length===11&&e.startsWith("1")?`+${e}`:e.startsWith("+")?e:`+${e}`}function p(t){const e=t.replace(/[^\d]/g,"");if(e.length===10)return`(${e.slice(0,3)}) ${e.slice(3,6)}-${e.slice(6)}`;if(e.length===11&&e.startsWith("1")){const s=e.slice(1);return`+1 (${s.slice(0,3)}) ${s.slice(3,6)}-${s.slice(6)}`}return t}async function w(){var t,e;try{const s=await g.get("/api/contact-messages/user/phone-numbers");if(s.data.success)return s.data.data;throw new Error(s.data.message||"Failed to get phone numbers")}catch(s){throw console.error("Error getting user phone numbers:",s),c.error(((e=(t=s.response)==null?void 0:t.data)==null?void 0:e.message)||"Failed to get phone numbers"),s}}export{w as a,m as b,d as c,f as d,p as f,h as g,l as s};
//# sourceMappingURL=messagingService-D2ohUwOx.js.map
