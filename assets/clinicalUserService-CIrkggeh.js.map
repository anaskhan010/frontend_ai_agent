{"version":3,"file":"clinicalUserService-CIrkggeh.js","sources":["../../src/api/services/clinicalUser/clinicalUserService.ts"],"sourcesContent":["import axiosInstance from \"@/api/axios/axiosInstance\";\n\nexport const getAllClinicalUsers = async () => {\n  try {\n    const response = await axiosInstance.get(\"/api/clinical-users\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching clinical users:\", error);\n    throw error;\n  }\n};\n\nexport const getClinicalUserById = async (id: string) => {\n  try {\n    const response = await axiosInstance.get(`/api/clinical-users/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching clinical user:\", error);\n    throw error;\n  }\n};\n\nexport const createClinicalUser = async (userData: any) => {\n  try {\n    const response = await axiosInstance.post(\"/api/clinical-users\", userData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating clinical user:\", error);\n    throw error;\n  }\n};\n\nexport const assignClinicalRole = async (userId: string, roleData: any) => {\n  try {\n    const response = await axiosInstance.post(`/api/clinical-users/${userId}/assign-role`, roleData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error assigning clinical role:\", error);\n    throw error;\n  }\n};\n\nexport const removeClinicalRole = async (userId: string) => {\n  try {\n    const response = await axiosInstance.delete(`/api/clinical-users/${userId}/remove-role`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error removing clinical role:\", error);\n    throw error;\n  }\n};\n\nexport const getClinicalUserStats = async () => {\n  try {\n    const response = await axiosInstance.get(\"/api/clinical-users/stats\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching clinical user stats:\", error);\n    throw error;\n  }\n};\n\nexport const getUserStudies = async (userId: string) => {\n  try {\n    const response = await axiosInstance.get(`/api/clinical-users/${userId}/studies`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching user studies:\", error);\n    throw error;\n  }\n};\n\nexport const getAvailableUsers = async () => {\n  try {\n    const response = await axiosInstance.get(\"/api/clinical-users/available\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching available users:\", error);\n    throw error;\n  }\n};\n"],"names":["getAllClinicalUsers","axiosInstance","error","createClinicalUser","userData","assignClinicalRole","userId","roleData","getClinicalUserStats"],"mappings":"wCAEO,MAAMA,EAAsB,SAAY,CACzC,GAAA,CAEF,OADiB,MAAMC,EAAc,IAAI,qBAAqB,GAC9C,WACTC,EAAO,CACN,cAAA,MAAM,iCAAkCA,CAAK,EAC/CA,CAAA,CAEV,EAYaC,EAAqB,MAAOC,GAAkB,CACrD,GAAA,CAEF,OADiB,MAAMH,EAAc,KAAK,sBAAuBG,CAAQ,GACzD,WACTF,EAAO,CACN,cAAA,MAAM,gCAAiCA,CAAK,EAC9CA,CAAA,CAEV,EAEaG,EAAqB,MAAOC,EAAgBC,IAAkB,CACrE,GAAA,CAEF,OADiB,MAAMN,EAAc,KAAK,uBAAuBK,CAAM,eAAgBC,CAAQ,GAC/E,WACTL,EAAO,CACN,cAAA,MAAM,iCAAkCA,CAAK,EAC/CA,CAAA,CAEV,EAYaM,EAAuB,SAAY,CAC1C,GAAA,CAEF,OADiB,MAAMP,EAAc,IAAI,2BAA2B,GACpD,WACTC,EAAO,CACN,cAAA,MAAM,sCAAuCA,CAAK,EACpDA,CAAA,CAEV"}