{"version":3,"file":"GmailCallback-bPDpRVXj.js","sources":["../../src/pages/auth/GmailCallback.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport { Loader2, CheckCircle, XCircle, Mail } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { toast } from 'sonner';\n\nconst GmailCallback: React.FC = () => {\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const [status, setStatus] = useState<'loading' | 'success' | 'error'>('loading');\n  const [message, setMessage] = useState('Processing Gmail authentication...');\n\n  useEffect(() => {\n    const handleCallback = async () => {\n      try {\n        // Check if we're in an iframe (modal context)\n        const isInIframe = window.self !== window.top;\n\n        // Check for development success redirect\n        const success = searchParams.get('success');\n        const email = searchParams.get('email');\n        const errorParam = searchParams.get('error');\n\n        if (success === 'true' && email) {\n          setStatus('success');\n          setMessage('Gmail account connected successfully!');\n          toast.success('Gmail account connected successfully!');\n\n          // Check if we need to return to a specific workflow\n          const savedState = localStorage.getItem('gmail_oauth_return_state');\n\n          // Notify parent window if opened as popup or in iframe\n          if (window.opener) {\n            window.opener.postMessage({\n              type: 'GMAIL_AUTH_SUCCESS',\n              data: { email: decodeURIComponent(email) }\n            }, window.location.origin);\n            window.close();\n          } else if (isInIframe && window.parent) {\n            // Send message to parent window (modal)\n            window.parent.postMessage({\n              type: 'GMAIL_AUTH_SUCCESS',\n              data: { email: decodeURIComponent(email) }\n            }, window.location.origin);\n          } else {\n            // Handle redirect based on saved state\n            if (savedState) {\n              try {\n                const workflowState = JSON.parse(savedState);\n                console.log('🔄 Restoring complete workflow state:', workflowState);\n                localStorage.removeItem('gmail_oauth_return_state');\n\n                // Redirect back to the EXACT original URL with all parameters\n                setTimeout(() => {\n                  if (workflowState.fullUrl) {\n                    console.log('🎯 Redirecting to exact URL:', workflowState.fullUrl);\n                    window.location.href = workflowState.fullUrl;\n                  } else if (workflowState.pathname && workflowState.search && workflowState.hash) {\n                    // Fallback: reconstruct URL from parts\n                    const reconstructedUrl = `${window.location.origin}${workflowState.pathname}${workflowState.search}${workflowState.hash}`;\n                    console.log('🔧 Reconstructing URL:', reconstructedUrl);\n                    window.location.href = reconstructedUrl;\n                  } else {\n                    // Last fallback\n                    console.log('⚠️ Using fallback path:', workflowState.path || '/webhooks');\n                    window.location.href = workflowState.path || `${window.location.origin}/#/webhooks`;\n                  }\n                }, 1500);\n              } catch (e) {\n                console.error('Error parsing saved state:', e);\n                setTimeout(() => {\n                  navigate('/webhooks');\n                }, 2000);\n              }\n            } else {\n              // Default redirect to webhooks page\n              setTimeout(() => {\n                navigate('/webhooks');\n              }, 2000);\n            }\n          }\n          return;\n        }\n\n        if (errorParam) {\n          setStatus('error');\n          setMessage(decodeURIComponent(errorParam));\n          toast.error(`Gmail connection failed: ${decodeURIComponent(errorParam)}`);\n\n          // Notify parent of error if in iframe\n          if (isInIframe && window.parent) {\n            window.parent.postMessage({\n              type: 'GMAIL_AUTH_ERROR',\n              message: decodeURIComponent(errorParam)\n            }, window.location.origin);\n          }\n          return;\n        }\n\n        const code = searchParams.get('code');\n        const state = searchParams.get('state');\n        const error = searchParams.get('error');\n\n        if (error) {\n          setStatus('error');\n          setMessage(`Authentication failed: ${error}`);\n          toast.error('Gmail authentication was cancelled or failed');\n          return;\n        }\n\n        if (!code || !state) {\n          setStatus('error');\n          setMessage('Missing authorization code or state parameter');\n          toast.error('Invalid Gmail OAuth response');\n          return;\n        }\n\n        // Exchange code for tokens\n        const response = await fetch('/api/gmail/callback', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ code, state }),\n        });\n\n        const data = await response.json();\n\n        if (response.ok && data.success) {\n          setStatus('success');\n          setMessage('Gmail account connected successfully!');\n          toast.success('Gmail account connected successfully!');\n\n          // Close the popup window and notify parent\n          if (window.opener) {\n            window.opener.postMessage({\n              type: 'GMAIL_AUTH_SUCCESS',\n              data: data.data\n            }, window.location.origin);\n            window.close();\n          } else if (isInIframe && window.parent) {\n            // Send message to parent window (modal)\n            window.parent.postMessage({\n              type: 'GMAIL_AUTH_SUCCESS',\n              data: data.data\n            }, window.location.origin);\n          } else {\n            // If not in popup or iframe, redirect to webhooks page\n            setTimeout(() => {\n              navigate('/webhooks');\n            }, 2000);\n          }\n        } else {\n          setStatus('error');\n          setMessage(data.message || 'Failed to connect Gmail account');\n          toast.error(data.message || 'Failed to connect Gmail account');\n\n          // Notify parent of error if in iframe\n          if (isInIframe && window.parent) {\n            window.parent.postMessage({\n              type: 'GMAIL_AUTH_ERROR',\n              message: data.message || 'Failed to connect Gmail account'\n            }, window.location.origin);\n          }\n        }\n      } catch (error) {\n        console.error('Gmail callback error:', error);\n        setStatus('error');\n        setMessage('An unexpected error occurred');\n        toast.error('An unexpected error occurred');\n      }\n    };\n\n    handleCallback();\n  }, [searchParams, navigate]);\n\n  const getStatusIcon = () => {\n    switch (status) {\n      case 'loading':\n        return <Loader2 className=\"h-12 w-12 text-blue-600 animate-spin\" />;\n      case 'success':\n        return <CheckCircle className=\"h-12 w-12 text-green-600\" />;\n      case 'error':\n        return <XCircle className=\"h-12 w-12 text-red-600\" />;\n      default:\n        return <Loader2 className=\"h-12 w-12 text-blue-600 animate-spin\" />;\n    }\n  };\n\n  const getStatusColor = () => {\n    switch (status) {\n      case 'loading':\n        return 'text-blue-600';\n      case 'success':\n        return 'text-green-600';\n      case 'error':\n        return 'text-red-600';\n      default:\n        return 'text-blue-600';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4\">\n      <div className=\"max-w-md w-full bg-white rounded-lg shadow-lg p-8 text-center\">\n        <div className=\"mb-6\">\n          <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <Mail className=\"h-8 w-8 text-red-600\" />\n          </div>\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Gmail Authentication</h1>\n          <p className=\"text-gray-600\">Connecting your Gmail account...</p>\n        </div>\n\n        <div className=\"mb-6\">\n          <div className=\"flex justify-center mb-4\">\n            {getStatusIcon()}\n          </div>\n          <p className={`text-lg font-medium ${getStatusColor()}`}>\n            {message}\n          </p>\n        </div>\n\n        {status === 'error' && (\n          <div className=\"space-y-4\">\n            <Button\n              onClick={() => navigate('/webhooks')}\n              className=\"w-full bg-red-600 hover:bg-red-700 text-white\"\n            >\n              Return to Webhooks\n            </Button>\n            <Button\n              variant=\"outline\"\n              onClick={() => window.location.reload()}\n              className=\"w-full\"\n            >\n              Try Again\n            </Button>\n          </div>\n        )}\n\n        {status === 'success' && (\n          <div className=\"space-y-4\">\n            <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n              <p className=\"text-sm text-green-800\">\n                Your Gmail account has been successfully connected. You can now use Gmail triggers and actions in your workflows.\n              </p>\n            </div>\n            <Button\n              onClick={() => navigate('/webhooks')}\n              className=\"w-full bg-green-600 hover:bg-green-700 text-white\"\n            >\n              Continue to Webhooks\n            </Button>\n          </div>\n        )}\n\n        {status === 'loading' && (\n          <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n            <p className=\"text-sm text-blue-800\">\n              Please wait while we process your Gmail authentication...\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GmailCallback;"],"names":["GmailCallback","searchParams","useSearchParams","navigate","useNavigate","status","setStatus","useState","message","setMessage","useEffect","isInIframe","success","email","errorParam","toast","savedState","workflowState","reconstructedUrl","e","code","state","error","response","data","getStatusIcon","jsx","Loader2","CheckCircle","XCircle","getStatusColor","jsxs","Mail","Button"],"mappings":"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"}