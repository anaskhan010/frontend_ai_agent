import{d as n,t as a}from"./index-kojKzVbx.js";import"./ui-DHRUPyaA.js";import"./vendor-DG599jyl.js";import"./router-BavLd_S0.js";import"./query-C4fL1Hv3.js";async function h(o){var e,r;try{const t=await n.post("/api/outboundcall/createCall",{id:o.assistantId,phoneNumber:o.phoneNumber,phoneNumberId:o.phoneNumberId,metadata:o.metadata,maxDurationSeconds:o.maxDurationSeconds,firstMessage:o.firstMessage,voicemailMessage:o.voicemailMessage});return a.success("Outbound call initiated successfully"),t.data}catch(t){console.error("Error creating outbound call:",t);const s=((r=(e=t.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to create outbound call";throw a.error(s),t}}async function m(o,e,r){try{return(await n.get("/api/outboundcall/getAllCalls",{params:{page:o,search:e,status:r}})).data}catch(t){throw console.error("Error fetching outbound calls:",t),a.error("Failed to fetch outbound calls"),t}}async function g(o){var e,r;try{const t=await n.post(`/api/outboundcall/endCall/${o}`);return a.success("Call ended successfully"),t.data}catch(t){console.error("Error ending outbound call:",t);const s=((r=(e=t.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to end call";throw a.error(s),t}}async function w(o,e){try{const r=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({type:"control",control:"mute-assistant"})});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return a.success("Assistant muted"),await r.json()}catch(r){throw console.error("Error muting call:",r),a.error("Failed to mute call"),r}}async function y(o,e){try{const r=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({type:"control",control:"unmute-assistant"})});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return a.success("Assistant unmuted"),await r.json()}catch(r){throw console.error("Error unmuting call:",r),a.error("Failed to unmute call"),r}}async function b(o,e){try{const r=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({type:"end-call"})});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return a.success("Call ended successfully"),await r.json()}catch(r){throw console.error("Error ending call via control:",r),a.error("Failed to end call"),r}}async function f(o){try{return(await n.get(`/api/outboundcall/transcript/${o}`)).data}catch(e){throw console.error("Error fetching call transcript:",e),a.error("Failed to fetch call transcript"),e}}async function C(o){var e,r;try{const t=await n.get(`/api/outboundcall/recording/${o}`,{responseType:"blob"}),s=window.URL.createObjectURL(new Blob([t.data])),c=document.createElement("a");return c.href=s,c.setAttribute("download",`call-recording-${o}.mp3`),document.body.appendChild(c),c.click(),c.remove(),window.URL.revokeObjectURL(s),a.success("Recording downloaded successfully"),t.data}catch(t){console.error("Error downloading call recording:",t);const s=((r=(e=t.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to download recording";throw a.error(s),t}}async function E(o,e){try{return(await n.get("/api/outboundcall/stats",{params:{dateFrom:o,dateTo:e}})).data}catch(r){throw console.error("Error fetching call stats:",r),a.error("Failed to fetch call statistics"),r}}async function T(o){var e,r;try{const t=await n.post("/api/outboundcall/createBulkCalls",o);return a.success(`${o.phoneNumbers.length} outbound calls initiated successfully`),t.data}catch(t){console.error("Error creating bulk outbound calls:",t);const s=((r=(e=t.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to create bulk outbound calls";throw a.error(s),t}}export{T as createBulkOutboundCalls,h as createOutboundCall,C as downloadCallRecording,b as endCallViaControl,g as endOutboundCall,m as getAllOutboundCalls,E as getCallStats,f as getCallTranscript,w as muteCall,y as unmuteCall};
//# sourceMappingURL=outboundService-BGMgJ0Ny.js.map
