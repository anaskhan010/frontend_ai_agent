{"version":3,"file":"PermissionRoute-BN4bgN7e.js","sources":["../../src/hooks/usePermissions.ts","../../src/components/permissions/PermissionRoute.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useAuth } from '@/context/AuthContext';\nimport axiosInstance from '@/api/axios/axiosInstance';\n\ninterface Permission {\n  id: number;\n  name: string;\n  display_name: string;\n  description: string;\n  category: string;\n}\n\ninterface Role {\n  id: number;\n  name: string;\n  display_name: string;\n  description: string;\n  is_system_role: boolean;\n}\n\ninterface PageAccess {\n  page_path: string;\n  page_name: string;\n  description: string;\n}\n\ninterface UsePermissionsReturn {\n  // Permission checking\n  hasPermission: (permissionName: string) => boolean;\n  hasAnyPermission: (permissionNames: string[]) => boolean;\n  hasAllPermissions: (permissionNames: string[]) => boolean;\n  \n  // Role checking\n  hasRole: (roleName: string) => boolean;\n  hasAnyRole: (roleNames: string[]) => boolean;\n  isSuperAdmin: boolean;\n  \n  // Page access checking\n  canAccessPage: (pagePath: string) => boolean;\n  \n  // Data\n  permissions: Permission[];\n  role: Role | null;\n  accessiblePages: PageAccess[];\n  \n  // Loading states\n  loading: boolean;\n  error: string | null;\n  \n  // Refresh function\n  refresh: () => Promise<void>;\n}\n\nexport const usePermissions = (): UsePermissionsReturn => {\n  const { user, isLoggedIn } = useAuth();\n  const [permissions, setPermissions] = useState<Permission[]>([]);\n  const [role, setRole] = useState<Role | null>(null);\n  const [accessiblePages, setAccessiblePages] = useState<PageAccess[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchUserPermissions = async () => {\n    if (!user?.role_id || !isLoggedIn) {\n      setPermissions([]);\n      setRole(null);\n      setAccessiblePages([]);\n      setLoading(false);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Fetch all data in parallel for better performance\n      const [roleResponse, permissionsResponse, pagesResponse] = await Promise.all([\n        axiosInstance.get(`/api/roles/${user.role_id}`),\n        axiosInstance.get(`/api/permissions/user/${user.id}/detailed`),\n        axiosInstance.get('/api/page-permissions/accessible/me')\n      ]);\n\n      // Process responses\n      if (roleResponse.data) {\n        setRole(roleResponse.data);\n      }\n\n      if (permissionsResponse.data.success) {\n        setPermissions(permissionsResponse.data.data || []);\n      }\n\n      if (pagesResponse.data.success) {\n        setAccessiblePages(pagesResponse.data.data || []);\n      }\n\n    } catch (err: any) {\n      console.error('Error fetching permissions:', err);\n      setError(err.response?.data?.message || 'Failed to load permissions');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchUserPermissions();\n  }, [user?.role_id, user?.id, isLoggedIn]);\n\n  // Permission checking functions\n  const hasPermission = (permissionName: string): boolean => {\n    if (!user || !isLoggedIn) return false;\n    \n    // Super admin has all permissions\n    if (isSuperAdmin) return true;\n    \n    return permissions.some(p => p.name === permissionName);\n  };\n\n  const hasAnyPermission = (permissionNames: string[]): boolean => {\n    if (!user || !isLoggedIn) return false;\n    \n    // Super admin has all permissions\n    if (isSuperAdmin) return true;\n    \n    return permissionNames.some(name => hasPermission(name));\n  };\n\n  const hasAllPermissions = (permissionNames: string[]): boolean => {\n    if (!user || !isLoggedIn) return false;\n    \n    // Super admin has all permissions\n    if (isSuperAdmin) return true;\n    \n    return permissionNames.every(name => hasPermission(name));\n  };\n\n  // Role checking functions\n  const hasRole = (roleName: string): boolean => {\n    if (!role) return false;\n    return role.name === roleName;\n  };\n\n  const hasAnyRole = (roleNames: string[]): boolean => {\n    if (!role) return false;\n    return roleNames.includes(role.name);\n  };\n\n  // Super admin check\n  const isSuperAdmin = role?.name === 'super_admin' || user?.role_id === 1;\n\n  // Page access checking\n  const canAccessPage = (pagePath: string): boolean => {\n    if (!user || !isLoggedIn) return false;\n    \n    // Super admin can access all pages\n    if (isSuperAdmin) return true;\n    \n    return accessiblePages.some(page => page.page_path === pagePath);\n  };\n\n  const refresh = async () => {\n    await fetchUserPermissions();\n  };\n\n  return {\n    hasPermission,\n    hasAnyPermission,\n    hasAllPermissions,\n    hasRole,\n    hasAnyRole,\n    isSuperAdmin,\n    canAccessPage,\n    permissions,\n    role,\n    accessiblePages,\n    loading,\n    error,\n    refresh\n  };\n};\n\nexport default usePermissions;\n","import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '@/context/AuthContext';\nimport { usePermissions } from '@/hooks/usePermissions';\nimport Loading from '@/Loading';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Shield, AlertTriangle } from 'lucide-react';\n\ninterface PermissionRouteProps {\n  children: React.ReactNode;\n  \n  // Permission-based access\n  permission?: string;\n  permissions?: string[];\n  requireAll?: boolean;\n  \n  // Role-based access\n  role?: string;\n  roles?: string[];\n  requireAllRoles?: boolean;\n  \n  // Page-based access\n  page?: string;\n  \n  // Super admin access\n  requireSuperAdmin?: boolean;\n  \n  // Redirect paths\n  redirectTo?: string;\n  loginRedirect?: string;\n  \n  // Custom access denied component\n  accessDeniedComponent?: React.ReactNode;\n}\n\nconst PermissionRoute: React.FC<PermissionRouteProps> = ({\n  children,\n  permission,\n  permissions,\n  requireAll = false,\n  role,\n  roles,\n  requireAllRoles = false,\n  page,\n  requireSuperAdmin = false,\n  redirectTo = '/dashboard',\n  loginRedirect = '/login',\n  accessDeniedComponent\n}) => {\n  const { isLoggedIn, loading: authLoading } = useAuth();\n  const location = useLocation();\n  const {\n    hasPermission,\n    hasAnyPermission,\n    hasAllPermissions,\n    hasRole,\n    hasAnyRole,\n    isSuperAdmin,\n    canAccessPage,\n    loading: permissionsLoading\n  } = usePermissions();\n\n  // Show loading while authentication or permissions are being checked\n  if (authLoading || permissionsLoading) {\n    return <Loading />;\n  }\n\n  // Redirect to login if not authenticated\n  if (!isLoggedIn) {\n    return <Navigate to={loginRedirect} state={{ from: location }} replace />;\n  }\n\n  // Check access permissions\n  const checkAccess = (): boolean => {\n    // Super admin check first\n    if (requireSuperAdmin) {\n      return isSuperAdmin;\n    }\n\n    // If super admin and no specific requirements, grant access\n    if (isSuperAdmin && !permission && !permissions && !role && !roles && !page) {\n      return true;\n    }\n\n    // Check single permission\n    if (permission && !hasPermission(permission)) {\n      return false;\n    }\n\n    // Check multiple permissions\n    if (permissions && permissions.length > 0) {\n      const hasAccess = requireAll \n        ? hasAllPermissions(permissions)\n        : hasAnyPermission(permissions);\n      \n      if (!hasAccess) return false;\n    }\n\n    // Check single role\n    if (role && !hasRole(role)) {\n      return false;\n    }\n\n    // Check multiple roles\n    if (roles && roles.length > 0) {\n      const hasAccess = requireAllRoles\n        ? roles.every(r => hasRole(r))\n        : hasAnyRole(roles);\n      \n      if (!hasAccess) return false;\n    }\n\n    // Check page access\n    if (page && !canAccessPage(page)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const hasAccess = checkAccess();\n\n  // If access is denied, show custom component or default access denied page\n  if (!hasAccess) {\n    if (accessDeniedComponent) {\n      return <>{accessDeniedComponent}</>;\n    }\n\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <Card className=\"w-full max-w-md\">\n          <CardHeader className=\"text-center\">\n            <div className=\"mx-auto mb-4 flex h-12 w-12 items-center justify-center rounded-full bg-red-100\">\n              <AlertTriangle className=\"h-6 w-6 text-red-600\" />\n            </div>\n            <CardTitle className=\"text-xl font-semibold text-gray-900\">\n              Access Denied\n            </CardTitle>\n            <CardDescription className=\"text-gray-600\">\n              You don't have permission to access this page.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"text-center\">\n            <div className=\"space-y-2 text-sm text-gray-500\">\n              {requireSuperAdmin && (\n                <p>This page requires super administrator privileges.</p>\n              )}\n              {permission && (\n                <p>Required permission: <code className=\"bg-gray-100 px-1 rounded\">{permission}</code></p>\n              )}\n              {permissions && permissions.length > 0 && (\n                <p>\n                  Required permissions ({requireAll ? 'all' : 'any'}): {' '}\n                  {permissions.map(p => (\n                    <code key={p} className=\"bg-gray-100 px-1 rounded mr-1\">{p}</code>\n                  ))}\n                </p>\n              )}\n              {role && (\n                <p>Required role: <code className=\"bg-gray-100 px-1 rounded\">{role}</code></p>\n              )}\n              {roles && roles.length > 0 && (\n                <p>\n                  Required roles ({requireAllRoles ? 'all' : 'any'}): {' '}\n                  {roles.map(r => (\n                    <code key={r} className=\"bg-gray-100 px-1 rounded mr-1\">{r}</code>\n                  ))}\n                </p>\n              )}\n            </div>\n            <div className=\"mt-6\">\n              <button\n                onClick={() => window.history.back()}\n                className=\"text-blue-600 hover:text-blue-500 font-medium\"\n              >\n                Go Back\n              </button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  // If all checks pass, render the protected content\n  return <>{children}</>;\n};\n\nexport default PermissionRoute;\n"],"names":["usePermissions","user","isLoggedIn","useAuth","permissions","setPermissions","useState","role","setRole","accessiblePages","setAccessiblePages","loading","setLoading","error","setError","fetchUserPermissions","roleResponse","permissionsResponse","pagesResponse","axiosInstance","err","_b","_a","useEffect","hasPermission","permissionName","isSuperAdmin","p","hasAnyPermission","permissionNames","name","hasAllPermissions","hasRole","roleName","hasAnyRole","roleNames","pagePath","page","PermissionRoute","children","permission","requireAll","roles","requireAllRoles","requireSuperAdmin","redirectTo","loginRedirect","accessDeniedComponent","authLoading","location","useLocation","canAccessPage","permissionsLoading","Loading","r","jsxs","Card","CardHeader","jsx","AlertTriangle","CardTitle","CardDescription","CardContent","Navigate"],"mappings":"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"}