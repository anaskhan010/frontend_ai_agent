{"version":3,"file":"DefaultAssistants-DZjsbgHs.js","sources":["../../src/pages/DefaultAssistants/components/DefaultAssistantTemplateForm.tsx","../../src/pages/DefaultAssistants/components/TemplatePreviewDialog.tsx","../../src/pages/DefaultAssistants/DefaultAssistants.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useMutation } from '@tanstack/react-query';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Switch } from '@/components/ui/switch';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Badge } from '@/components/ui/badge';\nimport { toast } from 'sonner';\nimport {\n  createDefaultAssistantTemplate,\n  updateDefaultAssistantTemplate,\n  type DefaultAssistantTemplate\n} from '@/api/services/defaultAssistantTemplates/defaultAssistantTemplateService';\n\ninterface DefaultAssistantTemplateFormProps {\n  template?: DefaultAssistantTemplate | null;\n  isEditing?: boolean;\n  onSuccess: () => void;\n  onCancel: () => void;\n}\n\nconst CATEGORIES = [\n  'General',\n  'Business',\n  'Sales',\n  'Support',\n  'Scheduling',\n  'Technical',\n  'Healthcare',\n  'Education',\n  'Finance',\n  'Real Estate'\n];\n\nconst VOICE_PROVIDERS = ['vapi', '11labs', 'openai', 'azure', 'deepgram', 'cartesia', 'playht', 'lmnt', 'neets', 'rime-ai'];\nconst MODEL_PROVIDERS = ['openai', 'anthropic', 'groq', 'together', 'anyscale', 'perplexity'];\nconst TRANSCRIBER_PROVIDERS = ['deepgram', 'openai', 'azure', 'google'];\n\nexport const DefaultAssistantTemplateForm: React.FC<DefaultAssistantTemplateFormProps> = ({\n  template,\n  isEditing = false,\n  onSuccess,\n  onCancel\n}) => {\n  const [formData, setFormData] = useState<Partial<DefaultAssistantTemplate>>({\n    name: '',\n    description: '',\n    category: 'General',\n    first_message: '',\n    system_message: 'You are a helpful AI assistant.',\n    model: {\n      provider: 'openai',\n      model: 'gpt-4',\n      temperature: 0.7,\n      maxTokens: 1000,\n      messages: [\n        { role: 'system', content: 'You are a helpful AI assistant.' }\n      ]\n    },\n    voice: {\n      provider: 'vapi',\n      voiceId: 'Cole',\n      speed: 1.0\n    },\n    transcriber: {\n      provider: 'deepgram',\n      language: 'en',\n      confidenceThreshold: 0.4\n    },\n    background_sound: 'off',\n    max_duration_seconds: 1800,\n    is_active: true,\n    is_featured: false,\n    sort_order: 0,\n    ...template\n  });\n\n  const createMutation = useMutation({\n    mutationFn: createDefaultAssistantTemplate,\n    onSuccess: () => {\n      toast.success('Template created successfully');\n      onSuccess();\n    },\n    onError: (error: any) => {\n      console.error('Error creating template:', error);\n    }\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: ({ templateId, data }: { templateId: string; data: Partial<DefaultAssistantTemplate> }) =>\n      updateDefaultAssistantTemplate(templateId, data),\n    onSuccess: () => {\n      toast.success('Template updated successfully');\n      onSuccess();\n    },\n    onError: (error: any) => {\n      console.error('Error updating template:', error);\n    }\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!formData.name || !formData.description) {\n      toast.error('Name and description are required');\n      return;\n    }\n\n    // Update system message in model.messages\n    const updatedFormData = {\n      ...formData,\n      model: {\n        ...formData.model,\n        messages: [\n          { role: 'system', content: formData.system_message || 'You are a helpful AI assistant.' }\n        ]\n      }\n    };\n\n    if (isEditing && template?.template_id) {\n      updateMutation.mutate({\n        templateId: template.template_id,\n        data: updatedFormData\n      });\n    } else {\n      createMutation.mutate(updatedFormData);\n    }\n  };\n\n  const handleFieldChange = (field: string, value: any) => {\n    if (field.includes('.')) {\n      const [parent, child] = field.split('.');\n      setFormData(prev => ({\n        ...prev,\n        [parent]: {\n          ...prev[parent as keyof typeof prev],\n          [child]: value\n        }\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    }\n  };\n\n  const isLoading = createMutation.isPending || updateMutation.isPending;\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <Tabs defaultValue=\"basic\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"basic\">Basic Info</TabsTrigger>\n          <TabsTrigger value=\"ai-config\">AI Configuration</TabsTrigger>\n          <TabsTrigger value=\"advanced\">Advanced</TabsTrigger>\n          <TabsTrigger value=\"settings\">Settings</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"basic\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Basic Information</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"name\">Template Name *</Label>\n                  <Input\n                    id=\"name\"\n                    value={formData.name || ''}\n                    onChange={(e) => handleFieldChange('name', e.target.value)}\n                    placeholder=\"Customer Service Assistant\"\n                    required\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"category\">Category</Label>\n                  <Select value={formData.category} onValueChange={(value) => handleFieldChange('category', value)}>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {CATEGORIES.map(category => (\n                        <SelectItem key={category} value={category}>\n                          {category}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"description\">Description *</Label>\n                <Textarea\n                  id=\"description\"\n                  value={formData.description || ''}\n                  onChange={(e) => handleFieldChange('description', e.target.value)}\n                  placeholder=\"Describe what this assistant template is designed for...\"\n                  rows={3}\n                  required\n                />\n              </div>\n\n              <div>\n                <Label htmlFor=\"first_message\">First Message</Label>\n                <Textarea\n                  id=\"first_message\"\n                  value={formData.first_message || ''}\n                  onChange={(e) => handleFieldChange('first_message', e.target.value)}\n                  placeholder=\"Hello! How can I help you today?\"\n                  rows={2}\n                />\n              </div>\n\n              <div>\n                <Label htmlFor=\"system_message\">System Message</Label>\n                <Textarea\n                  id=\"system_message\"\n                  value={formData.system_message || ''}\n                  onChange={(e) => handleFieldChange('system_message', e.target.value)}\n                  placeholder=\"You are a helpful AI assistant...\"\n                  rows={4}\n                />\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"ai-config\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\n            {/* Model Configuration */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Model</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <Label>Provider</Label>\n                  <Select \n                    value={formData.model?.provider} \n                    onValueChange={(value) => handleFieldChange('model.provider', value)}\n                  >\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {MODEL_PROVIDERS.map(provider => (\n                        <SelectItem key={provider} value={provider}>\n                          {provider}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Label>Model</Label>\n                  <Input\n                    value={formData.model?.model || ''}\n                    onChange={(e) => handleFieldChange('model.model', e.target.value)}\n                    placeholder=\"gpt-4\"\n                  />\n                </div>\n                <div>\n                  <Label>Temperature</Label>\n                  <Input\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"2\"\n                    step=\"0.1\"\n                    value={formData.model?.temperature || 0.7}\n                    onChange={(e) => handleFieldChange('model.temperature', parseFloat(e.target.value))}\n                  />\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Voice Configuration */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Voice</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <Label>Provider</Label>\n                  <Select \n                    value={formData.voice?.provider} \n                    onValueChange={(value) => handleFieldChange('voice.provider', value)}\n                  >\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {VOICE_PROVIDERS.map(provider => (\n                        <SelectItem key={provider} value={provider}>\n                          {provider}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Label>Voice ID</Label>\n                  <Input\n                    value={formData.voice?.voiceId || ''}\n                    onChange={(e) => handleFieldChange('voice.voiceId', e.target.value)}\n                    placeholder=\"Cole\"\n                  />\n                </div>\n                <div>\n                  <Label>Speed</Label>\n                  <Input\n                    type=\"number\"\n                    min=\"0.5\"\n                    max=\"2\"\n                    step=\"0.1\"\n                    value={formData.voice?.speed || 1.0}\n                    onChange={(e) => handleFieldChange('voice.speed', parseFloat(e.target.value))}\n                  />\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Transcriber Configuration */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Transcriber</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <Label>Provider</Label>\n                  <Select \n                    value={formData.transcriber?.provider} \n                    onValueChange={(value) => handleFieldChange('transcriber.provider', value)}\n                  >\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {TRANSCRIBER_PROVIDERS.map(provider => (\n                        <SelectItem key={provider} value={provider}>\n                          {provider}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Label>Language</Label>\n                  <Input\n                    value={formData.transcriber?.language || 'en'}\n                    onChange={(e) => handleFieldChange('transcriber.language', e.target.value)}\n                    placeholder=\"en\"\n                  />\n                </div>\n                <div>\n                  <Label>Confidence Threshold</Label>\n                  <Input\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"1\"\n                    step=\"0.1\"\n                    value={formData.transcriber?.confidenceThreshold || 0.4}\n                    onChange={(e) => handleFieldChange('transcriber.confidenceThreshold', parseFloat(e.target.value))}\n                  />\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"advanced\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Advanced Settings</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label>Background Sound</Label>\n                  <Select \n                    value={formData.background_sound} \n                    onValueChange={(value) => handleFieldChange('background_sound', value)}\n                  >\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"off\">Off</SelectItem>\n                      <SelectItem value=\"office\">Office</SelectItem>\n                      <SelectItem value=\"cafe\">Cafe</SelectItem>\n                      <SelectItem value=\"nature\">Nature</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Label>Max Duration (seconds)</Label>\n                  <Input\n                    type=\"number\"\n                    min=\"60\"\n                    max=\"7200\"\n                    value={formData.max_duration_seconds || 1800}\n                    onChange={(e) => handleFieldChange('max_duration_seconds', parseInt(e.target.value))}\n                  />\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"end_call_message\">End Call Message</Label>\n                <Textarea\n                  id=\"end_call_message\"\n                  value={formData.end_call_message || ''}\n                  onChange={(e) => handleFieldChange('end_call_message', e.target.value)}\n                  placeholder=\"Thank you for calling. Have a great day!\"\n                  rows={2}\n                />\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"settings\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Template Settings</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <Label>Active</Label>\n                  <p className=\"text-sm text-gray-600\">Make this template available to users</p>\n                </div>\n                <Switch\n                  checked={formData.is_active}\n                  onCheckedChange={(checked) => handleFieldChange('is_active', checked)}\n                />\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <Label>Featured</Label>\n                  <p className=\"text-sm text-gray-600\">Show this template prominently</p>\n                </div>\n                <Switch\n                  checked={formData.is_featured}\n                  onCheckedChange={(checked) => handleFieldChange('is_featured', checked)}\n                />\n              </div>\n\n              <div>\n                <Label>Sort Order</Label>\n                <Input\n                  type=\"number\"\n                  min=\"0\"\n                  value={formData.sort_order || 0}\n                  onChange={(e) => handleFieldChange('sort_order', parseInt(e.target.value))}\n                />\n                <p className=\"text-sm text-gray-600 mt-1\">Lower numbers appear first</p>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      <div className=\"flex justify-end gap-3 pt-4 border-t\">\n        <Button type=\"button\" variant=\"outline\" onClick={onCancel}>\n          Cancel\n        </Button>\n        <Button type=\"submit\" disabled={isLoading}>\n          {isLoading ? 'Saving...' : isEditing ? 'Update Template' : 'Create Template'}\n        </Button>\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Separator } from '@/components/ui/separator';\nimport { \n  Bot, \n  MessageSquare, \n  Mic, \n  Brain, \n  Clock, \n  Star,\n  Users,\n  Settings\n} from 'lucide-react';\nimport { type DefaultAssistantTemplate } from '@/api/services/defaultAssistantTemplates/defaultAssistantTemplateService';\n\ninterface TemplatePreviewDialogProps {\n  template: DefaultAssistantTemplate | null;\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n}\n\nexport const TemplatePreviewDialog: React.FC<TemplatePreviewDialogProps> = ({\n  template,\n  open,\n  onOpenChange\n}) => {\n  if (!template) return null;\n\n  const getCategoryColor = (category: string) => {\n    const colors: Record<string, string> = {\n      'Business': 'bg-blue-100 text-blue-800',\n      'Sales': 'bg-green-100 text-green-800',\n      'Support': 'bg-purple-100 text-purple-800',\n      'Scheduling': 'bg-orange-100 text-orange-800',\n      'General': 'bg-gray-100 text-gray-800'\n    };\n    return colors[category] || 'bg-gray-100 text-gray-800';\n  };\n\n  const formatDuration = (seconds: number) => {\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    if (hours > 0) {\n      return `${hours}h ${minutes % 60}m`;\n    }\n    return `${minutes}m`;\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-7xl max-h-[90vh] overflow-y-auto\" aria-describedby=\"template-preview-description\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <Bot className=\"h-5 w-5 text-blue-600\" />\n            Template Name: {template.name}\n          </DialogTitle>\n          <DialogDescription id=\"template-preview-description\">\n            Preview the details and configuration of this assistant template. You can view all settings, prompts, and capabilities.\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Header Info */}\n          <div className=\"flex items-start justify-between\">\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center gap-2\">\n                <Badge className={getCategoryColor(template.category)}>\n                 Category:   {template.category}\n                </Badge>\n                {/* {template.is_featured && (\n                  <Badge className=\"bg-yellow-100 text-yellow-800\">\n                    <Star className=\"h-3 w-3 mr-1 fill-current\" />\n                    Featured\n                  </Badge>\n                )} */}\n                {!template.is_active && (\n                  <Badge variant=\"secondary\">Inactive</Badge>\n                )}\n              </div>\n              <p className=\"text-gray-600\">{template.description}</p>\n            </div>\n            {/* <div className=\"text-right text-sm text-gray-500\">\n              <div className=\"flex items-center gap-1\">\n                <Users className=\"h-4 w-4\" />\n                {template.usage_count || 0} uses\n              </div>\n            </div> */}\n          </div>\n\n          <Separator />\n\n          {/* Configuration Overview */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {/* AI Model */}\n            <Card>\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-sm flex items-center gap-2\">\n                  <Brain className=\"h-4 w-4\" />\n                  AI Model\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-0 space-y-2\">\n                <div className=\"text-sm\">\n                  <span className=\"font-medium\">Provider:</span> {template.model?.provider || 'N/A'}\n                </div>\n                <div className=\"text-sm\">\n                  <span className=\"font-medium\">Model:</span> {template.model?.model || 'N/A'}\n                </div>\n                <div className=\"text-sm\">\n                  <span className=\"font-medium\">Temperature:</span> {template.model?.temperature || 'N/A'}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Voice */}\n            <Card>\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-sm flex items-center gap-2\">\n                  <Mic className=\"h-4 w-4\" />\n                  Voice\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-0 space-y-2\">\n                <div className=\"text-sm\">\n                  <span className=\"font-medium\">Provider:</span> {template.voice?.provider || 'N/A'}\n                </div>\n                <div className=\"text-sm\">\n                  <span className=\"font-medium\">Voice ID:</span> {template.voice?.voiceId || 'N/A'}\n                </div>\n                <div className=\"text-sm\">\n                  <span className=\"font-medium\">Speed:</span> {template.voice?.speed || 'N/A'}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Settings */}\n            <Card>\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-sm flex items-center gap-2\">\n                  <Settings className=\"h-4 w-4\" />\n                  Settings\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-0 space-y-2\">\n                <div className=\"text-sm\">\n                  <span className=\"font-medium\">Max Duration:</span> {\n                    template.max_duration_seconds \n                      ? formatDuration(template.max_duration_seconds)\n                      : 'N/A'\n                  }\n                </div>\n                <div className=\"text-sm\">\n                  <span className=\"font-medium\">Background:</span> {template.background_sound || 'Off'}\n                </div>\n                <div className=\"text-sm\">\n                  <span className=\"font-medium\">Transcriber:</span> {template.transcriber?.provider || 'N/A'}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Messages */}\n          <div className=\"space-y-4\">\n            {template.first_message && (\n              <Card>\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"text-sm flex items-center gap-2\">\n                    <MessageSquare className=\"h-4 w-4\" />\n                    First Message\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"pt-0\">\n                  <div className=\"bg-blue-50 p-3 rounded-lg border border-blue-200\">\n                    <p className=\"text-sm text-blue-900\">{template.first_message}</p>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {template.system_message && (\n              <Card>\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"text-sm flex items-center gap-2\">\n                    <Bot className=\"h-4 w-4\" />\n                    System Message\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"pt-0\">\n                  <div className=\"bg-gray-50 p-3 rounded-lg border border-gray-200\">\n                    <p className=\"text-sm text-gray-700 whitespace-pre-wrap\">{template.system_message}</p>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {template.end_call_message && (\n              <Card>\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"text-sm flex items-center gap-2\">\n                    <MessageSquare className=\"h-4 w-4\" />\n                    End Call Message\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"pt-0\">\n                  <div className=\"bg-green-50 p-3 rounded-lg border border-green-200\">\n                    <p className=\"text-sm text-green-900\">{template.end_call_message}</p>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n          </div>\n\n          {/* Advanced Configuration */}\n          {(template.functions && template.functions.length > 0) && (\n            <Card>\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-sm\">Functions</CardTitle>\n              </CardHeader>\n              <CardContent className=\"pt-0\">\n                <div className=\"text-sm text-gray-600\">\n                  {template.functions.length} function(s) configured\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Metadata */}\n          <div className=\"text-xs text-gray-500 pt-4 border-t\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <span className=\"font-medium\">Created:</span> {\n                  template.created_at \n                    ? new Date(template.created_at).toLocaleDateString()\n                    : 'N/A'\n                }\n              </div>\n              <div>\n                <span className=\"font-medium\">Last Updated:</span> {\n                  template.updated_at \n                    ? new Date(template.updated_at).toLocaleDateString()\n                    : 'N/A'\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { \n  Plus, \n  Edit, \n  Trash2, \n  Bot, \n  Star, \n  Users, \n  Filter,\n  Search,\n  Eye,\n  Copy\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { toast } from 'sonner';\nimport {\n  getAllDefaultAssistantTemplates,\n  getTemplateCategories,\n  deleteDefaultAssistantTemplate,\n  type DefaultAssistantTemplate,\n  type TemplateCategory,\n  type TemplateFilters\n} from '@/api/services/defaultAssistantTemplates/defaultAssistantTemplateService';\nimport { DefaultAssistantTemplateForm } from './components/DefaultAssistantTemplateForm';\nimport { TemplatePreviewDialog } from './components/TemplatePreviewDialog';\n\nconst DefaultAssistants: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [isPreviewDialogOpen, setIsPreviewDialogOpen] = useState(false);\n  const [selectedTemplate, setSelectedTemplate] = useState<DefaultAssistantTemplate | null>(null);\n\n  const queryClient = useQueryClient();\n\n  // Fetch templates\n  const { data: templatesData, isLoading: templatesLoading } = useQuery({\n    queryKey: ['defaultAssistantTemplates', { category: selectedCategory !== 'all' ? selectedCategory : undefined }],\n    queryFn: () => {\n      const filters: TemplateFilters = {};\n      if (selectedCategory !== 'all') {\n        filters.category = selectedCategory;\n      }\n      return getAllDefaultAssistantTemplates(filters);\n    }\n  });\n\n  // Fetch categories\n  const { data: categoriesData } = useQuery({\n    queryKey: ['templateCategories'],\n    queryFn: getTemplateCategories\n  });\n\n  // Delete mutation\n  const deleteMutation = useMutation({\n    mutationFn: deleteDefaultAssistantTemplate,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['defaultAssistantTemplates'] });\n      queryClient.invalidateQueries({ queryKey: ['templateCategories'] });\n    }\n  });\n\n  const templates = templatesData?.data || [];\n  const categories = categoriesData?.data || [];\n\n  // Filter templates based on search term\n  const filteredTemplates = templates.filter((template: DefaultAssistantTemplate) =>\n    template.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    template.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    template.category.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const handleEdit = (template: DefaultAssistantTemplate) => {\n    setSelectedTemplate(template);\n    setIsEditDialogOpen(true);\n  };\n\n  const handlePreview = (template: DefaultAssistantTemplate) => {\n    setSelectedTemplate(template);\n    setIsPreviewDialogOpen(true);\n  };\n\n  const handleDelete = async (template: DefaultAssistantTemplate) => {\n    if (window.confirm(`Are you sure you want to delete \"${template.name}\"? This action cannot be undone.`)) {\n      deleteMutation.mutate(template.template_id);\n    }\n  };\n\n  const handleDuplicate = (template: DefaultAssistantTemplate) => {\n    const { template_id, id, created_at, updated_at, ...templateWithoutIds } = template;\n    const duplicatedTemplate: DefaultAssistantTemplate = {\n      ...templateWithoutIds,\n      name: `${template.name} (Copy)`,\n      template_id: '', // Will be generated by backend\n      usage_count: 0\n    };\n    setSelectedTemplate(duplicatedTemplate);\n    setIsCreateDialogOpen(true);\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors: Record<string, string> = {\n      'Business': 'bg-blue-100 text-blue-800',\n      'Sales': 'bg-green-100 text-green-800',\n      'Support': 'bg-purple-100 text-purple-800',\n      'Scheduling': 'bg-orange-100 text-orange-800',\n      'General': 'bg-gray-100 text-gray-800'\n    };\n    return colors[category] || 'bg-gray-100 text-gray-800';\n  };\n\n  return (\n    <div className=\"container mx-auto p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Default Assistant Templates</h1>\n          <p className=\"text-gray-600 mt-1\">\n            Manage default assistant templates that users can choose from when creating assistants\n          </p>\n        </div>\n        <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n          <DialogTrigger asChild>\n            <Button className=\"bg-blue-600 hover:bg-blue-700\">\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Create Template\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"max-w-6xl max-h-[90vh] overflow-y-auto\">\n            <DialogHeader>\n              <DialogTitle className=\"flex items-center gap-2\">\n                <Bot className=\"h-5 w-5 text-blue-600\" />\n                Create Default Assistant Template\n              </DialogTitle>\n            </DialogHeader>\n            <DefaultAssistantTemplateForm\n              template={selectedTemplate}\n              onSuccess={() => {\n                setIsCreateDialogOpen(false);\n                setSelectedTemplate(null);\n                queryClient.invalidateQueries({ queryKey: ['defaultAssistantTemplates'] });\n                queryClient.invalidateQueries({ queryKey: ['templateCategories'] });\n              }}\n              onCancel={() => {\n                setIsCreateDialogOpen(false);\n                setSelectedTemplate(null);\n              }}\n            />\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Filters */}\n      <Card>\n        <CardContent className=\"p-4\">\n          <div className=\"flex flex-col sm:flex-row gap-4\">\n            <div className=\"flex-1\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\n                <Input\n                  placeholder=\"Search templates...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-10\"\n                />\n              </div>\n            </div>\n            <div className=\"sm:w-48\">\n              <Select value={selectedCategory} onValueChange={setSelectedCategory}>\n                <SelectTrigger>\n                  <Filter className=\"h-4 w-4 mr-2\" />\n                  <SelectValue placeholder=\"Category\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Categories</SelectItem>\n                  {categories.map((category: TemplateCategory) => (\n                    <SelectItem key={category.category} value={category.category}>\n                      {category.category} ({category.count})\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Templates Grid */}\n      {templatesLoading ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {[...Array(6)].map((_, i) => (\n            <Card key={i} className=\"animate-pulse\">\n              <CardHeader>\n                <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n                <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2\">\n                  <div className=\"h-3 bg-gray-200 rounded\"></div>\n                  <div className=\"h-3 bg-gray-200 rounded w-5/6\"></div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      ) : filteredTemplates.length === 0 ? (\n        <Card>\n          <CardContent className=\"p-12 text-center\">\n            <Bot className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No templates found</h3>\n            <p className=\"text-gray-600 mb-4\">\n              {searchTerm || selectedCategory !== 'all' \n                ? 'Try adjusting your search or filter criteria.'\n                : 'Get started by creating your first default assistant template.'\n              }\n            </p>\n            {!searchTerm && selectedCategory === 'all' && (\n              <Button onClick={() => setIsCreateDialogOpen(true)}>\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Create Template\n              </Button>\n            )}\n          </CardContent>\n        </Card>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {filteredTemplates.map((template: DefaultAssistantTemplate) => (\n            <Card key={template.template_id} className=\"hover:shadow-lg transition-shadow\">\n              <CardHeader className=\"pb-3\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <CardTitle className=\"text-lg flex items-center gap-2\">\n                      {/* {template.is_featured && <Star className=\"h-4 w-4 text-yellow-500 fill-current\" />} */}\n                      {template.name}\n                    </CardTitle>\n                    <div className=\"flex items-center gap-2 mt-2\">\n                      <Badge className={getCategoryColor(template.category)}>\n                        {template.category}\n                      </Badge>\n                      {!template.is_active && (\n                        <Badge variant=\"secondary\">Inactive</Badge>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </CardHeader>\n              <CardContent className=\"pt-0\">\n                <p className=\"text-gray-600 text-sm mb-4 line-clamp-3\">\n                  {template.description}\n                </p>\n                <div className=\"flex items-center justify-between text-sm text-gray-500 mb-4\">\n                  <div className=\"flex items-center gap-1\">\n                    <Users className=\"h-4 w-4\" />\n                    {template.usage_count || 0} uses\n                  </div>\n                </div>\n                <div className=\"flex gap-2\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handlePreview(template)}\n                    className=\"flex-1\"\n                  >\n                    <Eye className=\"h-4 w-4 mr-1\" />\n                    Preview\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleEdit(template)}\n                  >\n                    <Edit className=\"h-4 w-4\" />\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleDuplicate(template)}\n                  >\n                    <Copy className=\"h-4 w-4\" />\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleDelete(template)}\n                    className=\"text-red-600 hover:text-red-700\"\n                  >\n                    <Trash2 className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      )}\n\n      {/* Edit Dialog */}\n      <Dialog open={isEditDialogOpen} onOpenChange={setIsEditDialogOpen}>\n        <DialogContent className=\"max-w-6xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <Bot className=\"h-5 w-5 text-blue-600\" />\n              Edit Template: {selectedTemplate?.name}\n            </DialogTitle>\n          </DialogHeader>\n          {selectedTemplate && (\n            <DefaultAssistantTemplateForm\n              template={selectedTemplate}\n              isEditing={true}\n              onSuccess={() => {\n                setIsEditDialogOpen(false);\n                setSelectedTemplate(null);\n                queryClient.invalidateQueries({ queryKey: ['defaultAssistantTemplates'] });\n                queryClient.invalidateQueries({ queryKey: ['templateCategories'] });\n              }}\n              onCancel={() => {\n                setIsEditDialogOpen(false);\n                setSelectedTemplate(null);\n              }}\n            />\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Preview Dialog */}\n      <TemplatePreviewDialog\n        template={selectedTemplate}\n        open={isPreviewDialogOpen}\n        onOpenChange={setIsPreviewDialogOpen}\n      />\n    </div>\n  );\n};\n\nexport default DefaultAssistants;\n"],"names":["CATEGORIES","VOICE_PROVIDERS","MODEL_PROVIDERS","TRANSCRIBER_PROVIDERS","DefaultAssistantTemplateForm","template","isEditing","onSuccess","onCancel","formData","setFormData","useState","createMutation","useMutation","createDefaultAssistantTemplate","toast","error","updateMutation","templateId","data","updateDefaultAssistantTemplate","handleSubmit","e","updatedFormData","handleFieldChange","field","value","parent","child","prev","isLoading","jsxs","Tabs","TabsList","jsx","TabsTrigger","TabsContent","Card","CardHeader","CardTitle","CardContent","Label","Input","Select","SelectTrigger","SelectValue","SelectContent","category","SelectItem","Textarea","_a","provider","_b","_c","_d","_e","_f","_g","_h","_i","Switch","checked","Button","TemplatePreviewDialog","open","onOpenChange","getCategoryColor","formatDuration","seconds","minutes","hours","Dialog","DialogContent","DialogHeader","DialogTitle","Bot","DialogDescription","Badge","Separator","Brain","Mic","Settings","MessageSquare","DefaultAssistants","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","isCreateDialogOpen","setIsCreateDialogOpen","isEditDialogOpen","setIsEditDialogOpen","isPreviewDialogOpen","setIsPreviewDialogOpen","selectedTemplate","setSelectedTemplate","queryClient","useQueryClient","templatesData","templatesLoading","useQuery","filters","getAllDefaultAssistantTemplates","categoriesData","getTemplateCategories","deleteMutation","deleteDefaultAssistantTemplate","templates","categories","filteredTemplates","handleEdit","handlePreview","handleDelete","handleDuplicate","template_id","id","created_at","updated_at","templateWithoutIds","duplicatedTemplate","DialogTrigger","Plus","Search","Filter","_","i","Users","Eye","Edit","Copy","Trash2"],"mappings":"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"}