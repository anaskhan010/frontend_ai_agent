{"version":3,"file":"clinicalSiteService-CQas08n8.js","sources":["../../src/api/services/clinicalSite/clinicalSiteService.ts"],"sourcesContent":["import axiosInstance from \"@/api/axios/axiosInstance\";\n\nexport const getAllClinicalSites = async () => {\n  try {\n    const response = await axiosInstance.get(\"/api/clinical-sites\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching clinical sites:\", error);\n    throw error;\n  }\n};\n\nexport const getClinicalSiteById = async (id: string) => {\n  try {\n    const response = await axiosInstance.get(`/api/clinical-sites/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching clinical site:\", error);\n    throw error;\n  }\n};\n\nexport const createClinicalSite = async (siteData: any) => {\n  try {\n    const response = await axiosInstance.post(\"/api/clinical-sites\", siteData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating clinical site:\", error);\n    throw error;\n  }\n};\n\nexport const updateClinicalSite = async (id: string, siteData: any) => {\n  try {\n    const response = await axiosInstance.put(`/api/clinical-sites/${id}`, siteData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating clinical site:\", error);\n    throw error;\n  }\n};\n\nexport const deleteClinicalSite = async (id: string) => {\n  try {\n    const response = await axiosInstance.delete(`/api/clinical-sites/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error deleting clinical site:\", error);\n    throw error;\n  }\n};\n\nexport const getClinicalSiteStats = async () => {\n  try {\n    const response = await axiosInstance.get(\"/api/clinical-sites/stats\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching clinical site stats:\", error);\n    throw error;\n  }\n};\n\nexport const getSiteStudies = async (siteId: string) => {\n  try {\n    const response = await axiosInstance.get(`/api/clinical-sites/${siteId}/studies`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching site studies:\", error);\n    throw error;\n  }\n};\n"],"names":["getAllClinicalSites","axiosInstance","error","createClinicalSite","siteData","updateClinicalSite","id","deleteClinicalSite","getClinicalSiteStats"],"mappings":"wCAEO,MAAMA,EAAsB,SAAY,CACzC,GAAA,CAEF,OADiB,MAAMC,EAAc,IAAI,qBAAqB,GAC9C,WACTC,EAAO,CACN,cAAA,MAAM,iCAAkCA,CAAK,EAC/CA,CAAA,CAEV,EAYaC,EAAqB,MAAOC,GAAkB,CACrD,GAAA,CAEF,OADiB,MAAMH,EAAc,KAAK,sBAAuBG,CAAQ,GACzD,WACTF,EAAO,CACN,cAAA,MAAM,gCAAiCA,CAAK,EAC9CA,CAAA,CAEV,EAEaG,EAAqB,MAAOC,EAAYF,IAAkB,CACjE,GAAA,CAEF,OADiB,MAAMH,EAAc,IAAI,uBAAuBK,CAAE,GAAIF,CAAQ,GAC9D,WACTF,EAAO,CACN,cAAA,MAAM,gCAAiCA,CAAK,EAC9CA,CAAA,CAEV,EAEaK,EAAqB,MAAOD,GAAe,CAClD,GAAA,CAEF,OADiB,MAAML,EAAc,OAAO,uBAAuBK,CAAE,EAAE,GACvD,WACTJ,EAAO,CACN,cAAA,MAAM,gCAAiCA,CAAK,EAC9CA,CAAA,CAEV,EAEaM,EAAuB,SAAY,CAC1C,GAAA,CAEF,OADiB,MAAMP,EAAc,IAAI,2BAA2B,GACpD,WACTC,EAAO,CACN,cAAA,MAAM,sCAAuCA,CAAK,EACpDA,CAAA,CAEV"}